var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_DEFINES;
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && opt_object !== undefined) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
      value = goog.global.CLOSURE_DEFINES[name];
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.DEBUG) {
    if (!caller) {
      throw Error("arguments.caller not defined.  goog.base() expects not " + "to be running in strict mode. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
    }
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;").replace(goog.string.singleQuoteRe_, "\x26#39;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.singleQuoteRe_, "\x26#39;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /"/g;
goog.string.singleQuoteRe_ = /'/g;
goog.string.allRe_ = /[&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2227";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__16885__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__16885 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__16885__delegate.call(this, args);
    };
    G__16885.cljs$lang$maxFixedArity = 0;
    G__16885.cljs$lang$applyTo = function(arglist__16886) {
      var args = cljs.core.seq(arglist__16886);
      return G__16885__delegate(args);
    };
    G__16885.cljs$core$IFn$_invoke$arity$variadic = G__16885__delegate;
    return G__16885;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3529__auto__ = ty;
    if (cljs.core.truth_(and__3529__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3529__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s;
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4397__auto___16887 = len;
  var i_16888 = 0;
  while (true) {
    if (i_16888 < n__4397__auto___16887) {
      new_arr[i_16888] = arr[i_16888];
      var G__16889 = i_16888 + 1;
      i_16888 = G__16889;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__16890__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__16890 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__16890__delegate.call(this, array, i, idxs);
    };
    G__16890.cljs$lang$maxFixedArity = 2;
    G__16890.cljs$lang$applyTo = function(arglist__16891) {
      var array = cljs.core.first(arglist__16891);
      arglist__16891 = cljs.core.next(arglist__16891);
      var i = cljs.core.first(arglist__16891);
      var idxs = cljs.core.rest(arglist__16891);
      return G__16890__delegate(array, i, idxs);
    };
    G__16890.cljs$core$IFn$_invoke$arity$variadic = G__16890__delegate;
    return G__16890;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__16892__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__16892 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__16892__delegate.call(this, array, idx, idx2, idxv);
    };
    G__16892.cljs$lang$maxFixedArity = 3;
    G__16892.cljs$lang$applyTo = function(arglist__16893) {
      var array = cljs.core.first(arglist__16893);
      arglist__16893 = cljs.core.next(arglist__16893);
      var idx = cljs.core.first(arglist__16893);
      arglist__16893 = cljs.core.next(arglist__16893);
      var idx2 = cljs.core.first(arglist__16893);
      var idxv = cljs.core.rest(arglist__16893);
      return G__16892__delegate(array, idx, idx2, idxv);
    };
    G__16892.cljs$core$IFn$_invoke$arity$variadic = G__16892__delegate;
    return G__16892;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj16895 = {};
  return obj16895;
}();
cljs.core.IFn = function() {
  var obj16897 = {};
  return obj16897;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj16899 = {};
  return obj16899;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3529__auto__ = value;
    if (and__3529__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4168__auto__ = value == null ? null : value;
    return function() {
      var or__3541__auto__ = cljs.core._clone[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._clone["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj16901 = {};
  return obj16901;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._count[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._count["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj16903 = {};
  return obj16903;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._empty[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._empty["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj16905 = {};
  return obj16905;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._conj[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._conj["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj16907 = {};
  return obj16907;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3529__auto__ = coll;
      if (and__3529__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4168__auto__ = coll == null ? null : coll;
      return function() {
        var or__3541__auto__ = cljs.core._nth[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._nth["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3529__auto__ = coll;
      if (and__3529__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4168__auto__ = coll == null ? null : coll;
      return function() {
        var or__3541__auto__ = cljs.core._nth[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._nth["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj16909 = {};
  return obj16909;
}();
cljs.core.ISeq = function() {
  var obj16911 = {};
  return obj16911;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._first[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._first["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._rest[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._rest["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj16913 = {};
  return obj16913;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._next[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._next["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj16915 = {};
  return obj16915;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3529__auto__ = o;
      if (and__3529__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4168__auto__ = o == null ? null : o;
      return function() {
        var or__3541__auto__ = cljs.core._lookup[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._lookup["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3529__auto__ = o;
      if (and__3529__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4168__auto__ = o == null ? null : o;
      return function() {
        var or__3541__auto__ = cljs.core._lookup[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._lookup["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj16917 = {};
  return obj16917;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._assoc[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._assoc["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj16919 = {};
  return obj16919;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._dissoc[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._dissoc["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj16921 = {};
  return obj16921;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._key[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._key["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._val[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._val["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj16923 = {};
  return obj16923;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._disjoin[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._disjoin["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj16925 = {};
  return obj16925;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._peek[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._peek["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._pop[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._pop["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj16927 = {};
  return obj16927;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._assoc_n[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj16929 = {};
  return obj16929;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._deref[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._deref["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj16931 = {};
  return obj16931;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj16933 = {};
  return obj16933;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._meta[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._meta["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj16935 = {};
  return obj16935;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._with_meta[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._with_meta["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj16937 = {};
  return obj16937;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3529__auto__ = coll;
      if (and__3529__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4168__auto__ = coll == null ? null : coll;
      return function() {
        var or__3541__auto__ = cljs.core._reduce[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._reduce["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3529__auto__ = coll;
      if (and__3529__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4168__auto__ = coll == null ? null : coll;
      return function() {
        var or__3541__auto__ = cljs.core._reduce[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._reduce["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj16939 = {};
  return obj16939;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj16941 = {};
  return obj16941;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._equiv[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._equiv["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj16943 = {};
  return obj16943;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._hash[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._hash["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj16945 = {};
  return obj16945;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._seq[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._seq["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj16947 = {};
  return obj16947;
}();
cljs.core.IList = function() {
  var obj16949 = {};
  return obj16949;
}();
cljs.core.IRecord = function() {
  var obj16951 = {};
  return obj16951;
}();
cljs.core.IReversible = function() {
  var obj16953 = {};
  return obj16953;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._rseq[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._rseq["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj16955 = {};
  return obj16955;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._entry_key[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._entry_key["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._comparator[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._comparator["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj16957 = {};
  return obj16957;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3529__auto__ = writer;
    if (and__3529__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4168__auto__ = writer == null ? null : writer;
    return function() {
      var or__3541__auto__ = cljs.core._write[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._write["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3529__auto__ = writer;
    if (and__3529__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4168__auto__ = writer == null ? null : writer;
    return function() {
      var or__3541__auto__ = cljs.core._flush[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._flush["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj16959 = {};
  return obj16959;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._pr_writer[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj16961 = {};
  return obj16961;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3529__auto__ = d;
    if (and__3529__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4168__auto__ = d == null ? null : d;
    return function() {
      var or__3541__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj16963 = {};
  return obj16963;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = cljs.core._notify_watches[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = cljs.core._add_watch[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._add_watch["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = cljs.core._remove_watch[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj16965 = {};
  return obj16965;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._as_transient[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._as_transient["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj16967 = {};
  return obj16967;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3529__auto__ = tcoll;
    if (and__3529__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4168__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3541__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3529__auto__ = tcoll;
    if (and__3529__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4168__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3541__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj16969 = {};
  return obj16969;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3529__auto__ = tcoll;
    if (and__3529__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4168__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3541__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj16971 = {};
  return obj16971;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3529__auto__ = tcoll;
    if (and__3529__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4168__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3541__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj16973 = {};
  return obj16973;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3529__auto__ = tcoll;
    if (and__3529__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4168__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3541__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3529__auto__ = tcoll;
    if (and__3529__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4168__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3541__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj16975 = {};
  return obj16975;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3529__auto__ = tcoll;
    if (and__3529__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4168__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3541__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj16977 = {};
  return obj16977;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = cljs.core._compare[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._compare["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj16979 = {};
  return obj16979;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._drop_first[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._drop_first["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj16981 = {};
  return obj16981;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._chunked_first[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj16983 = {};
  return obj16983;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._chunked_next[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj16985 = {};
  return obj16985;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = cljs.core._name[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._name["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = cljs.core._namespace[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._namespace["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3529__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3529__auto__) {
        return b.ns;
      } else {
        return and__3529__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3952__auto__ = self__._hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__16987 = null;
  var G__16987__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__16987__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__16987 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16987__2.call(this, self__, coll);
      case 3:
        return G__16987__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__16987;
}();
cljs.core.Symbol.prototype.apply = function(self__, args16986) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args16986)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__16989 = value;
  if (G__16989) {
    var bit__4191__auto__ = G__16989.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4191__auto__ || G__16989.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__16989.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__16989);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__16989);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__16991 = coll;
      if (G__16991) {
        var bit__4184__auto__ = G__16991.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4184__auto__ || G__16991.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll) + " is not ISeqable");
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__16993 = coll;
      if (G__16993) {
        var bit__4184__auto__ = G__16993.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4184__auto__ || G__16993.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__16995 = coll;
      if (G__16995) {
        var bit__4184__auto__ = G__16995.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4184__auto__ || G__16995.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__16997 = coll;
      if (G__16997) {
        var bit__4184__auto__ = G__16997.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4184__auto__ || G__16997.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__16998__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__16999 = y;
            var G__17000 = cljs.core.first.call(null, more);
            var G__17001 = cljs.core.next.call(null, more);
            x = G__16999;
            y = G__17000;
            more = G__17001;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__16998 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__16998__delegate.call(this, x, y, more);
    };
    G__16998.cljs$lang$maxFixedArity = 2;
    G__16998.cljs$lang$applyTo = function(arglist__17002) {
      var x = cljs.core.first(arglist__17002);
      arglist__17002 = cljs.core.next(arglist__17002);
      var y = cljs.core.first(arglist__17002);
      var more = cljs.core.rest(arglist__17002);
      return G__16998__delegate(x, y, more);
    };
    G__16998.cljs$core$IFn$_invoke$arity$variadic = G__16998__delegate;
    return G__16998;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__17003 = nval;
            var G__17004 = n + 1;
            val = G__17003;
            n = G__17004;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__17005 = nval;
          var G__17006 = n + 1;
          val__$1 = G__17005;
          n = G__17006;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__17007 = nval;
          var G__17008 = n + 1;
          val__$1 = G__17007;
          n = G__17008;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__17009 = nval;
            var G__17010 = n + 1;
            val = G__17009;
            n = G__17010;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__17011 = nval;
          var G__17012 = n + 1;
          val__$1 = G__17011;
          n = G__17012;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__17013 = nval;
          var G__17014 = n + 1;
          val__$1 = G__17013;
          n = G__17014;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__17016 = x;
  if (G__17016) {
    var bit__4191__auto__ = G__17016.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4191__auto__ || G__17016.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__17016.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__17016);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__17016);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__17018 = x;
  if (G__17018) {
    var bit__4191__auto__ = G__17018.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4191__auto__ || G__17018.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__17018.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__17018);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__17018);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__17019 = sn;
      s = G__17019;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__17020__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__17021 = conj.call(null, coll, x);
          var G__17022 = cljs.core.first.call(null, xs);
          var G__17023 = cljs.core.next.call(null, xs);
          coll = G__17021;
          x = G__17022;
          xs = G__17023;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__17020 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17020__delegate.call(this, coll, x, xs);
    };
    G__17020.cljs$lang$maxFixedArity = 2;
    G__17020.cljs$lang$applyTo = function(arglist__17024) {
      var coll = cljs.core.first(arglist__17024);
      arglist__17024 = cljs.core.next(arglist__17024);
      var x = cljs.core.first(arglist__17024);
      var xs = cljs.core.rest(arglist__17024);
      return G__17020__delegate(coll, x, xs);
    };
    G__17020.cljs$core$IFn$_invoke$arity$variadic = G__17020__delegate;
    return G__17020;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__17025 = cljs.core.next.call(null, s);
      var G__17026 = acc + 1;
      s = G__17025;
      acc = G__17026;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__17028 = coll;
      if (G__17028) {
        var bit__4184__auto__ = G__17028.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4184__auto__ || G__17028.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__17029 = cljs.core.next.call(null, coll);
              var G__17030 = n - 1;
              coll = G__17029;
              n = G__17030;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__17031 = cljs.core.next.call(null, coll);
              var G__17032 = n - 1;
              var G__17033 = not_found;
              coll = G__17031;
              n = G__17032;
              not_found = G__17033;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__17038 = coll;
          if (G__17038) {
            var bit__4184__auto__ = G__17038.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4184__auto__ || G__17038.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__17039 = coll;
                  if (G__17039) {
                    var bit__4191__auto__ = G__17039.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4191__auto__ || G__17039.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__17039.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__17039);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__17039);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__17040 = coll;
          if (G__17040) {
            var bit__4184__auto__ = G__17040.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4184__auto__ || G__17040.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__17041 = coll;
                  if (G__17041) {
                    var bit__4191__auto__ = G__17041.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4191__auto__ || G__17041.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__17041.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__17041);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__17041);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__17044 = o;
        if (G__17044) {
          var bit__4184__auto__ = G__17044.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4184__auto__ || G__17044.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__17045 = o;
        if (G__17045) {
          var bit__4184__auto__ = G__17045.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4184__auto__ || G__17045.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__17046__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__17047 = ret;
          var G__17048 = cljs.core.first.call(null, kvs);
          var G__17049 = cljs.core.second.call(null, kvs);
          var G__17050 = cljs.core.nnext.call(null, kvs);
          coll = G__17047;
          k = G__17048;
          v = G__17049;
          kvs = G__17050;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__17046 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__17046__delegate.call(this, coll, k, v, kvs);
    };
    G__17046.cljs$lang$maxFixedArity = 3;
    G__17046.cljs$lang$applyTo = function(arglist__17051) {
      var coll = cljs.core.first(arglist__17051);
      arglist__17051 = cljs.core.next(arglist__17051);
      var k = cljs.core.first(arglist__17051);
      arglist__17051 = cljs.core.next(arglist__17051);
      var v = cljs.core.first(arglist__17051);
      var kvs = cljs.core.rest(arglist__17051);
      return G__17046__delegate(coll, k, v, kvs);
    };
    G__17046.cljs$core$IFn$_invoke$arity$variadic = G__17046__delegate;
    return G__17046;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__17052__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__17053 = ret;
            var G__17054 = cljs.core.first.call(null, ks);
            var G__17055 = cljs.core.next.call(null, ks);
            coll = G__17053;
            k = G__17054;
            ks = G__17055;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__17052 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17052__delegate.call(this, coll, k, ks);
    };
    G__17052.cljs$lang$maxFixedArity = 2;
    G__17052.cljs$lang$applyTo = function(arglist__17056) {
      var coll = cljs.core.first(arglist__17056);
      arglist__17056 = cljs.core.next(arglist__17056);
      var k = cljs.core.first(arglist__17056);
      var ks = cljs.core.rest(arglist__17056);
      return G__17052__delegate(coll, k, ks);
    };
    G__17052.cljs$core$IFn$_invoke$arity$variadic = G__17052__delegate;
    return G__17052;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3541__auto__ = goog.isFunction(f);
  if (or__3541__auto__) {
    return or__3541__auto__;
  } else {
    var G__17060 = f;
    if (G__17060) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto____$1 = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto____$1)) {
          return or__3541__auto____$1;
        } else {
          return G__17060.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__17060.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__17060);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__17060);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__17068 = o;
    if (G__17068) {
      var bit__4191__auto__ = G__17068.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4191__auto__ || G__17068.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__17068.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__17068);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__17068);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t17069 !== "undefined") {
      } else {
        cljs.core.t17069 = function(meta, o, with_meta, meta17070) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta17070 = meta17070;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t17069.cljs$lang$type = true;
        cljs.core.t17069.cljs$lang$ctorStr = "cljs.core/t17069";
        cljs.core.t17069.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
          return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/t17069");
        };
        cljs.core.t17069.prototype.call = function() {
          var G__17073__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__17073 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__17073__delegate.call(this, self__, args);
          };
          G__17073.cljs$lang$maxFixedArity = 1;
          G__17073.cljs$lang$applyTo = function(arglist__17074) {
            var self__ = cljs.core.first(arglist__17074);
            var args = cljs.core.rest(arglist__17074);
            return G__17073__delegate(self__, args);
          };
          G__17073.cljs$core$IFn$_invoke$arity$variadic = G__17073__delegate;
          return G__17073;
        }();
        cljs.core.t17069.prototype.apply = function(self__, args17072) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17072)));
        };
        cljs.core.t17069.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__17075__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__17075 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__17075__delegate.call(this, args);
          };
          G__17075.cljs$lang$maxFixedArity = 0;
          G__17075.cljs$lang$applyTo = function(arglist__17076) {
            var args = cljs.core.seq(arglist__17076);
            return G__17075__delegate(args);
          };
          G__17075.cljs$core$IFn$_invoke$arity$variadic = G__17075__delegate;
          return G__17075;
        }();
        cljs.core.t17069.prototype.cljs$core$Fn$ = true;
        cljs.core.t17069.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17071) {
          var self__ = this;
          var _17071__$1 = this;
          return self__.meta17070;
        };
        cljs.core.t17069.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17071, meta17070__$1) {
          var self__ = this;
          var _17071__$1 = this;
          return new cljs.core.t17069(self__.meta, self__.o, self__.with_meta, meta17070__$1);
        };
        cljs.core.__GT_t17069 = function __GT_t17069(meta__$1, o__$1, with_meta__$1, meta17070) {
          return new cljs.core.t17069(meta__$1, o__$1, with_meta__$1, meta17070);
        };
      }
      return new cljs.core.t17069(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3529__auto__ = !(o == null);
    if (and__3529__auto__) {
      var G__17080 = o;
      if (G__17080) {
        var bit__4191__auto__ = G__17080.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4191__auto__ || G__17080.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__17080.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__17080);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__17080);
      }
    } else {
      return and__3529__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__17081__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__17082 = ret;
            var G__17083 = cljs.core.first.call(null, ks);
            var G__17084 = cljs.core.next.call(null, ks);
            coll = G__17082;
            k = G__17083;
            ks = G__17084;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__17081 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17081__delegate.call(this, coll, k, ks);
    };
    G__17081.cljs$lang$maxFixedArity = 2;
    G__17081.cljs$lang$applyTo = function(arglist__17085) {
      var coll = cljs.core.first(arglist__17085);
      arglist__17085 = cljs.core.next(arglist__17085);
      var k = cljs.core.first(arglist__17085);
      var ks = cljs.core.rest(arglist__17085);
      return G__17081__delegate(coll, k, ks);
    };
    G__17081.cljs$core$IFn$_invoke$arity$variadic = G__17081__delegate;
    return G__17081;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj17087 = {};
  return obj17087;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj17091 = {};
      return obj17091;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__17093 = o;
    if (G__17093) {
      var bit__4184__auto__ = G__17093.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4184__auto__ || G__17093.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17095 = x;
    if (G__17095) {
      var bit__4191__auto__ = G__17095.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4191__auto__ || G__17095.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__17095.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__17095);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__17095);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17097 = x;
    if (G__17097) {
      var bit__4191__auto__ = G__17097.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4191__auto__ || G__17097.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__17097.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__17097);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__17097);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__17099 = x;
  if (G__17099) {
    var bit__4191__auto__ = G__17099.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4191__auto__ || G__17099.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__17099.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__17099);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__17099);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__17101 = x;
  if (G__17101) {
    var bit__4191__auto__ = G__17101.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4191__auto__ || G__17101.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__17101.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__17101);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__17101);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__17103 = x;
  if (G__17103) {
    var bit__4191__auto__ = G__17103.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4191__auto__ || G__17103.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__17103.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__17103);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__17103);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__17105 = x;
  if (G__17105) {
    var bit__4191__auto__ = G__17105.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4191__auto__ || G__17105.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__17105.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__17105);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__17105);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17107 = x;
    if (G__17107) {
      var bit__4191__auto__ = G__17107.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4191__auto__ || G__17107.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__17107.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__17107);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__17107);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__17109 = x;
  if (G__17109) {
    var bit__4191__auto__ = G__17109.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4191__auto__ || G__17109.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__17109.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__17109);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__17109);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__17111 = x;
  if (G__17111) {
    var bit__4184__auto__ = G__17111.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4184__auto__ || G__17111.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj17115 = {};
    return obj17115;
  };
  var js_obj__1 = function() {
    var G__17116__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__17116 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__17116__delegate.call(this, keyvals);
    };
    G__17116.cljs$lang$maxFixedArity = 0;
    G__17116.cljs$lang$applyTo = function(arglist__17117) {
      var keyvals = cljs.core.seq(arglist__17117);
      return G__17116__delegate(keyvals);
    };
    G__17116.cljs$core$IFn$_invoke$arity$variadic = G__17116__delegate;
    return G__17116;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__17118 = i__$1 + 1;
      var G__17119 = j__$1 + 1;
      var G__17120 = len__$1 - 1;
      i__$1 = G__17118;
      j__$1 = G__17119;
      len__$1 = G__17120;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__17121 = i__$1 - 1;
      var G__17122 = j__$1 - 1;
      var G__17123 = len__$1 - 1;
      i__$1 = G__17121;
      j__$1 = G__17122;
      len__$1 = G__17123;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj17125 = {};
  return obj17125;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__17127 = s;
    if (G__17127) {
      var bit__4191__auto__ = G__17127.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4191__auto__ || G__17127.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__17127.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__17127);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__17127);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__17129 = s;
  if (G__17129) {
    var bit__4191__auto__ = G__17129.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4191__auto__ || G__17129.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__17129.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__17129);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__17129);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3541__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3541__auto__) {
    return or__3541__auto__;
  } else {
    var G__17133 = f;
    if (G__17133) {
      var bit__4191__auto__ = G__17133.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4191__auto__ || G__17133.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__17133.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__17133);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__17133);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__17134__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__17135 = cljs.core.conj.call(null, s, x__$1);
              var G__17136 = etc;
              s = G__17135;
              xs = G__17136;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__17134 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17134__delegate.call(this, x, y, more);
    };
    G__17134.cljs$lang$maxFixedArity = 2;
    G__17134.cljs$lang$applyTo = function(arglist__17137) {
      var x = cljs.core.first(arglist__17137);
      arglist__17137 = cljs.core.next(arglist__17137);
      var y = cljs.core.first(arglist__17137);
      var more = cljs.core.rest(arglist__17137);
      return G__17134__delegate(x, y, more);
    };
    G__17134.cljs$core$IFn$_invoke$arity$variadic = G__17134__delegate;
    return G__17134;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3541__auto__ = cljs.core.seq.call(null, coll);
    if (or__3541__auto__) {
      return or__3541__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__17139 = x;
            if (G__17139) {
              var bit__4184__auto__ = G__17139.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4184__auto__ || G__17139.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__17140 = xs;
        var G__17141 = ys;
        var G__17142 = len;
        var G__17143 = n + 1;
        xs = G__17140;
        ys = G__17141;
        len = G__17142;
        n = G__17143;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__17144 = nval;
          var G__17145 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__17144;
          coll__$1 = G__17145;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__17148 = coll;
      if (G__17148) {
        var bit__4184__auto__ = G__17148.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4184__auto__ || G__17148.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__17149 = coll;
      if (G__17149) {
        var bit__4184__auto__ = G__17149.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4184__auto__ || G__17149.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__17150__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__17150 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17150__delegate.call(this, x, y, more);
    };
    G__17150.cljs$lang$maxFixedArity = 2;
    G__17150.cljs$lang$applyTo = function(arglist__17151) {
      var x = cljs.core.first(arglist__17151);
      arglist__17151 = cljs.core.next(arglist__17151);
      var y = cljs.core.first(arglist__17151);
      var more = cljs.core.rest(arglist__17151);
      return G__17150__delegate(x, y, more);
    };
    G__17150.cljs$core$IFn$_invoke$arity$variadic = G__17150__delegate;
    return G__17150;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__17152__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__17152 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17152__delegate.call(this, x, y, more);
    };
    G__17152.cljs$lang$maxFixedArity = 2;
    G__17152.cljs$lang$applyTo = function(arglist__17153) {
      var x = cljs.core.first(arglist__17153);
      arglist__17153 = cljs.core.next(arglist__17153);
      var y = cljs.core.first(arglist__17153);
      var more = cljs.core.rest(arglist__17153);
      return G__17152__delegate(x, y, more);
    };
    G__17152.cljs$core$IFn$_invoke$arity$variadic = G__17152__delegate;
    return G__17152;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__17154__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__17154 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17154__delegate.call(this, x, y, more);
    };
    G__17154.cljs$lang$maxFixedArity = 2;
    G__17154.cljs$lang$applyTo = function(arglist__17155) {
      var x = cljs.core.first(arglist__17155);
      arglist__17155 = cljs.core.next(arglist__17155);
      var y = cljs.core.first(arglist__17155);
      var more = cljs.core.rest(arglist__17155);
      return G__17154__delegate(x, y, more);
    };
    G__17154.cljs$core$IFn$_invoke$arity$variadic = G__17154__delegate;
    return G__17154;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__17156__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__17156 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17156__delegate.call(this, x, y, more);
    };
    G__17156.cljs$lang$maxFixedArity = 2;
    G__17156.cljs$lang$applyTo = function(arglist__17157) {
      var x = cljs.core.first(arglist__17157);
      arglist__17157 = cljs.core.next(arglist__17157);
      var y = cljs.core.first(arglist__17157);
      var more = cljs.core.rest(arglist__17157);
      return G__17156__delegate(x, y, more);
    };
    G__17156.cljs$core$IFn$_invoke$arity$variadic = G__17156__delegate;
    return G__17156;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__17158__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__17159 = y;
            var G__17160 = cljs.core.first.call(null, more);
            var G__17161 = cljs.core.next.call(null, more);
            x = G__17159;
            y = G__17160;
            more = G__17161;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17158 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17158__delegate.call(this, x, y, more);
    };
    G__17158.cljs$lang$maxFixedArity = 2;
    G__17158.cljs$lang$applyTo = function(arglist__17162) {
      var x = cljs.core.first(arglist__17162);
      arglist__17162 = cljs.core.next(arglist__17162);
      var y = cljs.core.first(arglist__17162);
      var more = cljs.core.rest(arglist__17162);
      return G__17158__delegate(x, y, more);
    };
    G__17158.cljs$core$IFn$_invoke$arity$variadic = G__17158__delegate;
    return G__17158;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__17163__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__17164 = y;
            var G__17165 = cljs.core.first.call(null, more);
            var G__17166 = cljs.core.next.call(null, more);
            x = G__17164;
            y = G__17165;
            more = G__17166;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17163 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17163__delegate.call(this, x, y, more);
    };
    G__17163.cljs$lang$maxFixedArity = 2;
    G__17163.cljs$lang$applyTo = function(arglist__17167) {
      var x = cljs.core.first(arglist__17167);
      arglist__17167 = cljs.core.next(arglist__17167);
      var y = cljs.core.first(arglist__17167);
      var more = cljs.core.rest(arglist__17167);
      return G__17163__delegate(x, y, more);
    };
    G__17163.cljs$core$IFn$_invoke$arity$variadic = G__17163__delegate;
    return G__17163;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__17168__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__17169 = y;
            var G__17170 = cljs.core.first.call(null, more);
            var G__17171 = cljs.core.next.call(null, more);
            x = G__17169;
            y = G__17170;
            more = G__17171;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17168 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17168__delegate.call(this, x, y, more);
    };
    G__17168.cljs$lang$maxFixedArity = 2;
    G__17168.cljs$lang$applyTo = function(arglist__17172) {
      var x = cljs.core.first(arglist__17172);
      arglist__17172 = cljs.core.next(arglist__17172);
      var y = cljs.core.first(arglist__17172);
      var more = cljs.core.rest(arglist__17172);
      return G__17168__delegate(x, y, more);
    };
    G__17168.cljs$core$IFn$_invoke$arity$variadic = G__17168__delegate;
    return G__17168;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__17173__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__17174 = y;
            var G__17175 = cljs.core.first.call(null, more);
            var G__17176 = cljs.core.next.call(null, more);
            x = G__17174;
            y = G__17175;
            more = G__17176;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17173 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17173__delegate.call(this, x, y, more);
    };
    G__17173.cljs$lang$maxFixedArity = 2;
    G__17173.cljs$lang$applyTo = function(arglist__17177) {
      var x = cljs.core.first(arglist__17177);
      arglist__17177 = cljs.core.next(arglist__17177);
      var y = cljs.core.first(arglist__17177);
      var more = cljs.core.rest(arglist__17177);
      return G__17173__delegate(x, y, more);
    };
    G__17173.cljs$core$IFn$_invoke$arity$variadic = G__17173__delegate;
    return G__17173;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3848__auto__ = x;
    var y__3849__auto__ = y;
    return x__3848__auto__ > y__3849__auto__ ? x__3848__auto__ : y__3849__auto__;
  };
  var max__3 = function() {
    var G__17178__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3848__auto__ = x;
        var y__3849__auto__ = y;
        return x__3848__auto__ > y__3849__auto__ ? x__3848__auto__ : y__3849__auto__;
      }(), more);
    };
    var G__17178 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17178__delegate.call(this, x, y, more);
    };
    G__17178.cljs$lang$maxFixedArity = 2;
    G__17178.cljs$lang$applyTo = function(arglist__17179) {
      var x = cljs.core.first(arglist__17179);
      arglist__17179 = cljs.core.next(arglist__17179);
      var y = cljs.core.first(arglist__17179);
      var more = cljs.core.rest(arglist__17179);
      return G__17178__delegate(x, y, more);
    };
    G__17178.cljs$core$IFn$_invoke$arity$variadic = G__17178__delegate;
    return G__17178;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3855__auto__ = x;
    var y__3856__auto__ = y;
    return x__3855__auto__ < y__3856__auto__ ? x__3855__auto__ : y__3856__auto__;
  };
  var min__3 = function() {
    var G__17180__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3855__auto__ = x;
        var y__3856__auto__ = y;
        return x__3855__auto__ < y__3856__auto__ ? x__3855__auto__ : y__3856__auto__;
      }(), more);
    };
    var G__17180 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17180__delegate.call(this, x, y, more);
    };
    G__17180.cljs$lang$maxFixedArity = 2;
    G__17180.cljs$lang$applyTo = function(arglist__17181) {
      var x = cljs.core.first(arglist__17181);
      arglist__17181 = cljs.core.next(arglist__17181);
      var y = cljs.core.first(arglist__17181);
      var more = cljs.core.rest(arglist__17181);
      return G__17180__delegate(x, y, more);
    };
    G__17180.cljs$core$IFn$_invoke$arity$variadic = G__17180__delegate;
    return G__17180;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__17182__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__17182 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17182__delegate.call(this, x, y, more);
    };
    G__17182.cljs$lang$maxFixedArity = 2;
    G__17182.cljs$lang$applyTo = function(arglist__17183) {
      var x = cljs.core.first(arglist__17183);
      arglist__17183 = cljs.core.next(arglist__17183);
      var y = cljs.core.first(arglist__17183);
      var more = cljs.core.rest(arglist__17183);
      return G__17182__delegate(x, y, more);
    };
    G__17182.cljs$core$IFn$_invoke$arity$variadic = G__17182__delegate;
    return G__17182;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__17184__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__17184 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17184__delegate.call(this, x, y, more);
    };
    G__17184.cljs$lang$maxFixedArity = 2;
    G__17184.cljs$lang$applyTo = function(arglist__17185) {
      var x = cljs.core.first(arglist__17185);
      arglist__17185 = cljs.core.next(arglist__17185);
      var y = cljs.core.first(arglist__17185);
      var more = cljs.core.rest(arglist__17185);
      return G__17184__delegate(x, y, more);
    };
    G__17184.cljs$core$IFn$_invoke$arity$variadic = G__17184__delegate;
    return G__17184;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__17186__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__17186 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17186__delegate.call(this, x, y, more);
    };
    G__17186.cljs$lang$maxFixedArity = 2;
    G__17186.cljs$lang$applyTo = function(arglist__17187) {
      var x = cljs.core.first(arglist__17187);
      arglist__17187 = cljs.core.next(arglist__17187);
      var y = cljs.core.first(arglist__17187);
      var more = cljs.core.rest(arglist__17187);
      return G__17186__delegate(x, y, more);
    };
    G__17186.cljs$core$IFn$_invoke$arity$variadic = G__17186__delegate;
    return G__17186;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__17188__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__17188 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17188__delegate.call(this, x, y, more);
    };
    G__17188.cljs$lang$maxFixedArity = 2;
    G__17188.cljs$lang$applyTo = function(arglist__17189) {
      var x = cljs.core.first(arglist__17189);
      arglist__17189 = cljs.core.next(arglist__17189);
      var y = cljs.core.first(arglist__17189);
      var more = cljs.core.rest(arglist__17189);
      return G__17188__delegate(x, y, more);
    };
    G__17188.cljs$core$IFn$_invoke$arity$variadic = G__17188__delegate;
    return G__17188;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__17190__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__17190 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17190__delegate.call(this, x, y, more);
    };
    G__17190.cljs$lang$maxFixedArity = 2;
    G__17190.cljs$lang$applyTo = function(arglist__17191) {
      var x = cljs.core.first(arglist__17191);
      arglist__17191 = cljs.core.next(arglist__17191);
      var y = cljs.core.first(arglist__17191);
      var more = cljs.core.rest(arglist__17191);
      return G__17190__delegate(x, y, more);
    };
    G__17190.cljs$core$IFn$_invoke$arity$variadic = G__17190__delegate;
    return G__17190;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__17192__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__17192 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17192__delegate.call(this, x, y, more);
    };
    G__17192.cljs$lang$maxFixedArity = 2;
    G__17192.cljs$lang$applyTo = function(arglist__17193) {
      var x = cljs.core.first(arglist__17193);
      arglist__17193 = cljs.core.next(arglist__17193);
      var y = cljs.core.first(arglist__17193);
      var more = cljs.core.rest(arglist__17193);
      return G__17192__delegate(x, y, more);
    };
    G__17192.cljs$core$IFn$_invoke$arity$variadic = G__17192__delegate;
    return G__17192;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__17194__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__17194 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17194__delegate.call(this, x, y, more);
    };
    G__17194.cljs$lang$maxFixedArity = 2;
    G__17194.cljs$lang$applyTo = function(arglist__17195) {
      var x = cljs.core.first(arglist__17195);
      arglist__17195 = cljs.core.next(arglist__17195);
      var y = cljs.core.first(arglist__17195);
      var more = cljs.core.rest(arglist__17195);
      return G__17194__delegate(x, y, more);
    };
    G__17194.cljs$core$IFn$_invoke$arity$variadic = G__17194__delegate;
    return G__17194;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__17196__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__17197 = y;
            var G__17198 = cljs.core.first.call(null, more);
            var G__17199 = cljs.core.next.call(null, more);
            x = G__17197;
            y = G__17198;
            more = G__17199;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17196 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17196__delegate.call(this, x, y, more);
    };
    G__17196.cljs$lang$maxFixedArity = 2;
    G__17196.cljs$lang$applyTo = function(arglist__17200) {
      var x = cljs.core.first(arglist__17200);
      arglist__17200 = cljs.core.next(arglist__17200);
      var y = cljs.core.first(arglist__17200);
      var more = cljs.core.rest(arglist__17200);
      return G__17196__delegate(x, y, more);
    };
    G__17196.cljs$core$IFn$_invoke$arity$variadic = G__17196__delegate;
    return G__17196;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__17201 = n__$1 - 1;
      var G__17202 = cljs.core.next.call(null, xs);
      n__$1 = G__17201;
      xs = G__17202;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__17203__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__17204 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__17205 = cljs.core.next.call(null, more);
          sb = G__17204;
          more = G__17205;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__17203 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__17203__delegate.call(this, x, ys);
    };
    G__17203.cljs$lang$maxFixedArity = 1;
    G__17203.cljs$lang$applyTo = function(arglist__17206) {
      var x = cljs.core.first(arglist__17206);
      var ys = cljs.core.rest(arglist__17206);
      return G__17203__delegate(x, ys);
    };
    G__17203.cljs$core$IFn$_invoke$arity$variadic = G__17203__delegate;
    return G__17203;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__17207 = cljs.core.next.call(null, xs);
            var G__17208 = cljs.core.next.call(null, ys);
            xs = G__17207;
            ys = G__17208;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__17209 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__17210 = cljs.core.next.call(null, s);
        res = G__17209;
        s = G__17210;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__17211 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__17212 = cljs.core.next.call(null, s);
      h = G__17211;
      s = G__17212;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__17213 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__17214 = cljs.core.next.call(null, s__$1);
      h = G__17213;
      s__$1 = G__17214;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__17221_17227 = cljs.core.seq.call(null, fn_map);
  var chunk__17222_17228 = null;
  var count__17223_17229 = 0;
  var i__17224_17230 = 0;
  while (true) {
    if (i__17224_17230 < count__17223_17229) {
      var vec__17225_17231 = cljs.core._nth.call(null, chunk__17222_17228, i__17224_17230);
      var key_name_17232 = cljs.core.nth.call(null, vec__17225_17231, 0, null);
      var f_17233 = cljs.core.nth.call(null, vec__17225_17231, 1, null);
      var str_name_17234 = cljs.core.name.call(null, key_name_17232);
      obj[str_name_17234] = f_17233;
      var G__17235 = seq__17221_17227;
      var G__17236 = chunk__17222_17228;
      var G__17237 = count__17223_17229;
      var G__17238 = i__17224_17230 + 1;
      seq__17221_17227 = G__17235;
      chunk__17222_17228 = G__17236;
      count__17223_17229 = G__17237;
      i__17224_17230 = G__17238;
      continue;
    } else {
      var temp__4092__auto___17239 = cljs.core.seq.call(null, seq__17221_17227);
      if (temp__4092__auto___17239) {
        var seq__17221_17240__$1 = temp__4092__auto___17239;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17221_17240__$1)) {
          var c__4297__auto___17241 = cljs.core.chunk_first.call(null, seq__17221_17240__$1);
          var G__17242 = cljs.core.chunk_rest.call(null, seq__17221_17240__$1);
          var G__17243 = c__4297__auto___17241;
          var G__17244 = cljs.core.count.call(null, c__4297__auto___17241);
          var G__17245 = 0;
          seq__17221_17227 = G__17242;
          chunk__17222_17228 = G__17243;
          count__17223_17229 = G__17244;
          i__17224_17230 = G__17245;
          continue;
        } else {
          var vec__17226_17246 = cljs.core.first.call(null, seq__17221_17240__$1);
          var key_name_17247 = cljs.core.nth.call(null, vec__17226_17246, 0, null);
          var f_17248 = cljs.core.nth.call(null, vec__17226_17246, 1, null);
          var str_name_17249 = cljs.core.name.call(null, key_name_17247);
          obj[str_name_17249] = f_17248;
          var G__17250 = cljs.core.next.call(null, seq__17221_17240__$1);
          var G__17251 = null;
          var G__17252 = 0;
          var G__17253 = 0;
          seq__17221_17227 = G__17250;
          chunk__17222_17228 = G__17251;
          count__17223_17229 = G__17252;
          i__17224_17230 = G__17253;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/List");
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__17255 = coll;
  if (G__17255) {
    var bit__4191__auto__ = G__17255.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4191__auto__ || G__17255.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__17255.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__17255);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__17255);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__17256 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__17256;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__17257 = i - 1;
        var G__17258 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__17257;
        r = G__17258;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__17259) {
    var xs = cljs.core.seq(arglist__17259);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3541__auto__ = coll == null;
    if (or__3541__auto__) {
      return or__3541__auto__;
    } else {
      var G__17263 = coll;
      if (G__17263) {
        var bit__4184__auto__ = G__17263.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4184__auto__ || G__17263.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__17265 = x;
  if (G__17265) {
    var bit__4191__auto__ = G__17265.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4191__auto__ || G__17265.cljs$core$IList$) {
      return true;
    } else {
      if (!G__17265.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__17265);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__17265);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__17267 = null;
  var G__17267__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__17267__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__17267 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17267__2.call(this, self__, coll);
      case 3:
        return G__17267__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17267;
}();
cljs.core.Keyword.prototype.apply = function(self__, args17266) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17266)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn);
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__17269 = x;
    if (G__17269) {
      var bit__4184__auto__ = G__17269.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4184__auto__ || G__17269.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error("Doesn't support namespace: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" : null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__17270 = ls.sval();
        ls = G__17270;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__17272 = s;
    if (G__17272) {
      var bit__4184__auto__ = G__17272.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4184__auto__ || G__17272.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__17273 = cljs.core.next.call(null, s__$1);
      s__$1 = G__17273;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_17274 = 0;
  var xs_17275 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_17275) {
      ret[i_17274] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_17275));
      var G__17276 = i_17274 + 1;
      var G__17277 = cljs.core.next.call(null, xs_17275);
      i_17274 = G__17276;
      xs_17275 = G__17277;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__17278 = i + 1;
          var G__17279 = cljs.core.next.call(null, s__$1);
          i = G__17278;
          s__$1 = G__17279;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4397__auto___17280 = size;
      var i_17281 = 0;
      while (true) {
        if (i_17281 < n__4397__auto___17280) {
          a[i_17281] = init_val_or_seq;
          var G__17282 = i_17281 + 1;
          i_17281 = G__17282;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__17283 = i + 1;
          var G__17284 = cljs.core.next.call(null, s__$1);
          i = G__17283;
          s__$1 = G__17284;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4397__auto___17285 = size;
      var i_17286 = 0;
      while (true) {
        if (i_17286 < n__4397__auto___17285) {
          a[i_17286] = init_val_or_seq;
          var G__17287 = i_17286 + 1;
          i_17286 = G__17287;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__17288 = i + 1;
          var G__17289 = cljs.core.next.call(null, s__$1);
          i = G__17288;
          s__$1 = G__17289;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4397__auto___17290 = size;
      var i_17291 = 0;
      while (true) {
        if (i_17291 < n__4397__auto___17290) {
          a[i_17291] = init_val_or_seq;
          var G__17292 = i_17291 + 1;
          i_17291 = G__17292;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__17293 = i + 1;
          var G__17294 = cljs.core.next.call(null, s__$1);
          i = G__17293;
          s__$1 = G__17294;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4397__auto___17295 = size;
      var i_17296 = 0;
      while (true) {
        if (i_17296 < n__4397__auto___17295) {
          a[i_17296] = init_val_or_seq;
          var G__17297 = i_17296 + 1;
          i_17296 = G__17297;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__17298 = cljs.core.next.call(null, s__$1);
        var G__17299 = i - 1;
        var G__17300 = sum + 1;
        s__$1 = G__17298;
        i = G__17299;
        sum = G__17300;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__17301__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__17301 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17301__delegate.call(this, x, y, zs);
    };
    G__17301.cljs$lang$maxFixedArity = 2;
    G__17301.cljs$lang$applyTo = function(arglist__17302) {
      var x = cljs.core.first(arglist__17302);
      arglist__17302 = cljs.core.next(arglist__17302);
      var y = cljs.core.first(arglist__17302);
      var zs = cljs.core.rest(arglist__17302);
      return G__17301__delegate(x, y, zs);
    };
    G__17301.cljs$core$IFn$_invoke$arity$variadic = G__17301__delegate;
    return G__17301;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__17303__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__17303 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__17303__delegate.call(this, a, b, c, d, more);
    };
    G__17303.cljs$lang$maxFixedArity = 4;
    G__17303.cljs$lang$applyTo = function(arglist__17304) {
      var a = cljs.core.first(arglist__17304);
      arglist__17304 = cljs.core.next(arglist__17304);
      var b = cljs.core.first(arglist__17304);
      arglist__17304 = cljs.core.next(arglist__17304);
      var c = cljs.core.first(arglist__17304);
      arglist__17304 = cljs.core.next(arglist__17304);
      var d = cljs.core.first(arglist__17304);
      var more = cljs.core.rest(arglist__17304);
      return G__17303__delegate(a, b, c, d, more);
    };
    G__17303.cljs$core$IFn$_invoke$arity$variadic = G__17303__delegate;
    return G__17303;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__17305__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__17306 = ntcoll;
          var G__17307 = cljs.core.first.call(null, vals);
          var G__17308 = cljs.core.next.call(null, vals);
          tcoll = G__17306;
          val = G__17307;
          vals = G__17308;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17305 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17305__delegate.call(this, tcoll, val, vals);
    };
    G__17305.cljs$lang$maxFixedArity = 2;
    G__17305.cljs$lang$applyTo = function(arglist__17309) {
      var tcoll = cljs.core.first(arglist__17309);
      arglist__17309 = cljs.core.next(arglist__17309);
      var val = cljs.core.first(arglist__17309);
      var vals = cljs.core.rest(arglist__17309);
      return G__17305__delegate(tcoll, val, vals);
    };
    G__17305.cljs$core$IFn$_invoke$arity$variadic = G__17305__delegate;
    return G__17305;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__17310__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__17311 = ntcoll;
          var G__17312 = cljs.core.first.call(null, kvs);
          var G__17313 = cljs.core.second.call(null, kvs);
          var G__17314 = cljs.core.nnext.call(null, kvs);
          tcoll = G__17311;
          key = G__17312;
          val = G__17313;
          kvs = G__17314;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17310 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__17310__delegate.call(this, tcoll, key, val, kvs);
    };
    G__17310.cljs$lang$maxFixedArity = 3;
    G__17310.cljs$lang$applyTo = function(arglist__17315) {
      var tcoll = cljs.core.first(arglist__17315);
      arglist__17315 = cljs.core.next(arglist__17315);
      var key = cljs.core.first(arglist__17315);
      arglist__17315 = cljs.core.next(arglist__17315);
      var val = cljs.core.first(arglist__17315);
      var kvs = cljs.core.rest(arglist__17315);
      return G__17310__delegate(tcoll, key, val, kvs);
    };
    G__17310.cljs$core$IFn$_invoke$arity$variadic = G__17310__delegate;
    return G__17310;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__17316__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__17317 = ntcoll;
          var G__17318 = cljs.core.first.call(null, ks);
          var G__17319 = cljs.core.next.call(null, ks);
          tcoll = G__17317;
          key = G__17318;
          ks = G__17319;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17316 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17316__delegate.call(this, tcoll, key, ks);
    };
    G__17316.cljs$lang$maxFixedArity = 2;
    G__17316.cljs$lang$applyTo = function(arglist__17320) {
      var tcoll = cljs.core.first(arglist__17320);
      arglist__17320 = cljs.core.next(arglist__17320);
      var key = cljs.core.first(arglist__17320);
      var ks = cljs.core.rest(arglist__17320);
      return G__17316__delegate(tcoll, key, ks);
    };
    G__17316.cljs$core$IFn$_invoke$arity$variadic = G__17316__delegate;
    return G__17316;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__17321__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__17322 = ntcoll;
          var G__17323 = cljs.core.first.call(null, vals);
          var G__17324 = cljs.core.next.call(null, vals);
          tcoll = G__17322;
          val = G__17323;
          vals = G__17324;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17321 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17321__delegate.call(this, tcoll, val, vals);
    };
    G__17321.cljs$lang$maxFixedArity = 2;
    G__17321.cljs$lang$applyTo = function(arglist__17325) {
      var tcoll = cljs.core.first(arglist__17325);
      arglist__17325 = cljs.core.next(arglist__17325);
      var val = cljs.core.first(arglist__17325);
      var vals = cljs.core.rest(arglist__17325);
      return G__17321__delegate(tcoll, val, vals);
    };
    G__17321.cljs$core$IFn$_invoke$arity$variadic = G__17321__delegate;
    return G__17321;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4441 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4441);
      } else {
        return f.call(null, a4441);
      }
    } else {
      var b4442 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4441, b4442);
        } else {
          return f.call(null, a4441, b4442);
        }
      } else {
        var c4443 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4441, b4442, c4443);
          } else {
            return f.call(null, a4441, b4442, c4443);
          }
        } else {
          var d4444 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4441, b4442, c4443, d4444);
            } else {
              return f.call(null, a4441, b4442, c4443, d4444);
            }
          } else {
            var e4445 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4441, b4442, c4443, d4444, e4445);
              } else {
                return f.call(null, a4441, b4442, c4443, d4444, e4445);
              }
            } else {
              var f4446 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4441, b4442, c4443, d4444, e4445, f4446);
                } else {
                  return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446);
                }
              } else {
                var g4447 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4441, b4442, c4443, d4444, e4445, f4446, g4447);
                  } else {
                    return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447);
                  }
                } else {
                  var h4448 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448);
                    } else {
                      return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448);
                    }
                  } else {
                    var i4449 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449);
                      } else {
                        return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449);
                      }
                    } else {
                      var j4450 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450);
                        } else {
                          return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450);
                        }
                      } else {
                        var k4451 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451);
                          } else {
                            return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451);
                          }
                        } else {
                          var l4452 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452);
                            } else {
                              return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452);
                            }
                          } else {
                            var m4453 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453);
                              } else {
                                return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453);
                              }
                            } else {
                              var n4454 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454);
                                } else {
                                  return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454);
                                }
                              } else {
                                var o4455 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455);
                                  } else {
                                    return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455);
                                  }
                                } else {
                                  var p4456 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456);
                                    } else {
                                      return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456);
                                    }
                                  } else {
                                    var q4457 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457);
                                      } else {
                                        return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457);
                                      }
                                    } else {
                                      var r4458 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457, r4458);
                                        } else {
                                          return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457, r4458);
                                        }
                                      } else {
                                        var s4459 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457, r4458, s4459);
                                          } else {
                                            return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457, r4458, s4459);
                                          }
                                        } else {
                                          var t4460 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457, r4458, s4459, t4460);
                                            } else {
                                              return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457, r4458, s4459, t4460);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__17326__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__17326 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__17326__delegate.call(this, f, a, b, c, d, args);
    };
    G__17326.cljs$lang$maxFixedArity = 5;
    G__17326.cljs$lang$applyTo = function(arglist__17327) {
      var f = cljs.core.first(arglist__17327);
      arglist__17327 = cljs.core.next(arglist__17327);
      var a = cljs.core.first(arglist__17327);
      arglist__17327 = cljs.core.next(arglist__17327);
      var b = cljs.core.first(arglist__17327);
      arglist__17327 = cljs.core.next(arglist__17327);
      var c = cljs.core.first(arglist__17327);
      arglist__17327 = cljs.core.next(arglist__17327);
      var d = cljs.core.first(arglist__17327);
      var args = cljs.core.rest(arglist__17327);
      return G__17326__delegate(f, a, b, c, d, args);
    };
    G__17326.cljs$core$IFn$_invoke$arity$variadic = G__17326__delegate;
    return G__17326;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__17328__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__17328 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__17328__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__17328.cljs$lang$maxFixedArity = 6;
    G__17328.cljs$lang$applyTo = function(arglist__17329) {
      var obj = cljs.core.first(arglist__17329);
      arglist__17329 = cljs.core.next(arglist__17329);
      var f = cljs.core.first(arglist__17329);
      arglist__17329 = cljs.core.next(arglist__17329);
      var a = cljs.core.first(arglist__17329);
      arglist__17329 = cljs.core.next(arglist__17329);
      var b = cljs.core.first(arglist__17329);
      arglist__17329 = cljs.core.next(arglist__17329);
      var c = cljs.core.first(arglist__17329);
      arglist__17329 = cljs.core.next(arglist__17329);
      var d = cljs.core.first(arglist__17329);
      var args = cljs.core.rest(arglist__17329);
      return G__17328__delegate(obj, f, a, b, c, d, args);
    };
    G__17328.cljs$core$IFn$_invoke$arity$variadic = G__17328__delegate;
    return G__17328;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__17330__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__17330 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17330__delegate.call(this, x, y, more);
    };
    G__17330.cljs$lang$maxFixedArity = 2;
    G__17330.cljs$lang$applyTo = function(arglist__17331) {
      var x = cljs.core.first(arglist__17331);
      arglist__17331 = cljs.core.next(arglist__17331);
      var y = cljs.core.first(arglist__17331);
      var more = cljs.core.rest(arglist__17331);
      return G__17330__delegate(x, y, more);
    };
    G__17330.cljs$core$IFn$_invoke$arity$variadic = G__17330__delegate;
    return G__17330;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__17332 = pred;
        var G__17333 = cljs.core.next.call(null, coll);
        pred = G__17332;
        coll = G__17333;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3541__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        var G__17334 = pred;
        var G__17335 = cljs.core.next.call(null, coll);
        pred = G__17334;
        coll = G__17335;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error("Argument must be an integer: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__17336 = null;
    var G__17336__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__17336__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__17336__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__17336__3 = function() {
      var G__17337__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__17337 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__17337__delegate.call(this, x, y, zs);
      };
      G__17337.cljs$lang$maxFixedArity = 2;
      G__17337.cljs$lang$applyTo = function(arglist__17338) {
        var x = cljs.core.first(arglist__17338);
        arglist__17338 = cljs.core.next(arglist__17338);
        var y = cljs.core.first(arglist__17338);
        var zs = cljs.core.rest(arglist__17338);
        return G__17337__delegate(x, y, zs);
      };
      G__17337.cljs$core$IFn$_invoke$arity$variadic = G__17337__delegate;
      return G__17337;
    }();
    G__17336 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__17336__0.call(this);
        case 1:
          return G__17336__1.call(this, x);
        case 2:
          return G__17336__2.call(this, x, y);
        default:
          return G__17336__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__17336.cljs$lang$maxFixedArity = 2;
    G__17336.cljs$lang$applyTo = G__17336__3.cljs$lang$applyTo;
    return G__17336;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__17339__delegate = function(args) {
      return x;
    };
    var G__17339 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__17339__delegate.call(this, args);
    };
    G__17339.cljs$lang$maxFixedArity = 0;
    G__17339.cljs$lang$applyTo = function(arglist__17340) {
      var args = cljs.core.seq(arglist__17340);
      return G__17339__delegate(args);
    };
    G__17339.cljs$core$IFn$_invoke$arity$variadic = G__17339__delegate;
    return G__17339;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__17341 = null;
      var G__17341__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__17341__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__17341__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__17341__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__17341__4 = function() {
        var G__17342__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__17342 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__17342__delegate.call(this, x, y, z, args);
        };
        G__17342.cljs$lang$maxFixedArity = 3;
        G__17342.cljs$lang$applyTo = function(arglist__17343) {
          var x = cljs.core.first(arglist__17343);
          arglist__17343 = cljs.core.next(arglist__17343);
          var y = cljs.core.first(arglist__17343);
          arglist__17343 = cljs.core.next(arglist__17343);
          var z = cljs.core.first(arglist__17343);
          var args = cljs.core.rest(arglist__17343);
          return G__17342__delegate(x, y, z, args);
        };
        G__17342.cljs$core$IFn$_invoke$arity$variadic = G__17342__delegate;
        return G__17342;
      }();
      G__17341 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__17341__0.call(this);
          case 1:
            return G__17341__1.call(this, x);
          case 2:
            return G__17341__2.call(this, x, y);
          case 3:
            return G__17341__3.call(this, x, y, z);
          default:
            return G__17341__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17341.cljs$lang$maxFixedArity = 3;
      G__17341.cljs$lang$applyTo = G__17341__4.cljs$lang$applyTo;
      return G__17341;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__17344 = null;
      var G__17344__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__17344__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__17344__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__17344__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__17344__4 = function() {
        var G__17345__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__17345 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__17345__delegate.call(this, x, y, z, args);
        };
        G__17345.cljs$lang$maxFixedArity = 3;
        G__17345.cljs$lang$applyTo = function(arglist__17346) {
          var x = cljs.core.first(arglist__17346);
          arglist__17346 = cljs.core.next(arglist__17346);
          var y = cljs.core.first(arglist__17346);
          arglist__17346 = cljs.core.next(arglist__17346);
          var z = cljs.core.first(arglist__17346);
          var args = cljs.core.rest(arglist__17346);
          return G__17345__delegate(x, y, z, args);
        };
        G__17345.cljs$core$IFn$_invoke$arity$variadic = G__17345__delegate;
        return G__17345;
      }();
      G__17344 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__17344__0.call(this);
          case 1:
            return G__17344__1.call(this, x);
          case 2:
            return G__17344__2.call(this, x, y);
          case 3:
            return G__17344__3.call(this, x, y, z);
          default:
            return G__17344__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17344.cljs$lang$maxFixedArity = 3;
      G__17344.cljs$lang$applyTo = G__17344__4.cljs$lang$applyTo;
      return G__17344;
    }();
  };
  var comp__4 = function() {
    var G__17347__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__17348__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__17349 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__17350 = cljs.core.next.call(null, fs__$2);
                ret = G__17349;
                fs__$2 = G__17350;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__17348 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__17348__delegate.call(this, args);
          };
          G__17348.cljs$lang$maxFixedArity = 0;
          G__17348.cljs$lang$applyTo = function(arglist__17351) {
            var args = cljs.core.seq(arglist__17351);
            return G__17348__delegate(args);
          };
          G__17348.cljs$core$IFn$_invoke$arity$variadic = G__17348__delegate;
          return G__17348;
        }();
      }(fs__$1);
    };
    var G__17347 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__17347__delegate.call(this, f1, f2, f3, fs);
    };
    G__17347.cljs$lang$maxFixedArity = 3;
    G__17347.cljs$lang$applyTo = function(arglist__17352) {
      var f1 = cljs.core.first(arglist__17352);
      arglist__17352 = cljs.core.next(arglist__17352);
      var f2 = cljs.core.first(arglist__17352);
      arglist__17352 = cljs.core.next(arglist__17352);
      var f3 = cljs.core.first(arglist__17352);
      var fs = cljs.core.rest(arglist__17352);
      return G__17347__delegate(f1, f2, f3, fs);
    };
    G__17347.cljs$core$IFn$_invoke$arity$variadic = G__17347__delegate;
    return G__17347;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__17353__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__17353 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__17353__delegate.call(this, args);
      };
      G__17353.cljs$lang$maxFixedArity = 0;
      G__17353.cljs$lang$applyTo = function(arglist__17354) {
        var args = cljs.core.seq(arglist__17354);
        return G__17353__delegate(args);
      };
      G__17353.cljs$core$IFn$_invoke$arity$variadic = G__17353__delegate;
      return G__17353;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__17355__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__17355 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__17355__delegate.call(this, args);
      };
      G__17355.cljs$lang$maxFixedArity = 0;
      G__17355.cljs$lang$applyTo = function(arglist__17356) {
        var args = cljs.core.seq(arglist__17356);
        return G__17355__delegate(args);
      };
      G__17355.cljs$core$IFn$_invoke$arity$variadic = G__17355__delegate;
      return G__17355;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__17357__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__17357 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__17357__delegate.call(this, args);
      };
      G__17357.cljs$lang$maxFixedArity = 0;
      G__17357.cljs$lang$applyTo = function(arglist__17358) {
        var args = cljs.core.seq(arglist__17358);
        return G__17357__delegate(args);
      };
      G__17357.cljs$core$IFn$_invoke$arity$variadic = G__17357__delegate;
      return G__17357;
    }();
  };
  var partial__5 = function() {
    var G__17359__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__17360__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__17360 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__17360__delegate.call(this, args);
        };
        G__17360.cljs$lang$maxFixedArity = 0;
        G__17360.cljs$lang$applyTo = function(arglist__17361) {
          var args = cljs.core.seq(arglist__17361);
          return G__17360__delegate(args);
        };
        G__17360.cljs$core$IFn$_invoke$arity$variadic = G__17360__delegate;
        return G__17360;
      }();
    };
    var G__17359 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__17359__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__17359.cljs$lang$maxFixedArity = 4;
    G__17359.cljs$lang$applyTo = function(arglist__17362) {
      var f = cljs.core.first(arglist__17362);
      arglist__17362 = cljs.core.next(arglist__17362);
      var arg1 = cljs.core.first(arglist__17362);
      arglist__17362 = cljs.core.next(arglist__17362);
      var arg2 = cljs.core.first(arglist__17362);
      arglist__17362 = cljs.core.next(arglist__17362);
      var arg3 = cljs.core.first(arglist__17362);
      var more = cljs.core.rest(arglist__17362);
      return G__17359__delegate(f, arg1, arg2, arg3, more);
    };
    G__17359.cljs$core$IFn$_invoke$arity$variadic = G__17359__delegate;
    return G__17359;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__17363 = null;
      var G__17363__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__17363__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__17363__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__17363__4 = function() {
        var G__17364__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__17364 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__17364__delegate.call(this, a, b, c, ds);
        };
        G__17364.cljs$lang$maxFixedArity = 3;
        G__17364.cljs$lang$applyTo = function(arglist__17365) {
          var a = cljs.core.first(arglist__17365);
          arglist__17365 = cljs.core.next(arglist__17365);
          var b = cljs.core.first(arglist__17365);
          arglist__17365 = cljs.core.next(arglist__17365);
          var c = cljs.core.first(arglist__17365);
          var ds = cljs.core.rest(arglist__17365);
          return G__17364__delegate(a, b, c, ds);
        };
        G__17364.cljs$core$IFn$_invoke$arity$variadic = G__17364__delegate;
        return G__17364;
      }();
      G__17363 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__17363__1.call(this, a);
          case 2:
            return G__17363__2.call(this, a, b);
          case 3:
            return G__17363__3.call(this, a, b, c);
          default:
            return G__17363__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17363.cljs$lang$maxFixedArity = 3;
      G__17363.cljs$lang$applyTo = G__17363__4.cljs$lang$applyTo;
      return G__17363;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__17366 = null;
      var G__17366__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__17366__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__17366__4 = function() {
        var G__17367__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__17367 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__17367__delegate.call(this, a, b, c, ds);
        };
        G__17367.cljs$lang$maxFixedArity = 3;
        G__17367.cljs$lang$applyTo = function(arglist__17368) {
          var a = cljs.core.first(arglist__17368);
          arglist__17368 = cljs.core.next(arglist__17368);
          var b = cljs.core.first(arglist__17368);
          arglist__17368 = cljs.core.next(arglist__17368);
          var c = cljs.core.first(arglist__17368);
          var ds = cljs.core.rest(arglist__17368);
          return G__17367__delegate(a, b, c, ds);
        };
        G__17367.cljs$core$IFn$_invoke$arity$variadic = G__17367__delegate;
        return G__17367;
      }();
      G__17366 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__17366__2.call(this, a, b);
          case 3:
            return G__17366__3.call(this, a, b, c);
          default:
            return G__17366__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17366.cljs$lang$maxFixedArity = 3;
      G__17366.cljs$lang$applyTo = G__17366__4.cljs$lang$applyTo;
      return G__17366;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__17369 = null;
      var G__17369__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__17369__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__17369__4 = function() {
        var G__17370__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__17370 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__17370__delegate.call(this, a, b, c, ds);
        };
        G__17370.cljs$lang$maxFixedArity = 3;
        G__17370.cljs$lang$applyTo = function(arglist__17371) {
          var a = cljs.core.first(arglist__17371);
          arglist__17371 = cljs.core.next(arglist__17371);
          var b = cljs.core.first(arglist__17371);
          arglist__17371 = cljs.core.next(arglist__17371);
          var c = cljs.core.first(arglist__17371);
          var ds = cljs.core.rest(arglist__17371);
          return G__17370__delegate(a, b, c, ds);
        };
        G__17370.cljs$core$IFn$_invoke$arity$variadic = G__17370__delegate;
        return G__17370;
      }();
      G__17369 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__17369__2.call(this, a, b);
          case 3:
            return G__17369__3.call(this, a, b, c);
          default:
            return G__17369__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17369.cljs$lang$maxFixedArity = 3;
      G__17369.cljs$lang$applyTo = G__17369__4.cljs$lang$applyTo;
      return G__17369;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4397__auto___17372 = size;
          var i_17373 = 0;
          while (true) {
            if (i_17373 < n__4397__auto___17372) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_17373, cljs.core._nth.call(null, c, i_17373)));
              var G__17374 = i_17373 + 1;
              i_17373 = G__17374;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4397__auto___17375 = size;
        var i_17376 = 0;
        while (true) {
          if (i_17376 < n__4397__auto___17375) {
            var x_17377 = f.call(null, cljs.core._nth.call(null, c, i_17376));
            if (x_17377 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_17377);
            }
            var G__17378 = i_17376 + 1;
            i_17376 = G__17378;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4397__auto___17379 = size;
          var i_17380 = 0;
          while (true) {
            if (i_17380 < n__4397__auto___17379) {
              var x_17381 = f.call(null, idx + i_17380, cljs.core._nth.call(null, c, i_17380));
              if (x_17381 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_17381);
              }
              var G__17382 = i_17380 + 1;
              i_17380 = G__17382;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            return p.call(null, y);
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            var and__3529__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3529__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3529__auto____$1;
            }
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__17389__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__17389 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__17389__delegate.call(this, x, y, z, args);
        };
        G__17389.cljs$lang$maxFixedArity = 3;
        G__17389.cljs$lang$applyTo = function(arglist__17390) {
          var x = cljs.core.first(arglist__17390);
          arglist__17390 = cljs.core.next(arglist__17390);
          var y = cljs.core.first(arglist__17390);
          arglist__17390 = cljs.core.next(arglist__17390);
          var z = cljs.core.first(arglist__17390);
          var args = cljs.core.rest(arglist__17390);
          return G__17389__delegate(x, y, z, args);
        };
        G__17389.cljs$core$IFn$_invoke$arity$variadic = G__17389__delegate;
        return G__17389;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            var and__3529__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3529__auto____$1)) {
              var and__3529__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3529__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3529__auto____$2;
              }
            } else {
              return and__3529__auto____$1;
            }
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            var and__3529__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3529__auto____$1)) {
              var and__3529__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3529__auto____$2)) {
                var and__3529__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3529__auto____$3)) {
                  var and__3529__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3529__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3529__auto____$4;
                  }
                } else {
                  return and__3529__auto____$3;
                }
              } else {
                return and__3529__auto____$2;
              }
            } else {
              return and__3529__auto____$1;
            }
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__17391__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__17383_SHARP_) {
            var and__3529__auto__ = p1.call(null, p1__17383_SHARP_);
            if (cljs.core.truth_(and__3529__auto__)) {
              return p2.call(null, p1__17383_SHARP_);
            } else {
              return and__3529__auto__;
            }
          }, args));
        };
        var G__17391 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__17391__delegate.call(this, x, y, z, args);
        };
        G__17391.cljs$lang$maxFixedArity = 3;
        G__17391.cljs$lang$applyTo = function(arglist__17392) {
          var x = cljs.core.first(arglist__17392);
          arglist__17392 = cljs.core.next(arglist__17392);
          var y = cljs.core.first(arglist__17392);
          arglist__17392 = cljs.core.next(arglist__17392);
          var z = cljs.core.first(arglist__17392);
          var args = cljs.core.rest(arglist__17392);
          return G__17391__delegate(x, y, z, args);
        };
        G__17391.cljs$core$IFn$_invoke$arity$variadic = G__17391__delegate;
        return G__17391;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            var and__3529__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3529__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3529__auto____$1;
            }
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            var and__3529__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3529__auto____$1)) {
              var and__3529__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3529__auto____$2)) {
                var and__3529__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3529__auto____$3)) {
                  var and__3529__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3529__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3529__auto____$4;
                  }
                } else {
                  return and__3529__auto____$3;
                }
              } else {
                return and__3529__auto____$2;
              }
            } else {
              return and__3529__auto____$1;
            }
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            var and__3529__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3529__auto____$1)) {
              var and__3529__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3529__auto____$2)) {
                var and__3529__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3529__auto____$3)) {
                  var and__3529__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3529__auto____$4)) {
                    var and__3529__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3529__auto____$5)) {
                      var and__3529__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3529__auto____$6)) {
                        var and__3529__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3529__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3529__auto____$7;
                        }
                      } else {
                        return and__3529__auto____$6;
                      }
                    } else {
                      return and__3529__auto____$5;
                    }
                  } else {
                    return and__3529__auto____$4;
                  }
                } else {
                  return and__3529__auto____$3;
                }
              } else {
                return and__3529__auto____$2;
              }
            } else {
              return and__3529__auto____$1;
            }
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__17393__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__17384_SHARP_) {
            var and__3529__auto__ = p1.call(null, p1__17384_SHARP_);
            if (cljs.core.truth_(and__3529__auto__)) {
              var and__3529__auto____$1 = p2.call(null, p1__17384_SHARP_);
              if (cljs.core.truth_(and__3529__auto____$1)) {
                return p3.call(null, p1__17384_SHARP_);
              } else {
                return and__3529__auto____$1;
              }
            } else {
              return and__3529__auto__;
            }
          }, args));
        };
        var G__17393 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__17393__delegate.call(this, x, y, z, args);
        };
        G__17393.cljs$lang$maxFixedArity = 3;
        G__17393.cljs$lang$applyTo = function(arglist__17394) {
          var x = cljs.core.first(arglist__17394);
          arglist__17394 = cljs.core.next(arglist__17394);
          var y = cljs.core.first(arglist__17394);
          arglist__17394 = cljs.core.next(arglist__17394);
          var z = cljs.core.first(arglist__17394);
          var args = cljs.core.rest(arglist__17394);
          return G__17393__delegate(x, y, z, args);
        };
        G__17393.cljs$core$IFn$_invoke$arity$variadic = G__17393__delegate;
        return G__17393;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__17395__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__17385_SHARP_) {
                return p1__17385_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__17386_SHARP_) {
                var and__3529__auto__ = p1__17386_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3529__auto__)) {
                  return p1__17386_SHARP_.call(null, y);
                } else {
                  return and__3529__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__17387_SHARP_) {
                var and__3529__auto__ = p1__17387_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3529__auto__)) {
                  var and__3529__auto____$1 = p1__17387_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3529__auto____$1)) {
                    return p1__17387_SHARP_.call(null, z);
                  } else {
                    return and__3529__auto____$1;
                  }
                } else {
                  return and__3529__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__17396__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__17388_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__17388_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__17396 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__17396__delegate.call(this, x, y, z, args);
            };
            G__17396.cljs$lang$maxFixedArity = 3;
            G__17396.cljs$lang$applyTo = function(arglist__17397) {
              var x = cljs.core.first(arglist__17397);
              arglist__17397 = cljs.core.next(arglist__17397);
              var y = cljs.core.first(arglist__17397);
              arglist__17397 = cljs.core.next(arglist__17397);
              var z = cljs.core.first(arglist__17397);
              var args = cljs.core.rest(arglist__17397);
              return G__17396__delegate(x, y, z, args);
            };
            G__17396.cljs$core$IFn$_invoke$arity$variadic = G__17396__delegate;
            return G__17396;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__17395 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__17395__delegate.call(this, p1, p2, p3, ps);
    };
    G__17395.cljs$lang$maxFixedArity = 3;
    G__17395.cljs$lang$applyTo = function(arglist__17398) {
      var p1 = cljs.core.first(arglist__17398);
      arglist__17398 = cljs.core.next(arglist__17398);
      var p2 = cljs.core.first(arglist__17398);
      arglist__17398 = cljs.core.next(arglist__17398);
      var p3 = cljs.core.first(arglist__17398);
      var ps = cljs.core.rest(arglist__17398);
      return G__17395__delegate(p1, p2, p3, ps);
    };
    G__17395.cljs$core$IFn$_invoke$arity$variadic = G__17395__delegate;
    return G__17395;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3541__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3541__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3541__auto____$1)) {
            return or__3541__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__17405__delegate = function(x, y, z, args) {
          var or__3541__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__17405 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__17405__delegate.call(this, x, y, z, args);
        };
        G__17405.cljs$lang$maxFixedArity = 3;
        G__17405.cljs$lang$applyTo = function(arglist__17406) {
          var x = cljs.core.first(arglist__17406);
          arglist__17406 = cljs.core.next(arglist__17406);
          var y = cljs.core.first(arglist__17406);
          arglist__17406 = cljs.core.next(arglist__17406);
          var z = cljs.core.first(arglist__17406);
          var args = cljs.core.rest(arglist__17406);
          return G__17405__delegate(x, y, z, args);
        };
        G__17405.cljs$core$IFn$_invoke$arity$variadic = G__17405__delegate;
        return G__17405;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3541__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3541__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3541__auto____$1)) {
            return or__3541__auto____$1;
          } else {
            var or__3541__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3541__auto____$2)) {
              return or__3541__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3541__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3541__auto____$1)) {
            return or__3541__auto____$1;
          } else {
            var or__3541__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3541__auto____$2)) {
              return or__3541__auto____$2;
            } else {
              var or__3541__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3541__auto____$3)) {
                return or__3541__auto____$3;
              } else {
                var or__3541__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3541__auto____$4)) {
                  return or__3541__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__17407__delegate = function(x, y, z, args) {
          var or__3541__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3541__auto__) {
              return function(p1__17399_SHARP_) {
                var or__3541__auto____$1 = p1.call(null, p1__17399_SHARP_);
                if (cljs.core.truth_(or__3541__auto____$1)) {
                  return or__3541__auto____$1;
                } else {
                  return p2.call(null, p1__17399_SHARP_);
                }
              };
            }(or__3541__auto__), args);
          }
        };
        var G__17407 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__17407__delegate.call(this, x, y, z, args);
        };
        G__17407.cljs$lang$maxFixedArity = 3;
        G__17407.cljs$lang$applyTo = function(arglist__17408) {
          var x = cljs.core.first(arglist__17408);
          arglist__17408 = cljs.core.next(arglist__17408);
          var y = cljs.core.first(arglist__17408);
          arglist__17408 = cljs.core.next(arglist__17408);
          var z = cljs.core.first(arglist__17408);
          var args = cljs.core.rest(arglist__17408);
          return G__17407__delegate(x, y, z, args);
        };
        G__17407.cljs$core$IFn$_invoke$arity$variadic = G__17407__delegate;
        return G__17407;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3541__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3541__auto____$1)) {
            return or__3541__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3541__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3541__auto____$1)) {
            return or__3541__auto____$1;
          } else {
            var or__3541__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3541__auto____$2)) {
              return or__3541__auto____$2;
            } else {
              var or__3541__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3541__auto____$3)) {
                return or__3541__auto____$3;
              } else {
                var or__3541__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3541__auto____$4)) {
                  return or__3541__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3541__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3541__auto____$1)) {
            return or__3541__auto____$1;
          } else {
            var or__3541__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3541__auto____$2)) {
              return or__3541__auto____$2;
            } else {
              var or__3541__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3541__auto____$3)) {
                return or__3541__auto____$3;
              } else {
                var or__3541__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3541__auto____$4)) {
                  return or__3541__auto____$4;
                } else {
                  var or__3541__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3541__auto____$5)) {
                    return or__3541__auto____$5;
                  } else {
                    var or__3541__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3541__auto____$6)) {
                      return or__3541__auto____$6;
                    } else {
                      var or__3541__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3541__auto____$7)) {
                        return or__3541__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__17409__delegate = function(x, y, z, args) {
          var or__3541__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3541__auto__) {
              return function(p1__17400_SHARP_) {
                var or__3541__auto____$1 = p1.call(null, p1__17400_SHARP_);
                if (cljs.core.truth_(or__3541__auto____$1)) {
                  return or__3541__auto____$1;
                } else {
                  var or__3541__auto____$2 = p2.call(null, p1__17400_SHARP_);
                  if (cljs.core.truth_(or__3541__auto____$2)) {
                    return or__3541__auto____$2;
                  } else {
                    return p3.call(null, p1__17400_SHARP_);
                  }
                }
              };
            }(or__3541__auto__), args);
          }
        };
        var G__17409 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__17409__delegate.call(this, x, y, z, args);
        };
        G__17409.cljs$lang$maxFixedArity = 3;
        G__17409.cljs$lang$applyTo = function(arglist__17410) {
          var x = cljs.core.first(arglist__17410);
          arglist__17410 = cljs.core.next(arglist__17410);
          var y = cljs.core.first(arglist__17410);
          arglist__17410 = cljs.core.next(arglist__17410);
          var z = cljs.core.first(arglist__17410);
          var args = cljs.core.rest(arglist__17410);
          return G__17409__delegate(x, y, z, args);
        };
        G__17409.cljs$core$IFn$_invoke$arity$variadic = G__17409__delegate;
        return G__17409;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__17411__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__17401_SHARP_) {
                return p1__17401_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__17402_SHARP_) {
                var or__3541__auto__ = p1__17402_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3541__auto__)) {
                  return or__3541__auto__;
                } else {
                  return p1__17402_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__17403_SHARP_) {
                var or__3541__auto__ = p1__17403_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3541__auto__)) {
                  return or__3541__auto__;
                } else {
                  var or__3541__auto____$1 = p1__17403_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3541__auto____$1)) {
                    return or__3541__auto____$1;
                  } else {
                    return p1__17403_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__17412__delegate = function(x, y, z, args) {
              var or__3541__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3541__auto__)) {
                return or__3541__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3541__auto__, ps__$1) {
                  return function(p1__17404_SHARP_) {
                    return cljs.core.some.call(null, p1__17404_SHARP_, args);
                  };
                }(or__3541__auto__, ps__$1), ps__$1);
              }
            };
            var G__17412 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__17412__delegate.call(this, x, y, z, args);
            };
            G__17412.cljs$lang$maxFixedArity = 3;
            G__17412.cljs$lang$applyTo = function(arglist__17413) {
              var x = cljs.core.first(arglist__17413);
              arglist__17413 = cljs.core.next(arglist__17413);
              var y = cljs.core.first(arglist__17413);
              arglist__17413 = cljs.core.next(arglist__17413);
              var z = cljs.core.first(arglist__17413);
              var args = cljs.core.rest(arglist__17413);
              return G__17412__delegate(x, y, z, args);
            };
            G__17412.cljs$core$IFn$_invoke$arity$variadic = G__17412__delegate;
            return G__17412;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__17411 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__17411__delegate.call(this, p1, p2, p3, ps);
    };
    G__17411.cljs$lang$maxFixedArity = 3;
    G__17411.cljs$lang$applyTo = function(arglist__17414) {
      var p1 = cljs.core.first(arglist__17414);
      arglist__17414 = cljs.core.next(arglist__17414);
      var p2 = cljs.core.first(arglist__17414);
      arglist__17414 = cljs.core.next(arglist__17414);
      var p3 = cljs.core.first(arglist__17414);
      var ps = cljs.core.rest(arglist__17414);
      return G__17411__delegate(p1, p2, p3, ps);
    };
    G__17411.cljs$core$IFn$_invoke$arity$variadic = G__17411__delegate;
    return G__17411;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4397__auto___17416 = size;
          var i_17417 = 0;
          while (true) {
            if (i_17417 < n__4397__auto___17416) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_17417)));
              var G__17418 = i_17417 + 1;
              i_17417 = G__17418;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__17419__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__17415_SHARP_) {
          return cljs.core.apply.call(null, f, p1__17415_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__17419 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__17419__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__17419.cljs$lang$maxFixedArity = 4;
    G__17419.cljs$lang$applyTo = function(arglist__17420) {
      var f = cljs.core.first(arglist__17420);
      arglist__17420 = cljs.core.next(arglist__17420);
      var c1 = cljs.core.first(arglist__17420);
      arglist__17420 = cljs.core.next(arglist__17420);
      var c2 = cljs.core.first(arglist__17420);
      arglist__17420 = cljs.core.next(arglist__17420);
      var c3 = cljs.core.first(arglist__17420);
      var colls = cljs.core.rest(arglist__17420);
      return G__17419__delegate(f, c1, c2, c3, colls);
    };
    G__17419.cljs$core$IFn$_invoke$arity$variadic = G__17419__delegate;
    return G__17419;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__17421 = n__$1 - 1;
        var G__17422 = cljs.core.rest.call(null, s);
        n__$1 = G__17421;
        coll__$1 = G__17422;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step.call(null, n, coll);
    };
  }(step), null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__17423 = cljs.core.next.call(null, s);
      var G__17424 = cljs.core.next.call(null, lead);
      s = G__17423;
      lead = G__17424;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__3529__auto__ = s;
        if (and__3529__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__3529__auto__;
        }
      }())) {
        var G__17425 = pred__$1;
        var G__17426 = cljs.core.rest.call(null, s);
        pred__$1 = G__17425;
        coll__$1 = G__17426;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step.call(null, pred, coll);
    };
  }(step), null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__17427__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__17427 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17427__delegate.call(this, c1, c2, colls);
    };
    G__17427.cljs$lang$maxFixedArity = 2;
    G__17427.cljs$lang$applyTo = function(arglist__17428) {
      var c1 = cljs.core.first(arglist__17428);
      arglist__17428 = cljs.core.next(arglist__17428);
      var c2 = cljs.core.first(arglist__17428);
      var colls = cljs.core.rest(arglist__17428);
      return G__17427__delegate(c1, c2, colls);
    };
    G__17427.cljs$core$IFn$_invoke$arity$variadic = G__17427__delegate;
    return G__17427;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__17429__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__17429 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17429__delegate.call(this, f, coll, colls);
    };
    G__17429.cljs$lang$maxFixedArity = 2;
    G__17429.cljs$lang$applyTo = function(arglist__17430) {
      var f = cljs.core.first(arglist__17430);
      arglist__17430 = cljs.core.next(arglist__17430);
      var coll = cljs.core.first(arglist__17430);
      var colls = cljs.core.rest(arglist__17430);
      return G__17429__delegate(f, coll, colls);
    };
    G__17429.cljs$core$IFn$_invoke$arity$variadic = G__17429__delegate;
    return G__17429;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4397__auto___17431 = size;
        var i_17432 = 0;
        while (true) {
          if (i_17432 < n__4397__auto___17431) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_17432)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_17432));
            } else {
            }
            var G__17433 = i_17432 + 1;
            i_17432 = G__17433;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__17434_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__17434_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__17436 = to;
      if (G__17436) {
        var bit__4184__auto__ = G__17436.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4184__auto__ || G__17436.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__17437__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__17437 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__17437__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__17437.cljs$lang$maxFixedArity = 4;
    G__17437.cljs$lang$applyTo = function(arglist__17438) {
      var f = cljs.core.first(arglist__17438);
      arglist__17438 = cljs.core.next(arglist__17438);
      var c1 = cljs.core.first(arglist__17438);
      arglist__17438 = cljs.core.next(arglist__17438);
      var c2 = cljs.core.first(arglist__17438);
      arglist__17438 = cljs.core.next(arglist__17438);
      var c3 = cljs.core.first(arglist__17438);
      var colls = cljs.core.rest(arglist__17438);
      return G__17437__delegate(f, c1, c2, c3, colls);
    };
    G__17437.cljs$core$IFn$_invoke$arity$variadic = G__17437__delegate;
    return G__17437;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__17440 = m__$1;
          if (G__17440) {
            var bit__4191__auto__ = G__17440.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4191__auto__ || G__17440.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__17440.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__17440);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__17440);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__17441 = sentinel;
            var G__17442 = m__$2;
            var G__17443 = cljs.core.next.call(null, ks__$1);
            sentinel = G__17441;
            m__$1 = G__17442;
            ks__$1 = G__17443;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__17444, v) {
  var vec__17446 = p__17444;
  var k = cljs.core.nth.call(null, vec__17446, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__17446, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__17447, f) {
    var vec__17457 = p__17447;
    var k = cljs.core.nth.call(null, vec__17457, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__17457, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__17448, f, a) {
    var vec__17458 = p__17448;
    var k = cljs.core.nth.call(null, vec__17458, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__17458, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__17449, f, a, b) {
    var vec__17459 = p__17449;
    var k = cljs.core.nth.call(null, vec__17459, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__17459, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__17450, f, a, b, c) {
    var vec__17460 = p__17450;
    var k = cljs.core.nth.call(null, vec__17460, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__17460, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__17462__delegate = function(m, p__17451, f, a, b, c, args) {
      var vec__17461 = p__17451;
      var k = cljs.core.nth.call(null, vec__17461, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__17461, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__17462 = function(m, p__17451, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__17462__delegate.call(this, m, p__17451, f, a, b, c, args);
    };
    G__17462.cljs$lang$maxFixedArity = 6;
    G__17462.cljs$lang$applyTo = function(arglist__17463) {
      var m = cljs.core.first(arglist__17463);
      arglist__17463 = cljs.core.next(arglist__17463);
      var p__17451 = cljs.core.first(arglist__17463);
      arglist__17463 = cljs.core.next(arglist__17463);
      var f = cljs.core.first(arglist__17463);
      arglist__17463 = cljs.core.next(arglist__17463);
      var a = cljs.core.first(arglist__17463);
      arglist__17463 = cljs.core.next(arglist__17463);
      var b = cljs.core.first(arglist__17463);
      arglist__17463 = cljs.core.next(arglist__17463);
      var c = cljs.core.first(arglist__17463);
      var args = cljs.core.rest(arglist__17463);
      return G__17462__delegate(m, p__17451, f, a, b, c, args);
    };
    G__17462.cljs$core$IFn$_invoke$arity$variadic = G__17462__delegate;
    return G__17462;
  }();
  update_in = function(m, p__17451, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__17451, f);
      case 4:
        return update_in__4.call(this, m, p__17451, f, a);
      case 5:
        return update_in__5.call(this, m, p__17451, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__17451, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__17451, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4111__auto__, writer__4112__auto__, opts__4113__auto__) {
  return cljs.core._write.call(null, writer__4112__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__17464 = ll - 5;
      var G__17465 = r;
      ll = G__17464;
      ret = G__17465;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error("No item " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i) + " in vector of length " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__17466 = cljs.core.pv_aget.call(null, node, 0);
      var G__17467 = level - 5;
      node = G__17466;
      level = G__17467;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__17468 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__17469 = level - 5;
        node = G__17468;
        level = G__17469;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__17471 = null;
  var G__17471__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__17471__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__17471 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17471__2.call(this, self__, k);
      case 3:
        return G__17471__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17471;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args17470) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17470)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__17472 = j + 1;
              var G__17473 = init__$2;
              j = G__17472;
              init__$1 = G__17473;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__17474 = i + step_init[0];
        i = G__17474;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4397__auto___17475 = len;
    var i_17476 = 0;
    while (true) {
      if (i_17476 < n__4397__auto___17475) {
        new_tail[i_17476] = self__.tail[i_17476];
        var G__17477 = i_17476 + 1;
        i_17476 = G__17477;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds  [0," + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt) + "]");
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__17478 = i + 1;
        var G__17479 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__17478;
        out = G__17479;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__17480) {
    var args = cljs.core.seq(arglist__17480);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.call = function() {
  var G__17482 = null;
  var G__17482__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__17482__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__17482 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17482__2.call(this, self__, k);
      case 3:
        return G__17482__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17482;
}();
cljs.core.Subvec.prototype.apply = function(self__, args17481) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17481)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3848__auto__ = self__.end;
    var y__3849__auto__ = v_pos + 1;
    return x__3848__auto__ > y__3849__auto__ ? x__3848__auto__ : y__3849__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__17483 = meta;
      var G__17484 = v.v;
      var G__17485 = v.start + start;
      var G__17486 = v.start + end;
      var G__17487 = __hash;
      meta = G__17483;
      v = G__17484;
      start = G__17485;
      end = G__17486;
      __hash = G__17487;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj17491 = {};
    return obj17491;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__17492 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__17493 = level - 5;
        node = G__17492;
        level = G__17493;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__17495 = null;
  var G__17495__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__17495__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__17495 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17495__2.call(this, self__, k);
      case 3:
        return G__17495__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17495;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args17494) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17494)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds for TransientVector of length" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3541__auto__ = self__.rear;
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3541__auto__ = self__.front;
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__17496 = i + incr;
        i = G__17496;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__17497 = i + 1;
      var G__17498 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__17497;
      out = G__17498;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj17502 = {};
    return obj17502;
  }();
  var l = ks.length;
  var i_17503 = 0;
  while (true) {
    if (i_17503 < l) {
      var k_17504 = ks[i_17503];
      new_obj[k_17504] = obj[k_17504];
      var G__17505 = i_17503 + 1;
      i_17503 = G__17505;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__17508 = null;
  var G__17508__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__17508__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__17508 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17508__2.call(this, self__, k);
      case 3:
        return G__17508__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17508;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args17507) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17507)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__17509 = cljs.core.rest.call(null, keys__$1);
        var G__17510 = init__$2;
        keys__$1 = G__17509;
        init__$1 = G__17510;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__17506_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__17506_SHARP_, self__.strobj[p1__17506_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj17512 = {};
  return obj17512;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__17513 = i + 2;
          i = G__17513;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__17514 = i + 2;
          i = G__17514;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__17515 = i + 2;
          i = G__17515;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__17516 = i + 2;
          i = G__17516;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__17517 = i + 2;
          i = G__17517;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_17518 = 0;
  while (true) {
    if (i_17518 < l) {
      narr[i_17518] = arr[i_17518];
      var G__17519 = i_17518 + 1;
      i_17518 = G__17519;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj17522 = {};
    return obj17522;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__17523 = cljs.core.aclone.call(null, self__.arr);
          G__17523[idx + 1] = v;
          return G__17523;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__17524 = null;
  var G__17524__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__17524__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__17524 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17524__2.call(this, self__, k);
      case 3:
        return G__17524__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17524;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args17520) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17520)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__17525 = i + 2;
        var G__17526 = init__$2;
        i = G__17525;
        init__$1 = G__17526;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__17527 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__17528 = cljs.core.next.call(null, es);
          ret = G__17527;
          es = G__17528;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__17529 = s + 2;
            var G__17530 = d;
            s = G__17529;
            d = G__17530;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__17531 = s + 2;
              var G__17532 = d + 2;
              s = G__17531;
              d = G__17532;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__17533 = i + 2;
        var G__17534 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__17533;
        ret = G__17534;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__17535_17537 = self__.arr;
      G__17535_17537.pop();
      G__17535_17537.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__17536 = o;
      if (G__17536) {
        var bit__4191__auto__ = G__17536.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4191__auto__ || G__17536.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__17536.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__17536);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__17536);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__17538 = cljs.core.next.call(null, es);
          var G__17539 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__17538;
          tcoll__$2 = G__17539;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__17540 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__17541 = i + 2;
      out = G__17540;
      i = G__17541;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4111__auto__, writer__4112__auto__, opts__4113__auto__) {
  return cljs.core._write.call(null, writer__4112__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__17544 = cljs.core.aclone.call(null, arr);
    G__17544[i] = a;
    return G__17544;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__17545 = cljs.core.aclone.call(null, arr);
    G__17545[i] = a;
    G__17545[j] = b;
    return G__17545;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__17546 = i + 2;
        var G__17547 = init__$2;
        i = G__17546;
        init__$1 = G__17547;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_17548 = 0;
        var j_17549 = 0;
        while (true) {
          if (i_17548 < 32) {
            if ((self__.bitmap >>> i_17548 & 1) === 0) {
              var G__17550 = i_17548 + 1;
              var G__17551 = j_17549;
              i_17548 = G__17550;
              j_17549 = G__17551;
              continue;
            } else {
              nodes[i_17548] = !(self__.arr[j_17549] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_17549]), self__.arr[j_17549], self__.arr[j_17549 + 1], added_leaf_QMARK_) : self__.arr[j_17549 + 1];
              var G__17552 = i_17548 + 1;
              var G__17553 = j_17549 + 2;
              i_17548 = G__17552;
              j_17549 = G__17553;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_17554 = 0;
      var j_17555 = 0;
      while (true) {
        if (i_17554 < 32) {
          if ((self__.bitmap >>> i_17554 & 1) === 0) {
            var G__17556 = i_17554 + 1;
            var G__17557 = j_17555;
            i_17554 = G__17556;
            j_17555 = G__17557;
            continue;
          } else {
            nodes[i_17554] = !(self__.arr[j_17555] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_17555]), self__.arr[j_17555], self__.arr[j_17555 + 1], added_leaf_QMARK_) : self__.arr[j_17555 + 1];
            var G__17558 = i_17554 + 1;
            var G__17559 = j_17555 + 2;
            i_17554 = G__17558;
            j_17555 = G__17559;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__17560 = i + 1;
        var G__17561 = j + 2;
        var G__17562 = bitmap | 1 << i;
        i = G__17560;
        j = G__17561;
        bitmap = G__17562;
        continue;
      } else {
        var G__17563 = i + 1;
        var G__17564 = j;
        var G__17565 = bitmap;
        i = G__17563;
        j = G__17564;
        bitmap = G__17565;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__17566 = i + 1;
          var G__17567 = init__$2;
          i = G__17566;
          init__$1 = G__17567;
          continue;
        }
      } else {
        var G__17568 = i + 1;
        var G__17569 = init__$1;
        i = G__17568;
        init__$1 = G__17569;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__17570 = i + 2;
        i = G__17570;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4090__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__17571 = j + 2;
                j = G__17571;
                continue;
              }
            } else {
              var G__17572 = j + 2;
              j = G__17572;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4090__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__17573 = j + 1;
              j = G__17573;
              continue;
            }
          } else {
            var G__17574 = j + 1;
            j = G__17574;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj17577 = {};
    return obj17577;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__17578 = null;
  var G__17578__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__17578__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__17578 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17578__2.call(this, self__, k);
      case 3:
        return G__17578__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17578;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args17575) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17575)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__17579 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__17580 = cljs.core.next.call(null, es);
          ret = G__17579;
          es = G__17580;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__17581 = i + 1;
      var G__17582 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__17581;
      out = G__17582;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__17583 = o;
      if (G__17583) {
        var bit__4191__auto__ = G__17583.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4191__auto__ || G__17583.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__17583.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__17583);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__17583);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__17584 = cljs.core.next.call(null, es);
          var G__17585 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__17584;
          tcoll__$1 = G__17585;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__17586 = ascending_QMARK_ ? t.left : t.right;
      var G__17587 = cljs.core.conj.call(null, stack__$1, t);
      t = G__17586;
      stack__$1 = G__17587;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__17589 = null;
  var G__17589__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__17589__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__17589 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17589__2.call(this, self__, k);
      case 3:
        return G__17589__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17589;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args17588) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17588)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.call = function() {
  var G__17591 = null;
  var G__17591__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__17591__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__17591 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17591__2.call(this, self__, k);
      case 3:
        return G__17591__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17591;
}();
cljs.core.RedNode.prototype.apply = function(self__, args17590) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17590)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__17593 = null;
  var G__17593__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__17593__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__17593 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17593__2.call(this, self__, k);
      case 3:
        return G__17593__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17593;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args17592) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17592)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__17594 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__17595 = cljs.core.next.call(null, es);
          ret = G__17594;
          es = G__17595;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__17596 = t.left;
          t = G__17596;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__17597 = t.right;
            t = G__17597;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__17598 = cljs.core.conj.call(null, stack, t);
              var G__17599 = t.left;
              stack = G__17598;
              t = G__17599;
              continue;
            } else {
              var G__17600 = stack;
              var G__17601 = t.right;
              stack = G__17600;
              t = G__17601;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__17602 = cljs.core.conj.call(null, stack, t);
                var G__17603 = t.right;
                stack = G__17602;
                t = G__17603;
                continue;
              } else {
                var G__17604 = stack;
                var G__17605 = t.left;
                stack = G__17604;
                t = G__17605;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__17606 = cljs.core.nnext.call(null, in$);
        var G__17607 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__17606;
        out = G__17607;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__17608) {
    var keyvals = cljs.core.seq(arglist__17608);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__17609) {
    var keyvals = cljs.core.seq(arglist__17609);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj17613 = {};
      return obj17613;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__17614 = cljs.core.nnext.call(null, kvs);
        kvs = G__17614;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__17615) {
    var keyvals = cljs.core.seq(arglist__17615);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__17616 = cljs.core.nnext.call(null, in$);
        var G__17617 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__17616;
        out = G__17617;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__17618) {
    var keyvals = cljs.core.seq(arglist__17618);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__17619 = cljs.core.nnext.call(null, in$);
        var G__17620 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__17619;
        out = G__17620;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__17621) {
    var comparator = cljs.core.first(arglist__17621);
    var keyvals = cljs.core.rest(arglist__17621);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__17622 = self__.mseq;
    if (G__17622) {
      var bit__4191__auto__ = G__17622.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4191__auto__ || G__17622.cljs$core$INext$) {
        return true;
      } else {
        if (!G__17622.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__17622);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__17622);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__17623 = self__.mseq;
    if (G__17623) {
      var bit__4191__auto__ = G__17623.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4191__auto__ || G__17623.cljs$core$INext$) {
        return true;
      } else {
        if (!G__17623.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__17623);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__17623);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__17624 = self__.mseq;
    if (G__17624) {
      var bit__4191__auto__ = G__17624.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4191__auto__ || G__17624.cljs$core$INext$) {
        return true;
      } else {
        if (!G__17624.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__17624);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__17624);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__17625 = self__.mseq;
    if (G__17625) {
      var bit__4191__auto__ = G__17625.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4191__auto__ || G__17625.cljs$core$INext$) {
        return true;
      } else {
        if (!G__17625.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__17625);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__17625);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__17626_SHARP_, p2__17627_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3541__auto__ = p1__17626_SHARP_;
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__17627_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__17628) {
    var maps = cljs.core.seq(arglist__17628);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3541__auto__ = m1;
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__17629) {
    var f = cljs.core.first(arglist__17629);
    var maps = cljs.core.rest(arglist__17629);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__17630 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__17631 = cljs.core.next.call(null, keys);
      ret = G__17630;
      keys = G__17631;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__17634 = null;
  var G__17634__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__17634__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__17634 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17634__2.call(this, self__, k);
      case 3:
        return G__17634__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17634;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args17633) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17633)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__17632_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__17632_SHARP_);
    };
  }(coll__$1), other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__17635 = i + 1;
        var G__17636 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__17635;
        out = G__17636;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__17637 = i + 1;
        var G__17638 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__17637;
        out = G__17638;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__17640 = null;
  var G__17640__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__17640__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__17640 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17640__2.call(this, self__, k);
      case 3:
        return G__17640__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17640;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args17639) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17639)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__17643 = null;
  var G__17643__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__17643__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__17643 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17643__2.call(this, self__, k);
      case 3:
        return G__17643__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17643;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args17642) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17642)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__17641_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__17641_SHARP_);
    };
  }(coll__$1), other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4391__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4391__auto__.length) {
        var G__17644 = i + 1;
        var G__17645 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__17644;
        res = G__17645;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__17646 = cljs.core._next.call(null, in$__$1);
            var G__17647 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__17646;
            out = G__17647;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__17648__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__17648 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__17648__delegate.call(this, keys);
    };
    G__17648.cljs$lang$maxFixedArity = 0;
    G__17648.cljs$lang$applyTo = function(arglist__17649) {
      var keys = cljs.core.seq(arglist__17649);
      return G__17648__delegate(keys);
    };
    G__17648.cljs$core$IFn$_invoke$arity$variadic = G__17648__delegate;
    return G__17648;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__17650) {
    var keys = cljs.core.seq(arglist__17650);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__17651) {
    var comparator = cljs.core.first(arglist__17651);
    var keys = cljs.core.rest(arglist__17651);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(n) {
      return function(v, i) {
        var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__17652_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__17652_SHARP_);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__17652_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__17659, seen__$1) {
        while (true) {
          var vec__17660 = p__17659;
          var f = cljs.core.nth.call(null, vec__17660, 0, null);
          var xs__$1 = vec__17660;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4092__auto__) {
            var s = temp__4092__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__17661 = cljs.core.rest.call(null, s);
              var G__17662 = seen__$1;
              p__17659 = G__17661;
              seen__$1 = G__17662;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__17663 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__17664 = cljs.core.next.call(null, s__$1);
      ret = G__17663;
      s__$1 = G__17664;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__17666 = x;
    if (G__17666) {
      var bit__4184__auto__ = G__17666.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4184__auto__ || G__17666.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error("Doesn't support name: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__17667 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__17668 = cljs.core.next.call(null, ks);
      var G__17669 = cljs.core.next.call(null, vs);
      map = G__17667;
      ks = G__17668;
      vs = G__17669;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__17672__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__17670_SHARP_, p2__17671_SHARP_) {
        return max_key.call(null, k, p1__17670_SHARP_, p2__17671_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__17672 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__17672__delegate.call(this, k, x, y, more);
    };
    G__17672.cljs$lang$maxFixedArity = 3;
    G__17672.cljs$lang$applyTo = function(arglist__17673) {
      var k = cljs.core.first(arglist__17673);
      arglist__17673 = cljs.core.next(arglist__17673);
      var x = cljs.core.first(arglist__17673);
      arglist__17673 = cljs.core.next(arglist__17673);
      var y = cljs.core.first(arglist__17673);
      var more = cljs.core.rest(arglist__17673);
      return G__17672__delegate(k, x, y, more);
    };
    G__17672.cljs$core$IFn$_invoke$arity$variadic = G__17672__delegate;
    return G__17672;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__17676__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__17674_SHARP_, p2__17675_SHARP_) {
        return min_key.call(null, k, p1__17674_SHARP_, p2__17675_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__17676 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__17676__delegate.call(this, k, x, y, more);
    };
    G__17676.cljs$lang$maxFixedArity = 3;
    G__17676.cljs$lang$applyTo = function(arglist__17677) {
      var k = cljs.core.first(arglist__17677);
      arglist__17677 = cljs.core.next(arglist__17677);
      var x = cljs.core.first(arglist__17677);
      arglist__17677 = cljs.core.next(arglist__17677);
      var y = cljs.core.first(arglist__17677);
      var more = cljs.core.rest(arglist__17677);
      return G__17676__delegate(k, x, y, more);
    };
    G__17676.cljs$core$IFn$_invoke$arity$variadic = G__17676__delegate;
    return G__17676;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__17680 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__17680, 0, null);
        var s = vec__17680;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__17681 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__17681, 0, null);
      var s = vec__17681;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__17684 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__17684, 0, null);
        var s = vec__17684;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__17685 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__17685, 0, null);
      var s = vec__17685;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4092__auto__) {
        return function(p1__17686_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__17686_SHARP_));
        };
      }(fst, fv, s, temp__4092__auto__), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__17697 = null;
      var G__17697__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__17697__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__17697__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__17697__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__17697__4 = function() {
        var G__17698__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__17698 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__17698__delegate.call(this, x, y, z, args);
        };
        G__17698.cljs$lang$maxFixedArity = 3;
        G__17698.cljs$lang$applyTo = function(arglist__17699) {
          var x = cljs.core.first(arglist__17699);
          arglist__17699 = cljs.core.next(arglist__17699);
          var y = cljs.core.first(arglist__17699);
          arglist__17699 = cljs.core.next(arglist__17699);
          var z = cljs.core.first(arglist__17699);
          var args = cljs.core.rest(arglist__17699);
          return G__17698__delegate(x, y, z, args);
        };
        G__17698.cljs$core$IFn$_invoke$arity$variadic = G__17698__delegate;
        return G__17698;
      }();
      G__17697 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__17697__0.call(this);
          case 1:
            return G__17697__1.call(this, x);
          case 2:
            return G__17697__2.call(this, x, y);
          case 3:
            return G__17697__3.call(this, x, y, z);
          default:
            return G__17697__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17697.cljs$lang$maxFixedArity = 3;
      G__17697.cljs$lang$applyTo = G__17697__4.cljs$lang$applyTo;
      return G__17697;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__17700 = null;
      var G__17700__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__17700__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__17700__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__17700__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__17700__4 = function() {
        var G__17701__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__17701 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__17701__delegate.call(this, x, y, z, args);
        };
        G__17701.cljs$lang$maxFixedArity = 3;
        G__17701.cljs$lang$applyTo = function(arglist__17702) {
          var x = cljs.core.first(arglist__17702);
          arglist__17702 = cljs.core.next(arglist__17702);
          var y = cljs.core.first(arglist__17702);
          arglist__17702 = cljs.core.next(arglist__17702);
          var z = cljs.core.first(arglist__17702);
          var args = cljs.core.rest(arglist__17702);
          return G__17701__delegate(x, y, z, args);
        };
        G__17701.cljs$core$IFn$_invoke$arity$variadic = G__17701__delegate;
        return G__17701;
      }();
      G__17700 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__17700__0.call(this);
          case 1:
            return G__17700__1.call(this, x);
          case 2:
            return G__17700__2.call(this, x, y);
          case 3:
            return G__17700__3.call(this, x, y, z);
          default:
            return G__17700__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17700.cljs$lang$maxFixedArity = 3;
      G__17700.cljs$lang$applyTo = G__17700__4.cljs$lang$applyTo;
      return G__17700;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__17703 = null;
      var G__17703__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__17703__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__17703__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__17703__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__17703__4 = function() {
        var G__17704__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__17704 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__17704__delegate.call(this, x, y, z, args);
        };
        G__17704.cljs$lang$maxFixedArity = 3;
        G__17704.cljs$lang$applyTo = function(arglist__17705) {
          var x = cljs.core.first(arglist__17705);
          arglist__17705 = cljs.core.next(arglist__17705);
          var y = cljs.core.first(arglist__17705);
          arglist__17705 = cljs.core.next(arglist__17705);
          var z = cljs.core.first(arglist__17705);
          var args = cljs.core.rest(arglist__17705);
          return G__17704__delegate(x, y, z, args);
        };
        G__17704.cljs$core$IFn$_invoke$arity$variadic = G__17704__delegate;
        return G__17704;
      }();
      G__17703 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__17703__0.call(this);
          case 1:
            return G__17703__1.call(this, x);
          case 2:
            return G__17703__2.call(this, x, y);
          case 3:
            return G__17703__3.call(this, x, y, z);
          default:
            return G__17703__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17703.cljs$lang$maxFixedArity = 3;
      G__17703.cljs$lang$applyTo = G__17703__4.cljs$lang$applyTo;
      return G__17703;
    }();
  };
  var juxt__4 = function() {
    var G__17706__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__17707 = null;
          var G__17707__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__17687_SHARP_, p2__17688_SHARP_) {
                return cljs.core.conj.call(null, p1__17687_SHARP_, p2__17688_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__17707__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__17689_SHARP_, p2__17690_SHARP_) {
                return cljs.core.conj.call(null, p1__17689_SHARP_, p2__17690_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__17707__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__17691_SHARP_, p2__17692_SHARP_) {
                return cljs.core.conj.call(null, p1__17691_SHARP_, p2__17692_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__17707__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__17693_SHARP_, p2__17694_SHARP_) {
                return cljs.core.conj.call(null, p1__17693_SHARP_, p2__17694_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__17707__4 = function() {
            var G__17708__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__17695_SHARP_, p2__17696_SHARP_) {
                  return cljs.core.conj.call(null, p1__17695_SHARP_, cljs.core.apply.call(null, p2__17696_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__17708 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__17708__delegate.call(this, x, y, z, args);
            };
            G__17708.cljs$lang$maxFixedArity = 3;
            G__17708.cljs$lang$applyTo = function(arglist__17709) {
              var x = cljs.core.first(arglist__17709);
              arglist__17709 = cljs.core.next(arglist__17709);
              var y = cljs.core.first(arglist__17709);
              arglist__17709 = cljs.core.next(arglist__17709);
              var z = cljs.core.first(arglist__17709);
              var args = cljs.core.rest(arglist__17709);
              return G__17708__delegate(x, y, z, args);
            };
            G__17708.cljs$core$IFn$_invoke$arity$variadic = G__17708__delegate;
            return G__17708;
          }();
          G__17707 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__17707__0.call(this);
              case 1:
                return G__17707__1.call(this, x);
              case 2:
                return G__17707__2.call(this, x, y);
              case 3:
                return G__17707__3.call(this, x, y, z);
              default:
                return G__17707__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__17707.cljs$lang$maxFixedArity = 3;
          G__17707.cljs$lang$applyTo = G__17707__4.cljs$lang$applyTo;
          return G__17707;
        }();
      }(fs__$1);
    };
    var G__17706 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__17706__delegate.call(this, f, g, h, fs);
    };
    G__17706.cljs$lang$maxFixedArity = 3;
    G__17706.cljs$lang$applyTo = function(arglist__17710) {
      var f = cljs.core.first(arglist__17710);
      arglist__17710 = cljs.core.next(arglist__17710);
      var g = cljs.core.first(arglist__17710);
      arglist__17710 = cljs.core.next(arglist__17710);
      var h = cljs.core.first(arglist__17710);
      var fs = cljs.core.rest(arglist__17710);
      return G__17706__delegate(f, g, h, fs);
    };
    G__17706.cljs$core$IFn$_invoke$arity$variadic = G__17706__delegate;
    return G__17706;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__17711 = cljs.core.next.call(null, coll);
        coll = G__17711;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__17712 = n - 1;
        var G__17713 = cljs.core.next.call(null, coll);
        n = G__17712;
        coll = G__17713;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__17715 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__17715, 0, null);
  var flags = cljs.core.nth.call(null, vec__17715, 1, null);
  var pattern = cljs.core.nth.call(null, vec__17715, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_17717 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_17718__$1 = cljs.core.next.call(null, coll);
      var n_17719 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_17718__$1 && (n_17719 == null || !(n_17719 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_17718__$1), writer, opts);
          var G__17720 = cljs.core.next.call(null, coll_17718__$1);
          var G__17721 = n_17719 - 1;
          coll_17718__$1 = G__17720;
          n_17719 = G__17721;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_17718__$1) && n_17719 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_17717;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__17726 = cljs.core.seq.call(null, ss);
    var chunk__17727 = null;
    var count__17728 = 0;
    var i__17729 = 0;
    while (true) {
      if (i__17729 < count__17728) {
        var s = cljs.core._nth.call(null, chunk__17727, i__17729);
        cljs.core._write.call(null, writer, s);
        var G__17730 = seq__17726;
        var G__17731 = chunk__17727;
        var G__17732 = count__17728;
        var G__17733 = i__17729 + 1;
        seq__17726 = G__17730;
        chunk__17727 = G__17731;
        count__17728 = G__17732;
        i__17729 = G__17733;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__17726);
        if (temp__4092__auto__) {
          var seq__17726__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__17726__$1)) {
            var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__17726__$1);
            var G__17734 = cljs.core.chunk_rest.call(null, seq__17726__$1);
            var G__17735 = c__4297__auto__;
            var G__17736 = cljs.core.count.call(null, c__4297__auto__);
            var G__17737 = 0;
            seq__17726 = G__17734;
            chunk__17727 = G__17735;
            count__17728 = G__17736;
            i__17729 = G__17737;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__17726__$1);
            cljs.core._write.call(null, writer, s);
            var G__17738 = cljs.core.next.call(null, seq__17726__$1);
            var G__17739 = null;
            var G__17740 = 0;
            var G__17741 = 0;
            seq__17726 = G__17738;
            chunk__17727 = G__17739;
            count__17728 = G__17740;
            i__17729 = G__17741;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__17742) {
    var writer = cljs.core.first(arglist__17742);
    var ss = cljs.core.rest(arglist__17742);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj17744 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj17744;
}();
cljs.core.quote_string = function quote_string(s) {
  return'"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })) + '"';
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3529__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3529__auto__)) {
            var and__3529__auto____$1 = function() {
              var G__17750 = obj;
              if (G__17750) {
                var bit__4191__auto__ = G__17750.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4191__auto__ || G__17750.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__17750.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__17750);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__17750);
              }
            }();
            if (and__3529__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__3529__auto____$1;
            }
          } else {
            return and__3529__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__17751 = obj;
              if (G__17751) {
                var bit__4184__auto__ = G__17751.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4184__auto__ || G__17751.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__17753 = "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
                                ns = G__17753;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__17752 = obj;
                              if (G__17752) {
                                var bit__4191__auto__ = G__17752.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4191__auto__ || G__17752.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__17752.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__17752);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__17752);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__17758 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__17759 = null;
  var count__17760 = 0;
  var i__17761 = 0;
  while (true) {
    if (i__17761 < count__17760) {
      var obj = cljs.core._nth.call(null, chunk__17759, i__17761);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__17762 = seq__17758;
      var G__17763 = chunk__17759;
      var G__17764 = count__17760;
      var G__17765 = i__17761 + 1;
      seq__17758 = G__17762;
      chunk__17759 = G__17763;
      count__17760 = G__17764;
      i__17761 = G__17765;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17758);
      if (temp__4092__auto__) {
        var seq__17758__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17758__$1)) {
          var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__17758__$1);
          var G__17766 = cljs.core.chunk_rest.call(null, seq__17758__$1);
          var G__17767 = c__4297__auto__;
          var G__17768 = cljs.core.count.call(null, c__4297__auto__);
          var G__17769 = 0;
          seq__17758 = G__17766;
          chunk__17759 = G__17767;
          count__17760 = G__17768;
          i__17761 = G__17769;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__17758__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__17770 = cljs.core.next.call(null, seq__17758__$1);
          var G__17771 = null;
          var G__17772 = 0;
          var G__17773 = 0;
          seq__17758 = G__17770;
          chunk__17759 = G__17771;
          count__17760 = G__17772;
          i__17761 = G__17773;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts.call(null, objs, opts));
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__17774) {
    var objs = cljs.core.seq(arglist__17774);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__17775) {
    var objs = cljs.core.seq(arglist__17775);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__17776) {
    var objs = cljs.core.seq(arglist__17776);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__17777) {
    var objs = cljs.core.seq(arglist__17777);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__17778) {
    var objs = cljs.core.seq(arglist__17778);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__17779) {
    var objs = cljs.core.seq(arglist__17779);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__17780) {
    var objs = cljs.core.seq(arglist__17780);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__17781) {
    var objs = cljs.core.seq(arglist__17781);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.IAtom = function() {
  var obj17783 = {};
  return obj17783;
}();
cljs.core.IReset = function() {
  var obj17785 = {};
  return obj17785;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj17787 = {};
  return obj17787;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3529__auto__ = o;
      if (and__3529__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4168__auto__ = o == null ? null : o;
      return function() {
        var or__3541__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3529__auto__ = o;
      if (and__3529__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4168__auto__ = o == null ? null : o;
      return function() {
        var or__3541__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3529__auto__ = o;
      if (and__3529__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4168__auto__ = o == null ? null : o;
      return function() {
        var or__3541__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3529__auto__ = o;
      if (and__3529__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4168__auto__ = o == null ? null : o;
      return function() {
        var or__3541__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__17788 = cljs.core.seq.call(null, self__.watches);
  var chunk__17789 = null;
  var count__17790 = 0;
  var i__17791 = 0;
  while (true) {
    if (i__17791 < count__17790) {
      var vec__17792 = cljs.core._nth.call(null, chunk__17789, i__17791);
      var key = cljs.core.nth.call(null, vec__17792, 0, null);
      var f = cljs.core.nth.call(null, vec__17792, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__17794 = seq__17788;
      var G__17795 = chunk__17789;
      var G__17796 = count__17790;
      var G__17797 = i__17791 + 1;
      seq__17788 = G__17794;
      chunk__17789 = G__17795;
      count__17790 = G__17796;
      i__17791 = G__17797;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17788);
      if (temp__4092__auto__) {
        var seq__17788__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17788__$1)) {
          var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__17788__$1);
          var G__17798 = cljs.core.chunk_rest.call(null, seq__17788__$1);
          var G__17799 = c__4297__auto__;
          var G__17800 = cljs.core.count.call(null, c__4297__auto__);
          var G__17801 = 0;
          seq__17788 = G__17798;
          chunk__17789 = G__17799;
          count__17790 = G__17800;
          i__17791 = G__17801;
          continue;
        } else {
          var vec__17793 = cljs.core.first.call(null, seq__17788__$1);
          var key = cljs.core.nth.call(null, vec__17793, 0, null);
          var f = cljs.core.nth.call(null, vec__17793, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__17802 = cljs.core.next.call(null, seq__17788__$1);
          var G__17803 = null;
          var G__17804 = 0;
          var G__17805 = 0;
          seq__17788 = G__17802;
          chunk__17789 = G__17803;
          count__17790 = G__17804;
          i__17791 = G__17805;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__17809__delegate = function(x, p__17806) {
      var map__17808 = p__17806;
      var map__17808__$1 = cljs.core.seq_QMARK_.call(null, map__17808) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17808) : map__17808;
      var validator = cljs.core.get.call(null, map__17808__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__17808__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__17809 = function(x, var_args) {
      var p__17806 = null;
      if (arguments.length > 1) {
        p__17806 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__17809__delegate.call(this, x, p__17806);
    };
    G__17809.cljs$lang$maxFixedArity = 1;
    G__17809.cljs$lang$applyTo = function(arglist__17810) {
      var x = cljs.core.first(arglist__17810);
      var p__17806 = cljs.core.rest(arglist__17810);
      return G__17809__delegate(x, p__17806);
    };
    G__17809.cljs$core$IFn$_invoke$arity$variadic = G__17809__delegate;
    return G__17809;
  }();
  atom = function(x, var_args) {
    var p__17806 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error("Assert failed: Validator rejected reference state\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null)))));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__17811__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__17811 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__17811__delegate.call(this, a, f, x, y, more);
    };
    G__17811.cljs$lang$maxFixedArity = 4;
    G__17811.cljs$lang$applyTo = function(arglist__17812) {
      var a = cljs.core.first(arglist__17812);
      arglist__17812 = cljs.core.next(arglist__17812);
      var f = cljs.core.first(arglist__17812);
      arglist__17812 = cljs.core.next(arglist__17812);
      var x = cljs.core.first(arglist__17812);
      arglist__17812 = cljs.core.next(arglist__17812);
      var y = cljs.core.first(arglist__17812);
      var more = cljs.core.rest(arglist__17812);
      return G__17811__delegate(a, f, x, y, more);
    };
    G__17811.cljs$core$IFn$_invoke$arity$variadic = G__17811__delegate;
    return G__17811;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__17813) {
    var iref = cljs.core.first(arglist__17813);
    arglist__17813 = cljs.core.next(arglist__17813);
    var f = cljs.core.first(arglist__17813);
    var args = cljs.core.rest(arglist__17813);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc)));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(___$1) {
    return function(p__17814) {
      var map__17815 = p__17814;
      var map__17815__$1 = cljs.core.seq_QMARK_.call(null, map__17815) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17815) : map__17815;
      var curr_state = map__17815__$1;
      var done = cljs.core.get.call(null, map__17815__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
      if (cljs.core.truth_(done)) {
        return curr_state;
      } else {
        return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
      }
    };
  }(___$1)));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj17817 = {};
  return obj17817;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__17819 = k;
    if (G__17819) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__17819.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__17819.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__17819);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__17819);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__17833 = x;
      if (G__17833) {
        var bit__4191__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3541__auto__ = bit__4191__auto__;
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return G__17833.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__17833.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__17833);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__17833);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj17835 = {};
              return obj17835;
            }();
            var seq__17836_17846 = cljs.core.seq.call(null, x);
            var chunk__17837_17847 = null;
            var count__17838_17848 = 0;
            var i__17839_17849 = 0;
            while (true) {
              if (i__17839_17849 < count__17838_17848) {
                var vec__17840_17850 = cljs.core._nth.call(null, chunk__17837_17847, i__17839_17849);
                var k_17851 = cljs.core.nth.call(null, vec__17840_17850, 0, null);
                var v_17852 = cljs.core.nth.call(null, vec__17840_17850, 1, null);
                m[cljs.core.key__GT_js.call(null, k_17851)] = clj__GT_js.call(null, v_17852);
                var G__17853 = seq__17836_17846;
                var G__17854 = chunk__17837_17847;
                var G__17855 = count__17838_17848;
                var G__17856 = i__17839_17849 + 1;
                seq__17836_17846 = G__17853;
                chunk__17837_17847 = G__17854;
                count__17838_17848 = G__17855;
                i__17839_17849 = G__17856;
                continue;
              } else {
                var temp__4092__auto___17857 = cljs.core.seq.call(null, seq__17836_17846);
                if (temp__4092__auto___17857) {
                  var seq__17836_17858__$1 = temp__4092__auto___17857;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__17836_17858__$1)) {
                    var c__4297__auto___17859 = cljs.core.chunk_first.call(null, seq__17836_17858__$1);
                    var G__17860 = cljs.core.chunk_rest.call(null, seq__17836_17858__$1);
                    var G__17861 = c__4297__auto___17859;
                    var G__17862 = cljs.core.count.call(null, c__4297__auto___17859);
                    var G__17863 = 0;
                    seq__17836_17846 = G__17860;
                    chunk__17837_17847 = G__17861;
                    count__17838_17848 = G__17862;
                    i__17839_17849 = G__17863;
                    continue;
                  } else {
                    var vec__17841_17864 = cljs.core.first.call(null, seq__17836_17858__$1);
                    var k_17865 = cljs.core.nth.call(null, vec__17841_17864, 0, null);
                    var v_17866 = cljs.core.nth.call(null, vec__17841_17864, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_17865)] = clj__GT_js.call(null, v_17866);
                    var G__17867 = cljs.core.next.call(null, seq__17836_17858__$1);
                    var G__17868 = null;
                    var G__17869 = 0;
                    var G__17870 = 0;
                    seq__17836_17846 = G__17867;
                    chunk__17837_17847 = G__17868;
                    count__17838_17848 = G__17869;
                    i__17839_17849 = G__17870;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__17842_17871 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__17843_17872 = null;
              var count__17844_17873 = 0;
              var i__17845_17874 = 0;
              while (true) {
                if (i__17845_17874 < count__17844_17873) {
                  var x_17875__$1 = cljs.core._nth.call(null, chunk__17843_17872, i__17845_17874);
                  arr.push(x_17875__$1);
                  var G__17876 = seq__17842_17871;
                  var G__17877 = chunk__17843_17872;
                  var G__17878 = count__17844_17873;
                  var G__17879 = i__17845_17874 + 1;
                  seq__17842_17871 = G__17876;
                  chunk__17843_17872 = G__17877;
                  count__17844_17873 = G__17878;
                  i__17845_17874 = G__17879;
                  continue;
                } else {
                  var temp__4092__auto___17880 = cljs.core.seq.call(null, seq__17842_17871);
                  if (temp__4092__auto___17880) {
                    var seq__17842_17881__$1 = temp__4092__auto___17880;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__17842_17881__$1)) {
                      var c__4297__auto___17882 = cljs.core.chunk_first.call(null, seq__17842_17881__$1);
                      var G__17883 = cljs.core.chunk_rest.call(null, seq__17842_17881__$1);
                      var G__17884 = c__4297__auto___17882;
                      var G__17885 = cljs.core.count.call(null, c__4297__auto___17882);
                      var G__17886 = 0;
                      seq__17842_17871 = G__17883;
                      chunk__17843_17872 = G__17884;
                      count__17844_17873 = G__17885;
                      i__17845_17874 = G__17886;
                      continue;
                    } else {
                      var x_17887__$1 = cljs.core.first.call(null, seq__17842_17881__$1);
                      arr.push(x_17887__$1);
                      var G__17888 = cljs.core.next.call(null, seq__17842_17881__$1);
                      var G__17889 = null;
                      var G__17890 = 0;
                      var G__17891 = 0;
                      seq__17842_17871 = G__17888;
                      chunk__17843_17872 = G__17889;
                      count__17844_17873 = G__17890;
                      i__17845_17874 = G__17891;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj17893 = {};
  return obj17893;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__17914__delegate = function(x, opts) {
      if (function() {
        var G__17904 = x;
        if (G__17904) {
          var bit__4191__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3541__auto__ = bit__4191__auto__;
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return G__17904.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__17904.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__17904);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__17904);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__17905 = opts;
          var map__17905__$1 = cljs.core.seq_QMARK_.call(null, map__17905) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17905) : map__17905;
          var keywordize_keys = cljs.core.get.call(null, map__17905__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__17905, map__17905__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4266__auto__ = function(map__17905, map__17905__$1, keywordize_keys, keyfn) {
                          return function iter__17910(s__17911) {
                            return new cljs.core.LazySeq(null, function(map__17905, map__17905__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__17911__$1 = s__17911;
                                while (true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__17911__$1);
                                  if (temp__4092__auto__) {
                                    var s__17911__$2 = temp__4092__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__17911__$2)) {
                                      var c__4264__auto__ = cljs.core.chunk_first.call(null, s__17911__$2);
                                      var size__4265__auto__ = cljs.core.count.call(null, c__4264__auto__);
                                      var b__17913 = cljs.core.chunk_buffer.call(null, size__4265__auto__);
                                      if (function() {
                                        var i__17912 = 0;
                                        while (true) {
                                          if (i__17912 < size__4265__auto__) {
                                            var k = cljs.core._nth.call(null, c__4264__auto__, i__17912);
                                            cljs.core.chunk_append.call(null, b__17913, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__17915 = i__17912 + 1;
                                            i__17912 = G__17915;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17913), iter__17910.call(null, cljs.core.chunk_rest.call(null, s__17911__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17913), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__17911__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__17910.call(null, cljs.core.rest.call(null, s__17911__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__17905, map__17905__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__17905, map__17905__$1, keywordize_keys, keyfn);
                        return iter__4266__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__17905, map__17905__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__17914 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__17914__delegate.call(this, x, opts);
    };
    G__17914.cljs$lang$maxFixedArity = 1;
    G__17914.cljs$lang$applyTo = function(arglist__17916) {
      var x = cljs.core.first(arglist__17916);
      var opts = cljs.core.rest(arglist__17916);
      return G__17914__delegate(x, opts);
    };
    G__17914.cljs$core$IFn$_invoke$arity$variadic = G__17914__delegate;
    return G__17914;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__17917__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__17917 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__17917__delegate.call(this, args);
      };
      G__17917.cljs$lang$maxFixedArity = 0;
      G__17917.cljs$lang$applyTo = function(arglist__17918) {
        var args = cljs.core.seq(arglist__17918);
        return G__17917__delegate(args);
      };
      G__17917.cljs$core$IFn$_invoke$arity$variadic = G__17917__delegate;
      return G__17917;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__17919 = ret;
        f = G__17919;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__17920__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__17920 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__17920__delegate.call(this, f, args);
    };
    G__17920.cljs$lang$maxFixedArity = 1;
    G__17920.cljs$lang$applyTo = function(arglist__17921) {
      var f = cljs.core.first(arglist__17921);
      var args = cljs.core.rest(arglist__17921);
      return G__17920__delegate(f, args);
    };
    G__17920.cljs$core$IFn$_invoke$arity$variadic = G__17920__delegate;
    return G__17920;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__17922) {
    var f = cljs.core.first(arglist__17922);
    var args = cljs.core.rest(arglist__17922);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3541__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3541__auto__) {
      return or__3541__auto__;
    } else {
      var or__3541__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3541__auto____$1) {
        return or__3541__auto____$1;
      } else {
        var and__3529__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3529__auto__) {
          var and__3529__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3529__auto____$1) {
            var and__3529__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3529__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__17923 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__17924 = i + 1;
                  ret = G__17923;
                  i = G__17924;
                  continue;
                }
                break;
              }
            } else {
              return and__3529__auto____$2;
            }
          } else {
            return and__3529__auto____$1;
          }
        } else {
          return and__3529__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null)))));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null)))));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3541__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "already has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "as ancestor");
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error("Cyclic derivation:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "as ancestor");
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__17925_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__17925_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__17925_SHARP_), cljs.core.second.call(null, p1__17925_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__17926_SHARP_, p2__17927_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__17926_SHARP_, p2__17927_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3541__auto__ = cljs.core.truth_(function() {
    var and__3529__auto__ = xprefs;
    if (cljs.core.truth_(and__3529__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3529__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    var or__3541__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__17928 = cljs.core.rest.call(null, ps);
          ps = G__17928;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3541__auto____$1)) {
      return or__3541__auto____$1;
    } else {
      var or__3541__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__17929 = cljs.core.rest.call(null, ps);
            ps = G__17929;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3541__auto____$2)) {
        return or__3541__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3541__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__17932) {
    var vec__17933 = p__17932;
    var k = cljs.core.nth.call(null, vec__17933, 0, null);
    var _ = cljs.core.nth.call(null, vec__17933, 1, null);
    var e = vec__17933;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3541__auto__ = be == null;
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error("Multiple methods in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' match dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val) + " -\x3e " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(k) + " and " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, be2)) + ", and neither is preferred");
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj17935 = {};
  return obj17935;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3529__auto__ = mf;
    if (and__3529__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4168__auto__ = mf == null ? null : mf;
    return function() {
      var or__3541__auto__ = cljs.core._reset[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._reset["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3529__auto__ = mf;
    if (and__3529__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4168__auto__ = mf == null ? null : mf;
    return function() {
      var or__3541__auto__ = cljs.core._add_method[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._add_method["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3529__auto__ = mf;
    if (and__3529__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4168__auto__ = mf == null ? null : mf;
    return function() {
      var or__3541__auto__ = cljs.core._remove_method[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._remove_method["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3529__auto__ = mf;
    if (and__3529__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4168__auto__ = mf == null ? null : mf;
    return function() {
      var or__3541__auto__ = cljs.core._prefer_method[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3529__auto__ = mf;
    if (and__3529__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4168__auto__ = mf == null ? null : mf;
    return function() {
      var or__3541__auto__ = cljs.core._get_method[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._get_method["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3529__auto__ = mf;
    if (and__3529__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4168__auto__ = mf == null ? null : mf;
    return function() {
      var or__3541__auto__ = cljs.core._methods[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._methods["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3529__auto__ = mf;
    if (and__3529__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4168__auto__ = mf == null ? null : mf;
    return function() {
      var or__3541__auto__ = cljs.core._prefers[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._prefers["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error("No method in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' for dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn;
  } else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error("Preference conflict in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + "': " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y) + " is already preferred to " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__17937 = null;
  var G__17937__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__17937__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__17937__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__17937__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__17937__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__17937__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__17937__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__17937__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__17937__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__17937__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__17937__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__17937__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__17937__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__17937__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__17937__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__17937__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__17937__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__17937__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__17937__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__17937__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__17937__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__17937 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 2:
        return G__17937__2.call(this, self__, a);
      case 3:
        return G__17937__3.call(this, self__, a, b);
      case 4:
        return G__17937__4.call(this, self__, a, b, c);
      case 5:
        return G__17937__5.call(this, self__, a, b, c, d);
      case 6:
        return G__17937__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__17937__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__17937__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__17937__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__17937__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__17937__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__17937__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__17937__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__17937__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__17937__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__17937__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__17937__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__17937__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__17937__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__17937__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__17937__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__17937__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17937;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args17936) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17936)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, '#uuid "' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid) + '"');
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4111__auto__, writer__4112__auto__, opts__4113__auto__) {
  return cljs.core._write.call(null, writer__4112__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw "Invalid match arg: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(match);
      } else {
        return null;
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)));
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__21204 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__21204;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__21208 = cljs.core._EQ_;
    var expr__21209 = limit;
    if (cljs.core.truth_(pred__21208.call(null, 1, expr__21209))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__21208.call(null, 2, expr__21209))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(re), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)).split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__21211 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__21212 = limit__$1 - 1;
            var G__21213 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__21211;
            limit__$1 = G__21212;
            parts = G__21213;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__21214 = index - 1;
        index = G__21214;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4090__auto___21215 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4090__auto___21215)) {
        var replacement_21216 = temp__4090__auto___21215;
        buffer.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement_21216));
      } else {
        buffer.append(ch);
      }
      var G__21217 = index + 1;
      index = G__21217;
      continue;
    }
    break;
  }
};
goog.provide("cemerick.cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
cemerick.cljs.test._STAR_test_print_fn_STAR_ = null;
cemerick.cljs.test._STAR_entry_point_STAR_ = true;
cemerick.cljs.test._STAR_test_ctx_STAR_ = null;
cemerick.cljs.test.init_test_environment_STAR_ = function init_test_environment_STAR_(aux_data) {
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.assoc.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 1017460740), 0, new cljs.core.Keyword(null, "pass", "pass", 1017337731), 0, new cljs.core.Keyword(null, "fail", "fail", 1017039504), 0, new cljs.core.Keyword(null, "error", "error", 1110689146), 0], null), cljs.core.truth_(cemerick.cljs.test._STAR_test_print_fn_STAR_) ? new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180), cemerick.cljs.test._STAR_test_print_fn_STAR_], null) : null), new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1853176376), cljs.core.List.EMPTY), aux_data));
};
cemerick.cljs.test.init_test_environment = function init_test_environment() {
  var G__21050 = cemerick.cljs.test.init_test_environment_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", 1471979159), cljs.core.List.EMPTY], null));
  cljs.core.swap_BANG_.call(null, G__21050, cljs.core.assoc, new cljs.core.Keyword(null, "async", "async", 1107031534), cemerick.cljs.test.init_test_environment_STAR_.call(null, cljs.core.PersistentArrayMap.EMPTY));
  return G__21050;
};
cemerick.cljs.test.registered_tests = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_test_hooks = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_fixtures = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.register_test_BANG_ = function register_test_BANG_(ns, name, fn) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_tests, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns], null), cljs.core.assoc, name, fn);
};
cemerick.cljs.test.register_test_ns_hook_BANG_ = function register_test_ns_hook_BANG_(ns, name) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_test_hooks, cljs.core.assoc, ns, name);
};
cemerick.cljs.test.TestContext = function(test_env, test_name, __meta, __extmap) {
  this.test_env = test_env;
  this.test_name = test_name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4122__auto__) {
  var self__ = this;
  var this__4122__auto____$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_imap.call(null, this__4122__auto____$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4127__auto__, k__4128__auto__) {
  var self__ = this;
  var this__4127__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4127__auto____$1, k__4128__auto__, null);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4129__auto__, k21052, else__4130__auto__) {
  var self__ = this;
  var this__4129__auto____$1 = this;
  var G__21054 = k21052 instanceof cljs.core.Keyword ? k21052.fqn : null;
  var caseval__21058;
  switch(G__21054) {
    case "test-name":
      caseval__21058 = self__.test_name;
      break;
    case "test-env":
      caseval__21058 = self__.test_env;
      break;
    default:
      caseval__21058 = cljs.core.get.call(null, self__.__extmap, k21052, else__4130__auto__);
  }
  return caseval__21058;
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4134__auto__, k__4135__auto__, G__21051) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var pred__21055 = cljs.core.keyword_identical_QMARK_;
  var expr__21056 = k__4135__auto__;
  if (cljs.core.truth_(pred__21055.call(null, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), expr__21056))) {
    return new cemerick.cljs.test.TestContext(G__21051, self__.test_name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__21055.call(null, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), expr__21056))) {
      return new cemerick.cljs.test.TestContext(self__.test_env, G__21051, self__.__meta, self__.__extmap, null);
    } else {
      return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4135__auto__, G__21051), null);
    }
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4141__auto__, writer__4142__auto__, opts__4143__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var pr_pair__4144__auto__ = function(this__4141__auto____$1) {
    return function(keyval__4145__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4142__auto__, cljs.core.pr_writer, "", " ", "", opts__4143__auto__, keyval__4145__auto__);
    };
  }(this__4141__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4142__auto__, pr_pair__4144__auto__, "#cemerick.cljs.test.TestContext{", ", ", "}", opts__4143__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), self__.test_env], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), self__.test_name], null)], null), self__.__extmap));
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4132__auto__, entry__4133__auto__) {
  var self__ = this;
  var this__4132__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4133__auto__)) {
    return cljs.core._assoc.call(null, this__4132__auto____$1, cljs.core._nth.call(null, entry__4133__auto__, 0), cljs.core._nth.call(null, entry__4133__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4132__auto____$1, entry__4133__auto__);
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), self__.test_env], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), self__.test_name], null)], null), 
  self__.__extmap));
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4131__auto__) {
  var self__ = this;
  var this__4131__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4123__auto__, other__4124__auto__) {
  var self__ = this;
  var this__4123__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3529__auto__ = other__4124__auto__;
    if (cljs.core.truth_(and__3529__auto__)) {
      return this__4123__auto____$1.constructor === other__4124__auto__.constructor && cljs.core.equiv_map.call(null, this__4123__auto____$1, other__4124__auto__);
    } else {
      return and__3529__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4126__auto__, G__21051) {
  var self__ = this;
  var this__4126__auto____$1 = this;
  return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, G__21051, self__.__extmap, self__.__hash);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4121__auto__) {
  var self__ = this;
  var this__4121__auto____$1 = this;
  return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, self__.__extmap, self__.__hash);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4125__auto__) {
  var self__ = this;
  var this__4125__auto____$1 = this;
  return self__.__meta;
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4136__auto__, k__4137__auto__) {
  var self__ = this;
  var this__4136__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), null, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), null], null), null), k__4137__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4136__auto____$1), self__.__meta), k__4137__auto__);
  } else {
    return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4137__auto__)), null);
  }
};
cemerick.cljs.test.TestContext.cljs$lang$type = true;
cemerick.cljs.test.TestContext.cljs$lang$ctorPrSeq = function(this__4161__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cemerick.cljs.test/TestContext");
};
cemerick.cljs.test.TestContext.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cemerick.cljs.test/TestContext");
};
cemerick.cljs.test.__GT_TestContext = function __GT_TestContext(test_env, test_name) {
  return new cemerick.cljs.test.TestContext(test_env, test_name);
};
cemerick.cljs.test.map__GT_TestContext = function map__GT_TestContext(G__21053) {
  return new cemerick.cljs.test.TestContext((new cljs.core.Keyword(null, "test-env", "test-env", 4160920740)).cljs$core$IFn$_invoke$arity$1(G__21053), (new cljs.core.Keyword(null, "test-name", "test-name", 4082390616)).cljs$core$IFn$_invoke$arity$1(G__21053), null, cljs.core.dissoc.call(null, G__21053, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), new cljs.core.Keyword(null, "test-name", "test-name", 4082390616)));
};
cemerick.cljs.test.maybe_deref = function maybe_deref(x) {
  if (function() {
    var G__21060 = x;
    if (G__21060) {
      var bit__4191__auto__ = G__21060.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__4191__auto__ || G__21060.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__21060.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__21060);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__21060);
    }
  }()) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cemerick.cljs.test.testing_complete_QMARK_ = function testing_complete_QMARK_(test_env) {
  var map__21062 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  var map__21062__$1 = cljs.core.seq_QMARK_.call(null, map__21062) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21062) : map__21062;
  var remaining = cljs.core.get.call(null, map__21062__$1, new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", 3842781245));
  var running = cljs.core.get.call(null, map__21062__$1, new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", 1286908024));
  var async = cljs.core.get.call(null, map__21062__$1, new cljs.core.Keyword(null, "async", "async", 1107031534));
  var and__3529__auto__ = cljs.core.empty_QMARK_.call(null, remaining);
  if (and__3529__auto__) {
    var and__3529__auto____$1 = cljs.core.empty_QMARK_.call(null, running);
    if (and__3529__auto____$1) {
      var or__3541__auto__ = async == null;
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        return testing_complete_QMARK_.call(null, async);
      }
    } else {
      return and__3529__auto____$1;
    }
  } else {
    return and__3529__auto__;
  }
};
cemerick.cljs.test.on_async_progress = function on_async_progress(test_env, callback) {
  if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env))) {
    setTimeout(function() {
      return callback.call(null, test_env);
    }, 1);
  } else {
    cljs.core.add_watch.call(null, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cemerick.cljs.test.maybe_deref.call(null, test_env)), cljs.core.gensym.call(null, "on-progress"), function(key, ref, old, new$) {
      var vec__21065 = cljs.core.map.call(null, function(p1__21063_SHARP_) {
        return cljs.core.select_keys.call(null, p1__21063_SHARP_, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test", "test", 1017460740), new cljs.core.Keyword(null, "pass", "pass", 1017337731), new cljs.core.Keyword(null, "fail", "fail", 1017039504), new cljs.core.Keyword(null, "error", "error", 1110689146)], null));
      }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old, new$], null));
      var oldv = cljs.core.nth.call(null, vec__21065, 0, null);
      var newv = cljs.core.nth.call(null, vec__21065, 1, null);
      var complete_QMARK_ = cemerick.cljs.test.testing_complete_QMARK_.call(null, new$);
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = complete_QMARK_;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return cljs.core.not_EQ_.call(null, oldv, newv);
        }
      }())) {
        callback.call(null, cemerick.cljs.test.maybe_deref.call(null, test_env));
      } else {
      }
      if (cljs.core.truth_(complete_QMARK_)) {
        return cljs.core.remove_watch.call(null, ref, key);
      } else {
        return null;
      }
    });
  }
  return test_env;
};
goog.exportSymbol("cemerick.cljs.test.on_async_progress", cemerick.cljs.test.on_async_progress);
cemerick.cljs.test.on_testing_complete = function on_testing_complete(test_env, callback) {
  return cemerick.cljs.test.on_async_progress.call(null, test_env, function(test_env__$1) {
    if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env__$1))) {
      return callback.call(null, test_env__$1);
    } else {
      return null;
    }
  });
};
goog.exportSymbol("cemerick.cljs.test.on_testing_complete", cemerick.cljs.test.on_testing_complete);
cemerick.cljs.test.testing_vars_str = function testing_vars_str(p__21066) {
  var map__21068 = p__21066;
  var map__21068__$1 = cljs.core.seq_QMARK_.call(null, map__21068) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21068) : map__21068;
  var m = map__21068__$1;
  var test_name = cljs.core.get.call(null, map__21068__$1, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616));
  var test_env = cljs.core.get.call(null, map__21068__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  var line = cljs.core.get.call(null, map__21068__$1, new cljs.core.Keyword(null, "line", "line", 1017226086));
  var file = cljs.core.get.call(null, map__21068__$1, new cljs.core.Keyword(null, "file", "file", 1017047278));
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, function() {
    var or__3541__auto__ = cljs.core.seq.call(null, cljs.core.reverse.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", 1471979159)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env))));
    if (or__3541__auto__) {
      return or__3541__auto__;
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, test_name);
    }
  }())) + " (" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(file) + ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(line) + ")";
};
cemerick.cljs.test.testing_contexts_str = function testing_contexts_str(test_env) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1853176376)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))));
};
cemerick.cljs.test.inc_report_counter = function inc_report_counter(test_env, name) {
  return cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
};
cemerick.cljs.test.report = function() {
  var method_table__4407__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4408__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4409__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4410__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4411__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("report", new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4411__auto__, method_table__4407__auto__, prefer_table__4408__auto__, method_cache__4409__auto__, cached_hierarchy__4410__auto__);
}();
cemerick.cljs.test.file_and_line = function file_and_line(error) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", 1017047278), error.fileName, new cljs.core.Keyword(null, "line", "line", 1017226086), error.lineNumber], null);
};
cemerick.cljs.test.do_report = function() {
  var do_report = null;
  var do_report__1 = function(m) {
    return cemerick.cljs.test.report.call(null, function() {
      var G__21073 = (new cljs.core.Keyword(null, "type", "type", 1017479852)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1017479852)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
      var caseval__21074;
      switch(G__21073) {
        case "error":
          caseval__21074 = cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 3885931776)).cljs$core$IFn$_invoke$arity$1(m)), m);
          break;
        case "fail":
          caseval__21074 = cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, Error()), m);
          break;
        default:
          caseval__21074 = m;
      }
      return caseval__21074;
    }());
  };
  var do_report__2 = function(p__21069, m) {
    var map__21072 = p__21069;
    var map__21072__$1 = cljs.core.seq_QMARK_.call(null, map__21072) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21072) : map__21072;
    var test_ctx = map__21072__$1;
    var test_name = cljs.core.get.call(null, map__21072__$1, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616));
    var test_env = cljs.core.get.call(null, map__21072__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", -1611433981, null), new cljs.core.Symbol(null, "TestContext", "TestContext", 586269270, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", 1506483237, null)))));
    }
    return do_report.call(null, cljs.core.merge.call(null, m, test_ctx));
  };
  do_report = function(p__21069, m) {
    switch(arguments.length) {
      case 1:
        return do_report__1.call(this, p__21069);
      case 2:
        return do_report__2.call(this, p__21069, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  do_report.cljs$core$IFn$_invoke$arity$1 = do_report__1;
  do_report.cljs$core$IFn$_invoke$arity$2 = do_report__2;
  return do_report;
}();
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "default", "default", 2558708147), function(p__21075) {
  var map__21076 = p__21075;
  var map__21076__$1 = cljs.core.seq_QMARK_.call(null, map__21076) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21076) : map__21076;
  var m = map__21076__$1;
  var test_env = cljs.core.get.call(null, map__21076__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  var _STAR_print_fn_STAR_21077 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3541__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cljs.core.prn.call(null, m);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_21077;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "pass", "pass", 1017337731), function(p__21078) {
  var map__21079 = p__21078;
  var map__21079__$1 = cljs.core.seq_QMARK_.call(null, map__21079) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21079) : map__21079;
  var m = map__21079__$1;
  var test_env = cljs.core.get.call(null, map__21079__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  var _STAR_print_fn_STAR_21080 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3541__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "pass", "pass", 1017337731));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_21080;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "fail", "fail", 1017039504), function(p__21081) {
  var map__21082 = p__21081;
  var map__21082__$1 = cljs.core.seq_QMARK_.call(null, map__21082) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21082) : map__21082;
  var m = map__21082__$1;
  var test_env = cljs.core.get.call(null, map__21082__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  var _STAR_print_fn_STAR_21083 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3541__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "fail", "fail", 1017039504));
    cljs.core.println.call(null, "\nFAIL in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1853176376)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4092__auto___21084 = (new cljs.core.Keyword(null, "message", "message", 1968829305)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4092__auto___21084)) {
      var message_21085 = temp__4092__auto___21084;
      cljs.core.println.call(null, message_21085);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 3373152810)).cljs$core$IFn$_invoke$arity$1(m)));
    return cljs.core.println.call(null, "  actual:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "actual", "actual", 3885931776)).cljs$core$IFn$_invoke$arity$1(m)));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_21083;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "error", "error", 1110689146), function(p__21086) {
  var map__21087 = p__21086;
  var map__21087__$1 = cljs.core.seq_QMARK_.call(null, map__21087) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21087) : map__21087;
  var m = map__21087__$1;
  var test_env = cljs.core.get.call(null, map__21087__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  var _STAR_print_fn_STAR_21088 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3541__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "error", "error", 1110689146));
    cljs.core.println.call(null, "\nERROR in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1853176376)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4092__auto___21089 = (new cljs.core.Keyword(null, "message", "message", 1968829305)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4092__auto___21089)) {
      var message_21090 = temp__4092__auto___21089;
      cljs.core.println.call(null, message_21090);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 3373152810)).cljs$core$IFn$_invoke$arity$1(m)));
    cljs.core.print.call(null, "  actual: ");
    var actual = (new cljs.core.Keyword(null, "actual", "actual", 3885931776)).cljs$core$IFn$_invoke$arity$1(m);
    if (actual instanceof Error) {
      return cljs.core.println.call(null, actual.stack);
    } else {
      return cljs.core.prn.call(null, actual);
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_21088;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 4521901954), function(p__21091) {
  var map__21092 = p__21091;
  var map__21092__$1 = cljs.core.seq_QMARK_.call(null, map__21092) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21092) : map__21092;
  var m = map__21092__$1;
  var test_env = cljs.core.get.call(null, map__21092__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  var _STAR_print_fn_STAR_21093 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3541__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 4521901954));
    cljs.core.println.call(null, "\nWARNING in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1853176376)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4092__auto__ = (new cljs.core.Keyword(null, "message", "message", 1968829305)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var message = temp__4092__auto__;
      return cljs.core.println.call(null, message);
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_21093;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "summary", "summary", 3451231E3), function(p__21094) {
  var map__21095 = p__21094;
  var map__21095__$1 = cljs.core.seq_QMARK_.call(null, map__21095) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21095) : map__21095;
  var test_env = map__21095__$1;
  var error = cljs.core.get.call(null, map__21095__$1, new cljs.core.Keyword(null, "error", "error", 1110689146));
  var fail = cljs.core.get.call(null, map__21095__$1, new cljs.core.Keyword(null, "fail", "fail", 1017039504));
  var pass = cljs.core.get.call(null, map__21095__$1, new cljs.core.Keyword(null, "pass", "pass", 1017337731));
  var test = cljs.core.get.call(null, map__21095__$1, new cljs.core.Keyword(null, "test", "test", 1017460740));
  var _STAR_print_fn_STAR_21096 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3541__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cljs.core.println.call(null, "\nRan", test, "tests containing", pass + fail + error, "assertions.");
    var temp__4090__auto__ = function() {
      var and__3529__auto__ = cljs.core.not.call(null, cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env));
      if (and__3529__auto__) {
        return cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, cljs.core.juxt.call(null, new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", 3842781245), new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", 1286908024)).call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(test_env)))));
      } else {
        return and__3529__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var pending_count = temp__4090__auto__;
      return cljs.core.println.call(null, "Waiting on", pending_count, "asynchronous test" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(pending_count > 1 ? "s" : null) + " to complete.");
    } else {
      return cljs.core.println.call(null, "Testing complete:", fail, "failures,", error, "errors.");
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_21096;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", 1359210286), function(p__21097) {
  var map__21098 = p__21097;
  var map__21098__$1 = cljs.core.seq_QMARK_.call(null, map__21098) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21098) : map__21098;
  var m = map__21098__$1;
  var async = cljs.core.get.call(null, map__21098__$1, new cljs.core.Keyword(null, "async", "async", 1107031534));
  var test_env = cljs.core.get.call(null, map__21098__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  var ns = cljs.core.get.call(null, map__21098__$1, new cljs.core.Keyword(null, "ns", "ns", 1013907767));
  var _STAR_print_fn_STAR_21099 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3541__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", 740963180)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cljs.core.println.call(null, "\nTesting", ns, cljs.core.truth_(async) ? "(async)" : "");
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_21099;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 3401491808), function(p__21100) {
  var map__21101 = p__21100;
  var map__21101__$1 = cljs.core.seq_QMARK_.call(null, map__21101) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21101) : map__21101;
  var m = map__21101__$1;
  var test_env = cljs.core.get.call(null, map__21101__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", 3128464258), function(p__21102) {
  var map__21103 = p__21102;
  var map__21103__$1 = cljs.core.seq_QMARK_.call(null, map__21103) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21103) : map__21103;
  var m = map__21103__$1;
  var test_env = cljs.core.get.call(null, map__21103__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-var", "end-test-var", 2014682E3), function(p__21104) {
  var map__21105 = p__21104;
  var map__21105__$1 = cljs.core.seq_QMARK_.call(null, map__21105) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21105) : map__21105;
  var m = map__21105__$1;
  var test_env = cljs.core.get.call(null, map__21105__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
  return null;
});
cemerick.cljs.test.register_fixtures_BANG_ = function() {
  var register_fixtures_BANG___delegate = function(ns_sym, fixture_type, fixture_fns) {
    return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_fixtures, cljs.core.update_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_sym, fixture_type], null), cljs.core.constantly.call(null, fixture_fns));
  };
  var register_fixtures_BANG_ = function(ns_sym, fixture_type, var_args) {
    var fixture_fns = null;
    if (arguments.length > 2) {
      fixture_fns = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return register_fixtures_BANG___delegate.call(this, ns_sym, fixture_type, fixture_fns);
  };
  register_fixtures_BANG_.cljs$lang$maxFixedArity = 2;
  register_fixtures_BANG_.cljs$lang$applyTo = function(arglist__21106) {
    var ns_sym = cljs.core.first(arglist__21106);
    arglist__21106 = cljs.core.next(arglist__21106);
    var fixture_type = cljs.core.first(arglist__21106);
    var fixture_fns = cljs.core.rest(arglist__21106);
    return register_fixtures_BANG___delegate(ns_sym, fixture_type, fixture_fns);
  };
  register_fixtures_BANG_.cljs$core$IFn$_invoke$arity$variadic = register_fixtures_BANG___delegate;
  return register_fixtures_BANG_;
}();
cemerick.cljs.test.default_fixture = function default_fixture(f) {
  return f.call(null);
};
cemerick.cljs.test.compose_fixtures = function compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cemerick.cljs.test.join_fixtures = function join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cemerick.cljs.test.compose_fixtures, cemerick.cljs.test.default_fixture, fixtures);
};
cemerick.cljs.test.async_test_QMARK_ = function async_test_QMARK_(test_fn) {
  return cljs.core.boolean$.call(null, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, test_fn)));
};
cemerick.cljs.test.test_async_fn = function test_async_fn(async_test_env, test_name, test_fn) {
  cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", 3128464258), new cljs.core.Keyword(null, "var", "var", 1014020761), test_fn, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), async_test_env, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), test_name], null));
  cemerick.cljs.test.inc_report_counter.call(null, async_test_env, new cljs.core.Keyword(null, "test", "test", 1017460740));
  return test_fn.call(null, new cemerick.cljs.test.TestContext(async_test_env, test_name));
};
cemerick.cljs.test.start_next_async_test = function start_next_async_test(async_test_env) {
  var next_test = cljs.core.atom.call(null, function() {
    return null;
  });
  cljs.core.swap_BANG_.call(null, async_test_env, function(next_test) {
    return function(env) {
      var temp__4090__auto__ = function() {
        var and__3529__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "stop", "stop", 1017445236)).cljs$core$IFn$_invoke$arity$1(env));
        if (and__3529__auto__) {
          return cljs.core.first.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", 3842781245)).cljs$core$IFn$_invoke$arity$1(env));
        } else {
          return and__3529__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4090__auto__)) {
        var vec__21108 = temp__4090__auto__;
        var name = cljs.core.nth.call(null, vec__21108, 0, null);
        var testfn = cljs.core.nth.call(null, vec__21108, 1, null);
        cljs.core.reset_BANG_.call(null, next_test, testfn);
        var ns_21109 = cljs.core.namespace.call(null, name);
        if (cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "namespaces", "namespaces", 1177962986)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, async_test_env)), ns_21109)) {
        } else {
          cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", 1359210286), new cljs.core.Keyword(null, "ns", "ns", 1013907767), ns_21109, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), async_test_env, new cljs.core.Keyword(null, "async", "async", 1107031534), true], null));
          cljs.core.alter_meta_BANG_.call(null, async_test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "namespaces", "namespaces", 1177962986)], null), cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentHashSet.EMPTY), ns_21109);
        }
        return cljs.core.update_in.call(null, cljs.core.update_in.call(null, env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", 3842781245)], null), cljs.core.dissoc, name), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", 1286908024)], null), cljs.core.assoc, 
        name, new Date);
      } else {
        return env;
      }
    };
  }(next_test));
  setTimeout(function(next_test) {
    return function() {
      return cljs.core.deref.call(null, next_test).call(null);
    };
  }(next_test), 1);
  return async_test_env;
};
cemerick.cljs.test.squelch_internals = function squelch_internals(test_env) {
  var G__21114 = test_env;
  cljs.core.swap_BANG_.call(null, G__21114, function(G__21114) {
    return function(p1__21110_SHARP_) {
      return cljs.core.reduce.call(null, function(G__21114) {
        return function(env, p__21115) {
          var vec__21116 = p__21115;
          var k = cljs.core.nth.call(null, vec__21116, 0, null);
          var v = cljs.core.nth.call(null, vec__21116, 1, null);
          if (cljs.core._EQ_.call(null, cljs.core.namespace.call(null, k), cljs.core.namespace.call(null, new cljs.core.Keyword("cemerick.cljs.test", "foo", "cemerick.cljs.test/foo", 4582478189)))) {
            return env;
          } else {
            return cljs.core.assoc.call(null, env, k, v);
          }
        };
      }(G__21114), cljs.core.PersistentArrayMap.EMPTY, p1__21110_SHARP_);
    };
  }(G__21114));
  return G__21114;
};
cemerick.cljs.test.finish_test_entry_point = function finish_test_entry_point(entry_point_QMARK_, test_env) {
  if (cljs.core.truth_(entry_point_QMARK_)) {
    if (cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", 3842781245)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))))) {
      cljs.core.swap_BANG_.call(null, test_env, cljs.core.dissoc, new cljs.core.Keyword(null, "async", "async", 1107031534));
    } else {
      cemerick.cljs.test.start_next_async_test.call(null, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)));
    }
    return cljs.core.deref.call(null, cemerick.cljs.test.squelch_internals.call(null, test_env));
  } else {
    return test_env;
  }
};
cemerick.cljs.test.schedule_async_test = function schedule_async_test(async_test_env, test_name, test_fn) {
  cljs.core.swap_BANG_.call(null, async_test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", 3842781245)], null), cljs.core.fnil.call(null, cljs.core.assoc, cljs.core.sorted_map.call(null)), test_name, cljs.core.with_meta.call(null, function() {
    return cemerick.cljs.test.test_async_fn.call(null, async_test_env, test_name, test_fn);
  }, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1017277949), test_name], null)));
  return async_test_env;
};
cemerick.cljs.test.done_STAR_ = function() {
  var done_STAR_ = null;
  var done_STAR___1 = function(p__21118) {
    var map__21122 = p__21118;
    var map__21122__$1 = cljs.core.seq_QMARK_.call(null, map__21122) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21122) : map__21122;
    var test_ctx = map__21122__$1;
    var test_name = cljs.core.get.call(null, map__21122__$1, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616));
    var async_test_env = cljs.core.get.call(null, map__21122__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", -1611433981, null), new cljs.core.Symbol(null, "TestContext", "TestContext", 586269270, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", 1506483237, null)))));
    }
    var first_call_QMARK_ = cljs.core.atom.call(null, false);
    cljs.core.swap_BANG_.call(null, async_test_env, function(first_call_QMARK_, map__21122, map__21122__$1, test_ctx, test_name, async_test_env) {
      return function(env) {
        cljs.core.reset_BANG_.call(null, first_call_QMARK_, cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", 1286908024)).cljs$core$IFn$_invoke$arity$1(env), test_name));
        return cljs.core.update_in.call(null, env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", 1286908024)], null), cljs.core.dissoc, test_name);
      };
    }(first_call_QMARK_, map__21122, map__21122__$1, test_ctx, test_name, async_test_env));
    if (cljs.core.truth_(cljs.core.deref.call(null, first_call_QMARK_))) {
      cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 2014682E3), new cljs.core.Keyword(null, "var", "var", 1014020761), test_name], null), test_ctx));
      if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, async_test_env))) {
        cemerick.cljs.test.squelch_internals.call(null, async_test_env);
      } else {
        cemerick.cljs.test.start_next_async_test.call(null, async_test_env);
      }
    } else {
      cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 4521901954), new cljs.core.Keyword(null, "message", "message", 1968829305), "`(done)` called multiple times to signal end-of-test"], null), test_ctx));
    }
    return async_test_env;
  };
  var done_STAR___2 = function(p__21117, error) {
    var map__21121 = p__21117;
    var map__21121__$1 = cljs.core.seq_QMARK_.call(null, map__21121) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21121) : map__21121;
    var test_ctx = map__21121__$1;
    var test_name = cljs.core.get.call(null, map__21121__$1, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616));
    var test_env = cljs.core.get.call(null, map__21121__$1, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", -1611433981, null), new cljs.core.Symbol(null, "TestContext", "TestContext", 586269270, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", 1506483237, null)))));
    }
    cemerick.cljs.test.do_report.call(null, cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "error", "error", 1110689146), new cljs.core.Keyword(null, "message", "message", 1968829305), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 3373152810), null, new cljs.core.Keyword(null, "actual", "actual", 3885931776), 
    error], null), test_ctx)));
    return done_STAR_.call(null, test_ctx);
  };
  done_STAR_ = function(p__21117, error) {
    switch(arguments.length) {
      case 1:
        return done_STAR___1.call(this, p__21117);
      case 2:
        return done_STAR___2.call(this, p__21117, error);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  done_STAR_.cljs$core$IFn$_invoke$arity$1 = done_STAR___1;
  done_STAR_.cljs$core$IFn$_invoke$arity$2 = done_STAR___2;
  return done_STAR_;
}();
cemerick.cljs.test.stop = function stop(async_test_env) {
  return cljs.core.swap_BANG_.call(null, async_test_env, cljs.core.assoc, new cljs.core.Keyword(null, "stop", "stop", 1017445236), true);
};
cemerick.cljs.test.test_function = function() {
  var test_function = null;
  var test_function__1 = function(v) {
    return test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), v);
  };
  var test_function__2 = function(test_env, v) {
    var entry_point_QMARK___16735__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_21126 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      if (cljs.core.fn_QMARK_.call(null, v)) {
      } else {
        throw new Error("Assert failed: test-var must be passed the function to be tested (not a symbol naming it)\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", -1640430032, null), new cljs.core.Symbol(null, "v", "v", -1640531409, null)))));
      }
      var map__21127_21129 = cljs.core.meta.call(null, v);
      var map__21127_21130__$1 = cljs.core.seq_QMARK_.call(null, map__21127_21129) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21127_21129) : map__21127_21129;
      var t_21131 = cljs.core.get.call(null, map__21127_21130__$1, new cljs.core.Keyword(null, "test", "test", 1017460740));
      var test_name_21132 = cljs.core.get.call(null, map__21127_21130__$1, new cljs.core.Keyword(null, "name", "name", 1017277949));
      var async_QMARK__21133 = cljs.core.get.call(null, map__21127_21130__$1, new cljs.core.Keyword(null, "async", "async", 1107031534));
      if (cljs.core.truth_(t_21131)) {
        if (cljs.core.truth_(async_QMARK__21133)) {
          cemerick.cljs.test.schedule_async_test.call(null, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)), test_name_21132, t_21131);
        } else {
          try {
            cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", 1471979159)], null), cljs.core.conj, function() {
              var or__3541__auto__ = test_name_21132;
              if (cljs.core.truth_(or__3541__auto__)) {
                return or__3541__auto__;
              } else {
                return v;
              }
            }());
            cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", 3128464258), new cljs.core.Keyword(null, "var", "var", 1014020761), v, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), test_env, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), test_name_21132], null));
            cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "test", "test", 1017460740));
            try {
              t_21131.call(null, new cemerick.cljs.test.TestContext(test_env, test_name_21132));
            } catch (e21128) {
              if (e21128 instanceof Error) {
                var e_21134 = e21128;
                cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "error", "error", 1110689146), new cljs.core.Keyword(null, "message", "message", 1968829305), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), test_env, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), test_name_21132, new cljs.core.Keyword(null, 
                "expected", "expected", 3373152810), null, new cljs.core.Keyword(null, "actual", "actual", 3885931776), e_21134], null));
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw e21128;
                } else {
                }
              }
            }
            cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 2014682E3), new cljs.core.Keyword(null, "var", "var", 1014020761), v, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), test_env, new cljs.core.Keyword(null, "test-name", "test-name", 4082390616), test_name_21132], null));
          } finally {
            cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", 1471979159)], null), cljs.core.pop);
          }
        }
      } else {
      }
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___16735__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_21126;
    }
  };
  test_function = function(test_env, v) {
    switch(arguments.length) {
      case 1:
        return test_function__1.call(this, test_env);
      case 2:
        return test_function__2.call(this, test_env, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_function.cljs$core$IFn$_invoke$arity$1 = test_function__1;
  test_function.cljs$core$IFn$_invoke$arity$2 = test_function__2;
  return test_function;
}();
cemerick.cljs.test.test_all_vars = function() {
  var test_all_vars = null;
  var test_all_vars__1 = function(ns_sym) {
    return test_all_vars.call(null, cemerick.cljs.test.init_test_environment.call(null), ns_sym);
  };
  var test_all_vars__2 = function(test_env, ns_sym) {
    var entry_point_QMARK___16735__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_21143 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      var tests_21148 = cljs.core.filter.call(null, function(_STAR_entry_point_STAR_21143, entry_point_QMARK___16735__auto__) {
        return function(p1__21135_SHARP_) {
          return(new cljs.core.Keyword(null, "test", "test", 1017460740)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__21135_SHARP_));
        };
      }(_STAR_entry_point_STAR_21143, entry_point_QMARK___16735__auto__), cljs.core.vals.call(null, cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests), ns_sym)));
      var once_fixture_fn_21149 = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "once", "once", 1017319923)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
      var each_fixture_fn_21150 = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "each", "each", 1017009523)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
      once_fixture_fn_21149.call(null, function(once_fixture_fn_21149, each_fixture_fn_21150, tests_21148, _STAR_entry_point_STAR_21143, entry_point_QMARK___16735__auto__) {
        return function() {
          var seq__21144 = cljs.core.seq.call(null, cljs.core.remove.call(null, cemerick.cljs.test.async_test_QMARK_, tests_21148));
          var chunk__21145 = null;
          var count__21146 = 0;
          var i__21147 = 0;
          while (true) {
            if (i__21147 < count__21146) {
              var v = cljs.core._nth.call(null, chunk__21145, i__21147);
              each_fixture_fn_21150.call(null, function(seq__21144, chunk__21145, count__21146, i__21147, v, once_fixture_fn_21149, each_fixture_fn_21150, tests_21148, _STAR_entry_point_STAR_21143, entry_point_QMARK___16735__auto__) {
                return function() {
                  return cemerick.cljs.test.test_function.call(null, test_env, v);
                };
              }(seq__21144, chunk__21145, count__21146, i__21147, v, once_fixture_fn_21149, each_fixture_fn_21150, tests_21148, _STAR_entry_point_STAR_21143, entry_point_QMARK___16735__auto__));
              var G__21151 = seq__21144;
              var G__21152 = chunk__21145;
              var G__21153 = count__21146;
              var G__21154 = i__21147 + 1;
              seq__21144 = G__21151;
              chunk__21145 = G__21152;
              count__21146 = G__21153;
              i__21147 = G__21154;
              continue;
            } else {
              var temp__4092__auto__ = cljs.core.seq.call(null, seq__21144);
              if (temp__4092__auto__) {
                var seq__21144__$1 = temp__4092__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__21144__$1)) {
                  var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__21144__$1);
                  var G__21155 = cljs.core.chunk_rest.call(null, seq__21144__$1);
                  var G__21156 = c__4297__auto__;
                  var G__21157 = cljs.core.count.call(null, c__4297__auto__);
                  var G__21158 = 0;
                  seq__21144 = G__21155;
                  chunk__21145 = G__21156;
                  count__21146 = G__21157;
                  i__21147 = G__21158;
                  continue;
                } else {
                  var v = cljs.core.first.call(null, seq__21144__$1);
                  each_fixture_fn_21150.call(null, function(seq__21144, chunk__21145, count__21146, i__21147, v, seq__21144__$1, temp__4092__auto__, once_fixture_fn_21149, each_fixture_fn_21150, tests_21148, _STAR_entry_point_STAR_21143, entry_point_QMARK___16735__auto__) {
                    return function() {
                      return cemerick.cljs.test.test_function.call(null, test_env, v);
                    };
                  }(seq__21144, chunk__21145, count__21146, i__21147, v, seq__21144__$1, temp__4092__auto__, once_fixture_fn_21149, each_fixture_fn_21150, tests_21148, _STAR_entry_point_STAR_21143, entry_point_QMARK___16735__auto__));
                  var G__21159 = cljs.core.next.call(null, seq__21144__$1);
                  var G__21160 = null;
                  var G__21161 = 0;
                  var G__21162 = 0;
                  seq__21144 = G__21159;
                  chunk__21145 = G__21160;
                  count__21146 = G__21161;
                  i__21147 = G__21162;
                  continue;
                }
              } else {
                return null;
              }
            }
            break;
          }
        };
      }(once_fixture_fn_21149, each_fixture_fn_21150, tests_21148, _STAR_entry_point_STAR_21143, entry_point_QMARK___16735__auto__));
      cljs.core.reduce.call(null, function(tests_21148, _STAR_entry_point_STAR_21143, entry_point_QMARK___16735__auto__) {
        return function(p1__21136_SHARP_, p2__21137_SHARP_) {
          return cljs.core.apply.call(null, cemerick.cljs.test.schedule_async_test, p1__21136_SHARP_, p2__21137_SHARP_);
        };
      }(tests_21148, _STAR_entry_point_STAR_21143, entry_point_QMARK___16735__auto__), (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)), cljs.core.map.call(null, cljs.core.comp.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Keyword(null, "test", "test", 1017460740)), cljs.core.meta), cljs.core.filter.call(null, cemerick.cljs.test.async_test_QMARK_, tests_21148)));
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___16735__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_21143;
    }
  };
  test_all_vars = function(test_env, ns_sym) {
    switch(arguments.length) {
      case 1:
        return test_all_vars__1.call(this, test_env);
      case 2:
        return test_all_vars__2.call(this, test_env, ns_sym);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_all_vars.cljs$core$IFn$_invoke$arity$1 = test_all_vars__1;
  test_all_vars.cljs$core$IFn$_invoke$arity$2 = test_all_vars__2;
  return test_all_vars;
}();
cemerick.cljs.test.test_ns = function() {
  var test_ns = null;
  var test_ns__1 = function(ns_sym) {
    return test_ns.call(null, cemerick.cljs.test.init_test_environment.call(null), ns_sym);
  };
  var test_ns__2 = function(test_env, ns_sym) {
    var entry_point_QMARK___16735__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_21164 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", 1359210286), new cljs.core.Keyword(null, "ns", "ns", 1013907767), ns_sym, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), test_env], null));
      var temp__4090__auto___21165 = cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_test_hooks), ns_sym);
      if (cljs.core.truth_(temp__4090__auto___21165)) {
        var test_hook_21166 = temp__4090__auto___21165;
        test_hook_21166.call(null, test_env);
      } else {
        cemerick.cljs.test.test_all_vars.call(null, test_env, ns_sym);
      }
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 3401491808), new cljs.core.Keyword(null, "ns", "ns", 1013907767), ns_sym, new cljs.core.Keyword(null, "test-env", "test-env", 4160920740), test_env], null));
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___16735__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_21164;
    }
  };
  test_ns = function(test_env, ns_sym) {
    switch(arguments.length) {
      case 1:
        return test_ns__1.call(this, test_env);
      case 2:
        return test_ns__2.call(this, test_env, ns_sym);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_ns.cljs$core$IFn$_invoke$arity$1 = test_ns__1;
  test_ns.cljs$core$IFn$_invoke$arity$2 = test_ns__2;
  return test_ns;
}();
cemerick.cljs.test.test_summary = function test_summary(test_env) {
  var test_env__$1 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  return cemerick.cljs.test.do_report.call(null, cljs.core.assoc.call(null, cljs.core.merge_with.call(null, cljs.core._PLUS_, test_env__$1, cemerick.cljs.test.maybe_deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(test_env__$1))), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "summary", "summary", 3451231E3)));
};
cemerick.cljs.test.run_tests_STAR_ = function() {
  var run_tests_STAR___delegate = function(namespaces) {
    var vec__21173 = cljs.core.first.call(null, namespaces) instanceof cljs.core.Atom ? namespaces : cljs.core.cons.call(null, cemerick.cljs.test.init_test_environment.call(null), namespaces);
    var test_env = cljs.core.nth.call(null, vec__21173, 0, null);
    var namespaces__$1 = cljs.core.nthnext.call(null, vec__21173, 1);
    var entry_point_QMARK___16735__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_21174 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      var seq__21175_21179 = cljs.core.seq.call(null, cljs.core.distinct.call(null, namespaces__$1));
      var chunk__21176_21180 = null;
      var count__21177_21181 = 0;
      var i__21178_21182 = 0;
      while (true) {
        if (i__21178_21182 < count__21177_21181) {
          var ns_21183 = cljs.core._nth.call(null, chunk__21176_21180, i__21178_21182);
          cemerick.cljs.test.test_ns.call(null, test_env, ns_21183);
          var G__21184 = seq__21175_21179;
          var G__21185 = chunk__21176_21180;
          var G__21186 = count__21177_21181;
          var G__21187 = i__21178_21182 + 1;
          seq__21175_21179 = G__21184;
          chunk__21176_21180 = G__21185;
          count__21177_21181 = G__21186;
          i__21178_21182 = G__21187;
          continue;
        } else {
          var temp__4092__auto___21188 = cljs.core.seq.call(null, seq__21175_21179);
          if (temp__4092__auto___21188) {
            var seq__21175_21189__$1 = temp__4092__auto___21188;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__21175_21189__$1)) {
              var c__4297__auto___21190 = cljs.core.chunk_first.call(null, seq__21175_21189__$1);
              var G__21191 = cljs.core.chunk_rest.call(null, seq__21175_21189__$1);
              var G__21192 = c__4297__auto___21190;
              var G__21193 = cljs.core.count.call(null, c__4297__auto___21190);
              var G__21194 = 0;
              seq__21175_21179 = G__21191;
              chunk__21176_21180 = G__21192;
              count__21177_21181 = G__21193;
              i__21178_21182 = G__21194;
              continue;
            } else {
              var ns_21195 = cljs.core.first.call(null, seq__21175_21189__$1);
              cemerick.cljs.test.test_ns.call(null, test_env, ns_21195);
              var G__21196 = cljs.core.next.call(null, seq__21175_21189__$1);
              var G__21197 = null;
              var G__21198 = 0;
              var G__21199 = 0;
              seq__21175_21179 = G__21196;
              chunk__21176_21180 = G__21197;
              count__21177_21181 = G__21198;
              i__21178_21182 = G__21199;
              continue;
            }
          } else {
          }
        }
        break;
      }
      cemerick.cljs.test.on_testing_complete.call(null, test_env, cemerick.cljs.test.test_summary);
      cemerick.cljs.test.test_summary.call(null, test_env);
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___16735__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_21174;
    }
  };
  var run_tests_STAR_ = function(var_args) {
    var namespaces = null;
    if (arguments.length > 0) {
      namespaces = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return run_tests_STAR___delegate.call(this, namespaces);
  };
  run_tests_STAR_.cljs$lang$maxFixedArity = 0;
  run_tests_STAR_.cljs$lang$applyTo = function(arglist__21200) {
    var namespaces = cljs.core.seq(arglist__21200);
    return run_tests_STAR___delegate(namespaces);
  };
  run_tests_STAR_.cljs$core$IFn$_invoke$arity$variadic = run_tests_STAR___delegate;
  return run_tests_STAR_;
}();
goog.exportSymbol("cemerick.cljs.test.run_tests_STAR_", cemerick.cljs.test.run_tests_STAR_);
cemerick.cljs.test.run_all_tests = function() {
  var run_all_tests = null;
  var run_all_tests__0 = function() {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests)));
  };
  var run_all_tests__1 = function(re) {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.filter.call(null, function(p1__21201_SHARP_) {
      return cljs.core.re_matches.call(null, re, cljs.core.name.call(null, p1__21201_SHARP_));
    }, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests))));
  };
  run_all_tests = function(re) {
    switch(arguments.length) {
      case 0:
        return run_all_tests__0.call(this);
      case 1:
        return run_all_tests__1.call(this, re);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  run_all_tests.cljs$core$IFn$_invoke$arity$0 = run_all_tests__0;
  run_all_tests.cljs$core$IFn$_invoke$arity$1 = run_all_tests__1;
  return run_all_tests;
}();
goog.exportSymbol("cemerick.cljs.test.run_all_tests", cemerick.cljs.test.run_all_tests);
cemerick.cljs.test.successful_QMARK_ = function successful_QMARK_(test_env) {
  var map__21203 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  var map__21203__$1 = cljs.core.seq_QMARK_.call(null, map__21203) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21203) : map__21203;
  var async = cljs.core.get.call(null, map__21203__$1, new cljs.core.Keyword(null, "async", "async", 1107031534));
  var error = cljs.core.get.call(null, map__21203__$1, new cljs.core.Keyword(null, "error", "error", 1110689146));
  var fail = cljs.core.get.call(null, map__21203__$1, new cljs.core.Keyword(null, "fail", "fail", 1017039504));
  var and__3529__auto__ = cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env);
  if (cljs.core.truth_(and__3529__auto__)) {
    var and__3529__auto____$1 = function() {
      var or__3541__auto__ = fail;
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return 0;
      }
    }() === 0;
    if (and__3529__auto____$1) {
      var and__3529__auto____$2 = function() {
        var or__3541__auto__ = error;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return 0;
        }
      }() === 0;
      if (and__3529__auto____$2) {
        var or__3541__auto__ = async == null;
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          return successful_QMARK_.call(null, async);
        }
      } else {
        return and__3529__auto____$2;
      }
    } else {
      return and__3529__auto____$1;
    }
  } else {
    return and__3529__auto__;
  }
};
goog.exportSymbol("cemerick.cljs.test.successful_QMARK_", cemerick.cljs.test.successful_QMARK_);
cemerick.cljs.test.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
goog.exportSymbol("cemerick.cljs.test.set_print_fn_BANG_", cemerick.cljs.test.set_print_fn_BANG_);
goog.provide("score_four.board_test");
goog.require("cljs.core");
goog.require("cemerick.cljs.test");
goog.require("cemerick.cljs.test");
score_four.board_test.board_test = function board_test() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), score_four.board_test.board_test);
};
score_four.board_test.board_test = cljs.core.with_meta.call(null, score_four.board_test.board_test, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 1017226086), 6, new cljs.core.Keyword(null, "column", "column", 3954034376), 10, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432), 6, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882), 20], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"test", "test", 1017460740), function board_test_test(test_ctx__16698__auto__) {
  var _test_ctx = test_ctx__16698__auto__;
  var async_QMARK___16613__auto__ = (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", 4082390616)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_21223 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  try {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___16613__auto__) ? null : _test_ctx;
    try {
      var _test_ctx__$1 = _test_ctx;
      var async_QMARK___16613__auto____$1 = (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", 4082390616)).cljs$core$IFn$_invoke$arity$1(_test_ctx__$1)));
      var _STAR_test_ctx_STAR_21225 = cemerick.cljs.test._STAR_test_ctx_STAR_;
      try {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___16613__auto____$1) ? null : _test_ctx__$1;
        try {
          try {
            var values__16633__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), 2);
            var result__16634__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__16633__auto__);
            if (result__16634__auto__ instanceof cemerick.cljs.test.TestContext) {
              throw new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
            } else {
            }
            if (cljs.core.truth_(result__16634__auto__)) {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), cljs.core.cons.call(null, cljs.core._EQ_, values__16633__auto__), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "pass", "pass", 1017337731), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1640531466, null), 2, 2)], null));
            } else {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), values__16633__auto__)), new cljs.core.Symbol(null, "not", "not", -1640422260, null)), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, 
              "fail", "fail", 1017039504), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 2, 2)], null));
            }
            return result__16634__auto__;
          } catch (e21227) {
            if (e21227 instanceof Error) {
              var t__16670__auto__ = e21227;
              return cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), t__16670__auto__, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "error", "error", 1110689146), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", 
              -1640531466, null), 2, 2)], null));
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e21227;
              } else {
                return null;
              }
            }
          }
        } catch (e21226) {
          if (e21226 instanceof Error) {
            var e__16614__auto__ = e21226;
            if (cljs.core.truth_(async_QMARK___16613__auto____$1)) {
              return cemerick.cljs.test.done_STAR_.call(null, _test_ctx__$1, e__16614__auto__);
            } else {
              throw e__16614__auto__;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw e21226;
            } else {
              return null;
            }
          }
        }
      } finally {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_21225;
      }
    } catch (e21224) {
      if (e21224 instanceof Error) {
        var e__16614__auto__ = e21224;
        if (cljs.core.truth_(async_QMARK___16613__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__16614__auto__);
        } else {
          throw e__16614__auto__;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e21224;
        } else {
          return null;
        }
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_21223;
  }
}, new cljs.core.Keyword(null, "name", "name", 1017277949), cljs.core.with_meta.call(null, new cljs.core.Symbol("score_four.board-test", "board-test", "score_four.board-test/board-test", -26854869, null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 1017226086), 6, new cljs.core.Keyword(null, "column", "column", 3954034376), 10, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432), 6, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882), 
20], null))], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "score_four.board-test", "score_four.board-test", 1797521133, null), new cljs.core.Symbol("score_four.board-test", "board-test", "score_four.board-test/board-test", -26854869, null), score_four.board_test.board_test);
score_four.board_test.another = function another() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), score_four.board_test.another);
};
score_four.board_test.another = cljs.core.with_meta.call(null, score_four.board_test.another, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 1017226086), 9, new cljs.core.Keyword(null, "column", "column", 3954034376), 10, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432), 9, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882), 17], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"test", "test", 1017460740), function another_test(test_ctx__16698__auto__) {
  var _test_ctx = test_ctx__16698__auto__;
  var async_QMARK___16613__auto__ = (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", 4082390616)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_21233 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  try {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___16613__auto__) ? null : _test_ctx;
    try {
      var _test_ctx__$1 = _test_ctx;
      var async_QMARK___16613__auto____$1 = (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", 4082390616)).cljs$core$IFn$_invoke$arity$1(_test_ctx__$1)));
      var _STAR_test_ctx_STAR_21235 = cemerick.cljs.test._STAR_test_ctx_STAR_;
      try {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___16613__auto____$1) ? null : _test_ctx__$1;
        try {
          try {
            var values__16633__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), 1);
            var result__16634__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__16633__auto__);
            if (result__16634__auto__ instanceof cemerick.cljs.test.TestContext) {
              throw new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
            } else {
            }
            if (cljs.core.truth_(result__16634__auto__)) {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), cljs.core.cons.call(null, cljs.core._EQ_, values__16633__auto__), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "pass", "pass", 1017337731), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1640531466, null), 1, 2)], null));
            } else {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), values__16633__auto__)), new cljs.core.Symbol(null, "not", "not", -1640422260, null)), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, 
              "fail", "fail", 1017039504), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 1, 2)], null));
            }
            return result__16634__auto__;
          } catch (e21237) {
            if (e21237 instanceof Error) {
              var t__16670__auto__ = e21237;
              return cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), t__16670__auto__, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "error", "error", 1110689146), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", 
              -1640531466, null), 1, 2)], null));
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e21237;
              } else {
                return null;
              }
            }
          }
        } catch (e21236) {
          if (e21236 instanceof Error) {
            var e__16614__auto__ = e21236;
            if (cljs.core.truth_(async_QMARK___16613__auto____$1)) {
              return cemerick.cljs.test.done_STAR_.call(null, _test_ctx__$1, e__16614__auto__);
            } else {
              throw e__16614__auto__;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw e21236;
            } else {
              return null;
            }
          }
        }
      } finally {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_21235;
      }
    } catch (e21234) {
      if (e21234 instanceof Error) {
        var e__16614__auto__ = e21234;
        if (cljs.core.truth_(async_QMARK___16613__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__16614__auto__);
        } else {
          throw e__16614__auto__;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e21234;
        } else {
          return null;
        }
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_21233;
  }
}, new cljs.core.Keyword(null, "name", "name", 1017277949), cljs.core.with_meta.call(null, new cljs.core.Symbol("score_four.board-test", "another", "score_four.board-test/another", 1429957181, null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 1017226086), 9, new cljs.core.Keyword(null, "column", "column", 3954034376), 10, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432), 9, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882), 
17], null))], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "score_four.board-test", "score_four.board-test", 1797521133, null), new cljs.core.Symbol("score_four.board-test", "another", "score_four.board-test/another", 1429957181, null), score_four.board_test.another);
score_four.board_test.seriously_QMARK_ = function seriously_QMARK_() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), score_four.board_test.seriously_QMARK_);
};
score_four.board_test.seriously_QMARK_ = cljs.core.with_meta.call(null, score_four.board_test.seriously_QMARK_, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 1017226086), 12, new cljs.core.Keyword(null, "column", "column", 3954034376), 10, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432), 12, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882), 20], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"test", "test", 1017460740), function seriously_QMARK__test(test_ctx__16698__auto__) {
  var _test_ctx = test_ctx__16698__auto__;
  var async_QMARK___16613__auto__ = (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", 4082390616)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_21243 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  try {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___16613__auto__) ? null : _test_ctx;
    try {
      var _test_ctx__$1 = _test_ctx;
      var async_QMARK___16613__auto____$1 = (new cljs.core.Keyword(null, "async", "async", 1107031534)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", 4082390616)).cljs$core$IFn$_invoke$arity$1(_test_ctx__$1)));
      var _STAR_test_ctx_STAR_21245 = cemerick.cljs.test._STAR_test_ctx_STAR_;
      try {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___16613__auto____$1) ? null : _test_ctx__$1;
        try {
          try {
            var values__16633__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "WAT"), 12);
            var result__16634__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__16633__auto__);
            if (result__16634__auto__ instanceof cemerick.cljs.test.TestContext) {
              throw new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
            } else {
            }
            if (cljs.core.truth_(result__16634__auto__)) {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), cljs.core.cons.call(null, cljs.core._EQ_, values__16633__auto__), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "pass", "pass", 1017337731), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1640531466, null), 12, "WAT")], null));
            } else {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), values__16633__auto__)), new cljs.core.Symbol(null, "not", "not", -1640422260, null)), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, 
              "fail", "fail", 1017039504), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 12, "WAT")], null));
            }
            return result__16634__auto__;
          } catch (e21247) {
            if (e21247 instanceof Error) {
              var t__16670__auto__ = e21247;
              return cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), t__16670__auto__, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "error", "error", 1110689146), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", 
              -1640531466, null), 12, "WAT")], null));
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e21247;
              } else {
                return null;
              }
            }
          }
        } catch (e21246) {
          if (e21246 instanceof Error) {
            var e__16614__auto__ = e21246;
            if (cljs.core.truth_(async_QMARK___16613__auto____$1)) {
              return cemerick.cljs.test.done_STAR_.call(null, _test_ctx__$1, e__16614__auto__);
            } else {
              throw e__16614__auto__;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw e21246;
            } else {
              return null;
            }
          }
        }
      } finally {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_21245;
      }
    } catch (e21244) {
      if (e21244 instanceof Error) {
        var e__16614__auto__ = e21244;
        if (cljs.core.truth_(async_QMARK___16613__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__16614__auto__);
        } else {
          throw e__16614__auto__;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e21244;
        } else {
          return null;
        }
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_21243;
  }
}, new cljs.core.Keyword(null, "name", "name", 1017277949), cljs.core.with_meta.call(null, new cljs.core.Symbol("score_four.board-test", "seriously?", "score_four.board-test/seriously?", 230352384, null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 1017226086), 12, new cljs.core.Keyword(null, "column", "column", 3954034376), 10, new cljs.core.Keyword(null, "end-line", "end-line", 2693041432), 12, new cljs.core.Keyword(null, "end-column", "end-column", 3799845882), 
20], null))], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "score_four.board-test", "score_four.board-test", 1797521133, null), new cljs.core.Symbol("score_four.board-test", "seriously?", "score_four.board-test/seriously?", 230352384, null), score_four.board_test.seriously_QMARK_);
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj20964 = {};
  return obj20964;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3529__auto__ = port;
    if (and__3529__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4168__auto__ = port == null ? null : port;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj20966 = {};
  return obj20966;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3529__auto__ = port;
    if (and__3529__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4168__auto__ = port == null ? null : port;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj20968 = {};
  return obj20968;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3529__auto__ = chan;
    if (and__3529__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4168__auto__ = chan == null ? null : chan;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3529__auto__ = chan;
    if (and__3529__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4168__auto__ = chan == null ? null : chan;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj20970 = {};
  return obj20970;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3529__auto__ = h;
    if (and__3529__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4168__auto__ = h == null ? null : h;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3529__auto__ = h;
    if (and__3529__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4168__auto__ = h == null ? null : h;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj20972 = {};
  return obj20972;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3529__auto__ = b;
    if (and__3529__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4168__auto__ = b == null ? null : b;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3529__auto__ = b;
    if (and__3529__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4168__auto__ = b == null ? null : b;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3529__auto__ = b;
    if (and__3529__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4168__auto__ = b == null ? null : b;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj20974 = {};
  return obj20974;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__20991 = cnt + 1;
      cnt = G__20991;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4397__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4397__auto__) {
      var v_20992 = this$.pop();
      if (keep_QMARK_.call(null, v_20992)) {
        this$.unshift(v_20992);
      } else {
      }
      var G__20993 = x + 1;
      x = G__20993;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: Can't create a ring buffer of size 0\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0))));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error("Assert failed: Can't add to a full buffer\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null))))));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_20975 = 0;
  while (true) {
    var m_20976 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_20976 == null) {
    } else {
      m_20976.call(null);
      if (count_20975 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__20977 = count_20975 + 1;
        count_20975 = G__20977;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3529__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3529__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3529__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t20997 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t20997 = function(f, fn_handler, meta20998) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta20998 = meta20998;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t20997.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t20997.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t20997";
    cljs.core.async.impl.ioc_helpers.t20997.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.ioc-helpers/t20997");
    };
    cljs.core.async.impl.ioc_helpers.t20997.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t20997.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t20997.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t20997.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20999) {
      var self__ = this;
      var _20999__$1 = this;
      return self__.meta20998;
    };
    cljs.core.async.impl.ioc_helpers.t20997.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20999, meta20998__$1) {
      var self__ = this;
      var _20999__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t20997(self__.f, self__.fn_handler, meta20998__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t20997 = function __GT_t20997(f__$1, fn_handler__$1, meta20998) {
      return new cljs.core.async.impl.ioc_helpers.t20997(f__$1, fn_handler__$1, meta20998);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t20997(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e21001) {
    if (e21001 instanceof Object) {
      var ex = e21001;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e21001;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_21004_21006 = state;
    statearr_21004_21006[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_21004_21006[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_21005_21007 = state;
    statearr_21005_21007[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_21005_21007[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_21010_21012 = state;
    statearr_21010_21012[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_21010_21012[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_21011_21013 = state;
    statearr_21011_21013[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_21011_21013[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__21014) {
    var map__21019 = p__21014;
    var map__21019__$1 = cljs.core.seq_QMARK_.call(null, map__21019) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21019) : map__21019;
    var opts = map__21019__$1;
    var statearr_21020_21023 = state;
    statearr_21020_21023[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(map__21019, map__21019__$1, opts) {
      return function(val) {
        var statearr_21021_21024 = state;
        statearr_21021_21024[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__21019, map__21019__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_21022_21025 = state;
      statearr_21022_21025[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__21014 = null;
    if (arguments.length > 3) {
      p__21014 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__21014);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__21026) {
    var state = cljs.core.first(arglist__21026);
    arglist__21026 = cljs.core.next(arglist__21026);
    var cont_block = cljs.core.first(arglist__21026);
    arglist__21026 = cljs.core.next(arglist__21026);
    var ports = cljs.core.first(arglist__21026);
    var p__21014 = cljs.core.rest(arglist__21026);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__21014);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4122__auto__) {
  var self__ = this;
  var this__4122__auto____$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_imap.call(null, this__4122__auto____$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4127__auto__, k__4128__auto__) {
  var self__ = this;
  var this__4127__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4127__auto____$1, k__4128__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4129__auto__, k21028, else__4130__auto__) {
  var self__ = this;
  var this__4129__auto____$1 = this;
  var G__21030 = k21028 instanceof cljs.core.Keyword ? k21028.fqn : null;
  var caseval__21034;
  switch(G__21030) {
    case "prev":
      caseval__21034 = self__.prev;
      break;
    case "continue-block":
      caseval__21034 = self__.continue_block;
      break;
    case "finally-block":
      caseval__21034 = self__.finally_block;
      break;
    case "catch-exception":
      caseval__21034 = self__.catch_exception;
      break;
    case "catch-block":
      caseval__21034 = self__.catch_block;
      break;
    default:
      caseval__21034 = cljs.core.get.call(null, self__.__extmap, k21028, else__4130__auto__);
  }
  return caseval__21034;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4134__auto__, k__4135__auto__, G__21027) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var pred__21031 = cljs.core.keyword_identical_QMARK_;
  var expr__21032 = k__4135__auto__;
  if (cljs.core.truth_(pred__21031.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__21032))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__21027, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__21031.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__21032))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__21027, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__21031.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__21032))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__21027, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__21031.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__21032))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__21027, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__21031.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__21032))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__21027, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4135__auto__, G__21027), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4141__auto__, writer__4142__auto__, opts__4143__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var pr_pair__4144__auto__ = function(this__4141__auto____$1) {
    return function(keyval__4145__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4142__auto__, cljs.core.pr_writer, "", " ", "", opts__4143__auto__, keyval__4145__auto__);
    };
  }(this__4141__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4142__auto__, pr_pair__4144__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4143__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4132__auto__, entry__4133__auto__) {
  var self__ = this;
  var this__4132__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4133__auto__)) {
    return cljs.core._assoc.call(null, this__4132__auto____$1, cljs.core._nth.call(null, entry__4133__auto__, 0), cljs.core._nth.call(null, entry__4133__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4132__auto____$1, entry__4133__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4131__auto__) {
  var self__ = this;
  var this__4131__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4123__auto__, other__4124__auto__) {
  var self__ = this;
  var this__4123__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3529__auto__ = other__4124__auto__;
    if (cljs.core.truth_(and__3529__auto__)) {
      return this__4123__auto____$1.constructor === other__4124__auto__.constructor && cljs.core.equiv_map.call(null, this__4123__auto____$1, other__4124__auto__);
    } else {
      return and__3529__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4126__auto__, G__21027) {
  var self__ = this;
  var this__4126__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__21027, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4121__auto__) {
  var self__ = this;
  var this__4121__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4125__auto__) {
  var self__ = this;
  var this__4125__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4136__auto__, k__4137__auto__) {
  var self__ = this;
  var this__4136__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), 
  null], null), null), k__4137__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4136__auto____$1), self__.__meta), k__4137__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4137__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4161__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__21029) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(G__21029), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(G__21029), (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(G__21029), (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(G__21029), 
  (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(G__21029), null, cljs.core.dissoc.call(null, G__21029, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), new cljs.core.Keyword(null, "prev", "prev", 1017353637)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_21036 = state;
  statearr_21036[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_21036;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3529__auto__ = exception;
      if (cljs.core.truth_(and__3529__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3529__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3529__auto__ = exception;
        if (cljs.core.truth_(and__3529__auto__)) {
          var and__3529__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3529__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3529__auto____$1;
          }
        } else {
          return and__3529__auto__;
        }
      }())) {
        var statearr_21042 = state;
        statearr_21042[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_21042[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_21042[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_21042[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null);
        return statearr_21042;
      } else {
        if (cljs.core.truth_(function() {
          var and__3529__auto__ = exception;
          if (cljs.core.truth_(and__3529__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3529__auto__;
          }
        }())) {
          var statearr_21043_21047 = state;
          statearr_21043_21047[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__21048 = state;
          state = G__21048;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3529__auto__ = exception;
            if (cljs.core.truth_(and__3529__auto__)) {
              var and__3529__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3529__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3529__auto____$1;
              }
            } else {
              return and__3529__auto__;
            }
          }())) {
            var statearr_21044 = state;
            statearr_21044[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_21044[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
            return statearr_21044;
          } else {
            if (cljs.core.truth_(function() {
              var and__3529__auto__ = cljs.core.not.call(null, exception);
              if (and__3529__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3529__auto__;
              }
            }())) {
              var statearr_21045 = state;
              statearr_21045[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_21045[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
              return statearr_21045;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_21046 = state;
                statearr_21046[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_21046[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_21046;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  if (false) {
                    return null;
                  } else {
                    throw new Error("Assert failed: No matching clause\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, false)));
                  }
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t20981 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t20981 = function(val, box, meta20982) {
      this.val = val;
      this.box = box;
      this.meta20982 = meta20982;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t20981.cljs$lang$type = true;
    cljs.core.async.impl.channels.t20981.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t20981";
    cljs.core.async.impl.channels.t20981.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.channels/t20981");
    };
    cljs.core.async.impl.channels.t20981.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t20981.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20983) {
      var self__ = this;
      var _20983__$1 = this;
      return self__.meta20982;
    };
    cljs.core.async.impl.channels.t20981.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20983, meta20982__$1) {
      var self__ = this;
      var _20983__$1 = this;
      return new cljs.core.async.impl.channels.t20981(self__.val, self__.box, meta20982__$1);
    };
    cljs.core.async.impl.channels.__GT_t20981 = function __GT_t20981(val__$1, box__$1, meta20982) {
      return new cljs.core.async.impl.channels.t20981(val__$1, box__$1, meta20982);
    };
  }
  return new cljs.core.async.impl.channels.t20981(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4111__auto__, writer__4112__auto__, opts__4113__auto__) {
  return cljs.core._write.call(null, writer__4112__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_20984 = self__.takes.pop();
      if (taker_20984 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_20984)) {
          var take_cb_20985 = cljs.core.async.impl.protocols.commit.call(null, taker_20984);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_20985, taker_20984, this$__$1) {
            return function() {
              return take_cb_20985.call(null, null);
            };
          }(take_cb_20985, taker_20984, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        var putter_20986 = self__.puts.pop();
        if (!(putter_20986 == null)) {
          var put_handler_20987 = putter_20986.handler;
          var val_20988 = putter_20986.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_20987)) {
            var put_cb_20989 = cljs.core.async.impl.protocols.commit.call(null, put_handler_20987);
            var __20990__$1 = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, function(put_cb_20989, __20990__$1, put_handler_20987, val_20988, putter_20986, _, retval, this$__$1) {
              return function() {
                return put_cb_20989.call(null, true);
              };
            }(put_cb_20989, __20990__$1, put_handler_20987, val_20988, putter_20986, _, retval, this$__$1));
            cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val_20988);
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      return retval;
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, function(put_cb, _, put_handler, val, putter, this$__$1) {
              return function() {
                return put_cb.call(null, true);
              };
            }(put_cb, _, put_handler, val, putter, this$__$1));
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending takes are allowed on a single channel.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null)))));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error("Assert failed: Can't put nil in on a channel\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null))))));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker, closed__$1, this$__$1) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker, closed__$1, this$__$1));
          return cljs.core.async.impl.channels.box.call(null, true);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, true);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending puts are allowed on a single channel. Consider using a windowed buffer.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null)))));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false);
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__20939 = level + 1;
        level = G__20939;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_20940 = 0;
    while (true) {
      if (i_20940 < arr.length) {
        arr[i_20940] = null;
        var G__20941 = i_20940 + 1;
        i_20940 = G__20941;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__20942 = x_SINGLEQUOTE_;
                x__$1 = G__20942;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__20943 = x__$1;
        var G__20944 = k;
        var G__20945 = level - 1;
        var G__20946 = update;
        x = G__20943;
        k = G__20944;
        level = G__20945;
        update = G__20946;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_20947 = self__.level + 1;
      while (true) {
        if (i_20947 <= new_level + 1) {
          update[i_20947] = self__.header;
          var G__20948 = i_20947 + 1;
          i_20947 = G__20948;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_20949 = 0;
    while (true) {
      if (i_20949 <= self__.level) {
        var links_20950 = update[i_20949].forward;
        if (links_20950[i_20949] === x__$1) {
          links_20950[i_20949] = x__$1.forward[i_20949];
          var G__20951 = i_20949 + 1;
          i_20949 = G__20951;
          continue;
        } else {
          var G__20952 = i_20949 + 1;
          i_20949 = G__20952;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__20953 = x_SINGLEQUOTE_;
              x__$1 = G__20953;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__20954 = nx;
        var G__20955 = level__$1 - 1;
        x = G__20954;
        level__$1 = G__20955;
        continue;
      } else {
        var G__20956 = x;
        var G__20957 = level__$1 - 1;
        x = G__20956;
        level__$1 = G__20957;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__20958 = x_SINGLEQUOTE_;
              x__$1 = G__20958;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__20959 = nx;
        var G__20960 = level__$1 - 1;
        x = G__20959;
        level__$1 = G__20960;
        continue;
      } else {
        var G__20961 = x;
        var G__20962 = level__$1 - 1;
        x = G__20961;
        level__$1 = G__20962;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3541__auto__ = cljs.core.truth_(function() {
    var and__3529__auto__ = me;
    if (cljs.core.truth_(and__3529__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3529__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3541__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3541__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t18290 !== "undefined") {
  } else {
    cljs.core.async.t18290 = function(f, fn_handler, meta18291) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta18291 = meta18291;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t18290.cljs$lang$type = true;
    cljs.core.async.t18290.cljs$lang$ctorStr = "cljs.core.async/t18290";
    cljs.core.async.t18290.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t18290");
    };
    cljs.core.async.t18290.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t18290.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t18290.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t18290.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18292) {
      var self__ = this;
      var _18292__$1 = this;
      return self__.meta18291;
    };
    cljs.core.async.t18290.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18292, meta18291__$1) {
      var self__ = this;
      var _18292__$1 = this;
      return new cljs.core.async.t18290(self__.f, self__.fn_handler, meta18291__$1);
    };
    cljs.core.async.__GT_t18290 = function __GT_t18290(f__$1, fn_handler__$1, meta18291) {
      return new cljs.core.async.t18290(f__$1, fn_handler__$1, meta18291);
    };
  }
  return new cljs.core.async.t18290(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__18294 = buff;
  if (G__18294) {
    var bit__4191__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3541__auto__ = bit__4191__auto__;
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return G__18294.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__18294.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__18294);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__18294);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if (null) {
    return null;
  } else {
    throw new Error("Assert failed: \x3c! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_18295 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_18295);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_18295, ret) {
          return function() {
            return fn1.call(null, val_18295);
          };
        }(val_18295, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if (null) {
    return null;
  } else {
    throw new Error("Assert failed: \x3e! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var ret = temp__4090__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4090__auto__)) {
      var retb = temp__4090__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4090__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4090__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4397__auto___18296 = n;
  var x_18297 = 0;
  while (true) {
    if (x_18297 < n__4397__auto___18296) {
      a[x_18297] = 0;
      var G__18298 = x_18297 + 1;
      x_18297 = G__18298;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__18299 = i + 1;
      i = G__18299;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t18303 !== "undefined") {
  } else {
    cljs.core.async.t18303 = function(flag, alt_flag, meta18304) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta18304 = meta18304;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t18303.cljs$lang$type = true;
    cljs.core.async.t18303.cljs$lang$ctorStr = "cljs.core.async/t18303";
    cljs.core.async.t18303.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t18303");
      };
    }(flag);
    cljs.core.async.t18303.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t18303.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t18303.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t18303.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_18305) {
        var self__ = this;
        var _18305__$1 = this;
        return self__.meta18304;
      };
    }(flag);
    cljs.core.async.t18303.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_18305, meta18304__$1) {
        var self__ = this;
        var _18305__$1 = this;
        return new cljs.core.async.t18303(self__.flag, self__.alt_flag, meta18304__$1);
      };
    }(flag);
    cljs.core.async.__GT_t18303 = function(flag) {
      return function __GT_t18303(flag__$1, alt_flag__$1, meta18304) {
        return new cljs.core.async.t18303(flag__$1, alt_flag__$1, meta18304);
      };
    }(flag);
  }
  return new cljs.core.async.t18303(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t18309 !== "undefined") {
  } else {
    cljs.core.async.t18309 = function(cb, flag, alt_handler, meta18310) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta18310 = meta18310;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t18309.cljs$lang$type = true;
    cljs.core.async.t18309.cljs$lang$ctorStr = "cljs.core.async/t18309";
    cljs.core.async.t18309.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t18309");
    };
    cljs.core.async.t18309.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t18309.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t18309.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t18309.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18311) {
      var self__ = this;
      var _18311__$1 = this;
      return self__.meta18310;
    };
    cljs.core.async.t18309.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18311, meta18310__$1) {
      var self__ = this;
      var _18311__$1 = this;
      return new cljs.core.async.t18309(self__.cb, self__.flag, self__.alt_handler, meta18310__$1);
    };
    cljs.core.async.__GT_t18309 = function __GT_t18309(cb__$1, flag__$1, alt_handler__$1, meta18310) {
      return new cljs.core.async.t18309(cb__$1, flag__$1, alt_handler__$1, meta18310);
    };
  }
  return new cljs.core.async.t18309(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__18312_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__18312_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__18313_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__18313_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3541__auto__ = wport;
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__18314 = i + 1;
          i = G__18314;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3541__auto__ = ret;
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3529__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3529__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3529__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__18315) {
    var map__18317 = p__18315;
    var map__18317__$1 = cljs.core.seq_QMARK_.call(null, map__18317) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18317) : map__18317;
    var opts = map__18317__$1;
    if (null) {
      return null;
    } else {
      throw new Error("Assert failed: alts! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__18315 = null;
    if (arguments.length > 1) {
      p__18315 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__18315);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__18318) {
    var ports = cljs.core.first(arglist__18318);
    var p__18315 = cljs.core.rest(arglist__18318);
    return alts_BANG___delegate(ports, p__18315);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t18326 !== "undefined") {
  } else {
    cljs.core.async.t18326 = function(ch, f, map_LT_, meta18327) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta18327 = meta18327;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t18326.cljs$lang$type = true;
    cljs.core.async.t18326.cljs$lang$ctorStr = "cljs.core.async/t18326";
    cljs.core.async.t18326.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t18326");
    };
    cljs.core.async.t18326.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t18326.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t18326.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t18326.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t18329 !== "undefined") {
        } else {
          cljs.core.async.t18329 = function(fn1, _, meta18327, ch, f, map_LT_, meta18330) {
            this.fn1 = fn1;
            this._ = _;
            this.meta18327 = meta18327;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta18330 = meta18330;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t18329.cljs$lang$type = true;
          cljs.core.async.t18329.cljs$lang$ctorStr = "cljs.core.async/t18329";
          cljs.core.async.t18329.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
              return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t18329");
            };
          }(___$1);
          cljs.core.async.t18329.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t18329.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t18329.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t18329.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$4, ___$1) {
                return function(p1__18319_SHARP_) {
                  return f1.call(null, p1__18319_SHARP_ == null ? null : self__.f.call(null, p1__18319_SHARP_));
                };
              }(f1, ___$4, ___$1);
            };
          }(___$1);
          cljs.core.async.t18329.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_18331) {
              var self__ = this;
              var _18331__$1 = this;
              return self__.meta18330;
            };
          }(___$1);
          cljs.core.async.t18329.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_18331, meta18330__$1) {
              var self__ = this;
              var _18331__$1 = this;
              return new cljs.core.async.t18329(self__.fn1, self__._, self__.meta18327, self__.ch, self__.f, self__.map_LT_, meta18330__$1);
            };
          }(___$1);
          cljs.core.async.__GT_t18329 = function(___$1) {
            return function __GT_t18329(fn1__$1, ___$2, meta18327__$1, ch__$2, f__$2, map_LT___$2, meta18330) {
              return new cljs.core.async.t18329(fn1__$1, ___$2, meta18327__$1, ch__$2, f__$2, map_LT___$2, meta18330);
            };
          }(___$1);
        }
        return new cljs.core.async.t18329(fn1, ___$1, self__.meta18327, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3529__auto__ = ret;
        if (cljs.core.truth_(and__3529__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3529__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t18326.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t18326.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t18326.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t18326.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18328) {
      var self__ = this;
      var _18328__$1 = this;
      return self__.meta18327;
    };
    cljs.core.async.t18326.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18328, meta18327__$1) {
      var self__ = this;
      var _18328__$1 = this;
      return new cljs.core.async.t18326(self__.ch, self__.f, self__.map_LT_, meta18327__$1);
    };
    cljs.core.async.__GT_t18326 = function __GT_t18326(ch__$1, f__$1, map_LT___$1, meta18327) {
      return new cljs.core.async.t18326(ch__$1, f__$1, map_LT___$1, meta18327);
    };
  }
  return new cljs.core.async.t18326(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t18335 !== "undefined") {
  } else {
    cljs.core.async.t18335 = function(ch, f, map_GT_, meta18336) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta18336 = meta18336;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t18335.cljs$lang$type = true;
    cljs.core.async.t18335.cljs$lang$ctorStr = "cljs.core.async/t18335";
    cljs.core.async.t18335.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t18335");
    };
    cljs.core.async.t18335.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t18335.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t18335.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t18335.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t18335.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t18335.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t18335.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18337) {
      var self__ = this;
      var _18337__$1 = this;
      return self__.meta18336;
    };
    cljs.core.async.t18335.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18337, meta18336__$1) {
      var self__ = this;
      var _18337__$1 = this;
      return new cljs.core.async.t18335(self__.ch, self__.f, self__.map_GT_, meta18336__$1);
    };
    cljs.core.async.__GT_t18335 = function __GT_t18335(ch__$1, f__$1, map_GT___$1, meta18336) {
      return new cljs.core.async.t18335(ch__$1, f__$1, map_GT___$1, meta18336);
    };
  }
  return new cljs.core.async.t18335(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t18341 !== "undefined") {
  } else {
    cljs.core.async.t18341 = function(ch, p, filter_GT_, meta18342) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta18342 = meta18342;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t18341.cljs$lang$type = true;
    cljs.core.async.t18341.cljs$lang$ctorStr = "cljs.core.async/t18341";
    cljs.core.async.t18341.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t18341");
    };
    cljs.core.async.t18341.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t18341.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t18341.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t18341.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t18341.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t18341.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t18341.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t18341.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18343) {
      var self__ = this;
      var _18343__$1 = this;
      return self__.meta18342;
    };
    cljs.core.async.t18341.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18343, meta18342__$1) {
      var self__ = this;
      var _18343__$1 = this;
      return new cljs.core.async.t18341(self__.ch, self__.p, self__.filter_GT_, meta18342__$1);
    };
    cljs.core.async.__GT_t18341 = function __GT_t18341(ch__$1, p__$1, filter_GT___$1, meta18342) {
      return new cljs.core.async.t18341(ch__$1, p__$1, filter_GT___$1, meta18342);
    };
  }
  return new cljs.core.async.t18341(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__7022__auto___18426 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto___18426, out) {
      return function() {
        var f__7023__auto__ = function() {
          var switch__6951__auto__ = function(c__7022__auto___18426, out) {
            return function(state_18405) {
              var state_val_18406 = state_18405[1];
              if (state_val_18406 === 1) {
                var state_18405__$1 = state_18405;
                var statearr_18407_18427 = state_18405__$1;
                statearr_18407_18427[2] = null;
                statearr_18407_18427[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_18406 === 2) {
                  var state_18405__$1 = state_18405;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18405__$1, 4, ch);
                } else {
                  if (state_val_18406 === 3) {
                    var inst_18403 = state_18405[2];
                    var state_18405__$1 = state_18405;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18405__$1, inst_18403);
                  } else {
                    if (state_val_18406 === 4) {
                      var inst_18387 = state_18405[7];
                      var inst_18387__$1 = state_18405[2];
                      var inst_18388 = inst_18387__$1 == null;
                      var state_18405__$1 = function() {
                        var statearr_18408 = state_18405;
                        statearr_18408[7] = inst_18387__$1;
                        return statearr_18408;
                      }();
                      if (cljs.core.truth_(inst_18388)) {
                        var statearr_18409_18428 = state_18405__$1;
                        statearr_18409_18428[1] = 5;
                      } else {
                        var statearr_18410_18429 = state_18405__$1;
                        statearr_18410_18429[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_18406 === 5) {
                        var inst_18390 = cljs.core.async.close_BANG_.call(null, out);
                        var state_18405__$1 = state_18405;
                        var statearr_18411_18430 = state_18405__$1;
                        statearr_18411_18430[2] = inst_18390;
                        statearr_18411_18430[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_18406 === 6) {
                          var inst_18387 = state_18405[7];
                          var inst_18392 = p.call(null, inst_18387);
                          var state_18405__$1 = state_18405;
                          if (cljs.core.truth_(inst_18392)) {
                            var statearr_18412_18431 = state_18405__$1;
                            statearr_18412_18431[1] = 8;
                          } else {
                            var statearr_18413_18432 = state_18405__$1;
                            statearr_18413_18432[1] = 9;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_18406 === 7) {
                            var inst_18401 = state_18405[2];
                            var state_18405__$1 = state_18405;
                            var statearr_18414_18433 = state_18405__$1;
                            statearr_18414_18433[2] = inst_18401;
                            statearr_18414_18433[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_18406 === 8) {
                              var inst_18387 = state_18405[7];
                              var state_18405__$1 = state_18405;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18405__$1, 11, out, inst_18387);
                            } else {
                              if (state_val_18406 === 9) {
                                var state_18405__$1 = state_18405;
                                var statearr_18415_18434 = state_18405__$1;
                                statearr_18415_18434[2] = null;
                                statearr_18415_18434[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_18406 === 10) {
                                  var inst_18398 = state_18405[2];
                                  var state_18405__$1 = function() {
                                    var statearr_18416 = state_18405;
                                    statearr_18416[8] = inst_18398;
                                    return statearr_18416;
                                  }();
                                  var statearr_18417_18435 = state_18405__$1;
                                  statearr_18417_18435[2] = null;
                                  statearr_18417_18435[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_18406 === 11) {
                                    var inst_18395 = state_18405[2];
                                    var state_18405__$1 = state_18405;
                                    var statearr_18418_18436 = state_18405__$1;
                                    statearr_18418_18436[2] = inst_18395;
                                    statearr_18418_18436[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__7022__auto___18426, out);
          return function(switch__6951__auto__, c__7022__auto___18426, out) {
            return function() {
              var state_machine__6952__auto__ = null;
              var state_machine__6952__auto____0 = function() {
                var statearr_18422 = [null, null, null, null, null, null, null, null, null];
                statearr_18422[0] = state_machine__6952__auto__;
                statearr_18422[1] = 1;
                return statearr_18422;
              };
              var state_machine__6952__auto____1 = function(state_18405) {
                while (true) {
                  var ret_value__6953__auto__ = function() {
                    try {
                      while (true) {
                        var result__6954__auto__ = switch__6951__auto__.call(null, state_18405);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6954__auto__;
                        }
                        break;
                      }
                    } catch (e18423) {
                      if (e18423 instanceof Object) {
                        var ex__6955__auto__ = e18423;
                        var statearr_18424_18437 = state_18405;
                        statearr_18424_18437[5] = ex__6955__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18405);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e18423;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__18438 = state_18405;
                    state_18405 = G__18438;
                    continue;
                  } else {
                    return ret_value__6953__auto__;
                  }
                  break;
                }
              };
              state_machine__6952__auto__ = function(state_18405) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6952__auto____0.call(this);
                  case 1:
                    return state_machine__6952__auto____1.call(this, state_18405);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
              return state_machine__6952__auto__;
            }();
          }(switch__6951__auto__, c__7022__auto___18426, out);
        }();
        var state__7024__auto__ = function() {
          var statearr_18425 = f__7023__auto__.call(null);
          statearr_18425[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto___18426;
          return statearr_18425;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
      };
    }(c__7022__auto___18426, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__7022__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto__) {
    return function() {
      var f__7023__auto__ = function() {
        var switch__6951__auto__ = function(c__7022__auto__) {
          return function(state_18604) {
            var state_val_18605 = state_18604[1];
            if (state_val_18605 === 1) {
              var state_18604__$1 = state_18604;
              var statearr_18606_18647 = state_18604__$1;
              statearr_18606_18647[2] = null;
              statearr_18606_18647[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_18605 === 2) {
                var state_18604__$1 = state_18604;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18604__$1, 4, in$);
              } else {
                if (state_val_18605 === 3) {
                  var inst_18602 = state_18604[2];
                  var state_18604__$1 = state_18604;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18604__$1, inst_18602);
                } else {
                  if (state_val_18605 === 4) {
                    var inst_18545 = state_18604[7];
                    var inst_18545__$1 = state_18604[2];
                    var inst_18546 = inst_18545__$1 == null;
                    var state_18604__$1 = function() {
                      var statearr_18607 = state_18604;
                      statearr_18607[7] = inst_18545__$1;
                      return statearr_18607;
                    }();
                    if (cljs.core.truth_(inst_18546)) {
                      var statearr_18608_18648 = state_18604__$1;
                      statearr_18608_18648[1] = 5;
                    } else {
                      var statearr_18609_18649 = state_18604__$1;
                      statearr_18609_18649[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_18605 === 5) {
                      var inst_18548 = cljs.core.async.close_BANG_.call(null, out);
                      var state_18604__$1 = state_18604;
                      var statearr_18610_18650 = state_18604__$1;
                      statearr_18610_18650[2] = inst_18548;
                      statearr_18610_18650[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_18605 === 6) {
                        var inst_18545 = state_18604[7];
                        var inst_18554 = f.call(null, inst_18545);
                        var inst_18555 = cljs.core.seq.call(null, inst_18554);
                        var inst_18556 = inst_18555;
                        var inst_18557 = null;
                        var inst_18558 = 0;
                        var inst_18559 = 0;
                        var state_18604__$1 = function() {
                          var statearr_18611 = state_18604;
                          statearr_18611[8] = inst_18559;
                          statearr_18611[9] = inst_18558;
                          statearr_18611[10] = inst_18556;
                          statearr_18611[11] = inst_18557;
                          return statearr_18611;
                        }();
                        var statearr_18612_18651 = state_18604__$1;
                        statearr_18612_18651[2] = null;
                        statearr_18612_18651[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_18605 === 7) {
                          var inst_18600 = state_18604[2];
                          var state_18604__$1 = state_18604;
                          var statearr_18613_18652 = state_18604__$1;
                          statearr_18613_18652[2] = inst_18600;
                          statearr_18613_18652[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_18605 === 8) {
                            var inst_18559 = state_18604[8];
                            var inst_18558 = state_18604[9];
                            var inst_18561 = inst_18559 < inst_18558;
                            var inst_18562 = inst_18561;
                            var state_18604__$1 = state_18604;
                            if (cljs.core.truth_(inst_18562)) {
                              var statearr_18614_18653 = state_18604__$1;
                              statearr_18614_18653[1] = 10;
                            } else {
                              var statearr_18615_18654 = state_18604__$1;
                              statearr_18615_18654[1] = 11;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_18605 === 9) {
                              var inst_18592 = state_18604[2];
                              var inst_18593 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                              var state_18604__$1 = function() {
                                var statearr_18616 = state_18604;
                                statearr_18616[12] = inst_18592;
                                return statearr_18616;
                              }();
                              if (cljs.core.truth_(inst_18593)) {
                                var statearr_18617_18655 = state_18604__$1;
                                statearr_18617_18655[1] = 21;
                              } else {
                                var statearr_18618_18656 = state_18604__$1;
                                statearr_18618_18656[1] = 22;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_18605 === 10) {
                                var inst_18559 = state_18604[8];
                                var inst_18557 = state_18604[11];
                                var inst_18564 = cljs.core._nth.call(null, inst_18557, inst_18559);
                                var state_18604__$1 = state_18604;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18604__$1, 13, out, inst_18564);
                              } else {
                                if (state_val_18605 === 11) {
                                  var inst_18570 = state_18604[13];
                                  var inst_18556 = state_18604[10];
                                  var inst_18570__$1 = cljs.core.seq.call(null, inst_18556);
                                  var state_18604__$1 = function() {
                                    var statearr_18622 = state_18604;
                                    statearr_18622[13] = inst_18570__$1;
                                    return statearr_18622;
                                  }();
                                  if (inst_18570__$1) {
                                    var statearr_18623_18657 = state_18604__$1;
                                    statearr_18623_18657[1] = 14;
                                  } else {
                                    var statearr_18624_18658 = state_18604__$1;
                                    statearr_18624_18658[1] = 15;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_18605 === 12) {
                                    var inst_18590 = state_18604[2];
                                    var state_18604__$1 = state_18604;
                                    var statearr_18625_18659 = state_18604__$1;
                                    statearr_18625_18659[2] = inst_18590;
                                    statearr_18625_18659[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_18605 === 13) {
                                      var inst_18559 = state_18604[8];
                                      var inst_18558 = state_18604[9];
                                      var inst_18556 = state_18604[10];
                                      var inst_18557 = state_18604[11];
                                      var inst_18566 = state_18604[2];
                                      var inst_18567 = inst_18559 + 1;
                                      var tmp18619 = inst_18558;
                                      var tmp18620 = inst_18556;
                                      var tmp18621 = inst_18557;
                                      var inst_18556__$1 = tmp18620;
                                      var inst_18557__$1 = tmp18621;
                                      var inst_18558__$1 = tmp18619;
                                      var inst_18559__$1 = inst_18567;
                                      var state_18604__$1 = function() {
                                        var statearr_18626 = state_18604;
                                        statearr_18626[14] = inst_18566;
                                        statearr_18626[8] = inst_18559__$1;
                                        statearr_18626[9] = inst_18558__$1;
                                        statearr_18626[10] = inst_18556__$1;
                                        statearr_18626[11] = inst_18557__$1;
                                        return statearr_18626;
                                      }();
                                      var statearr_18627_18660 = state_18604__$1;
                                      statearr_18627_18660[2] = null;
                                      statearr_18627_18660[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_18605 === 14) {
                                        var inst_18570 = state_18604[13];
                                        var inst_18572 = cljs.core.chunked_seq_QMARK_.call(null, inst_18570);
                                        var state_18604__$1 = state_18604;
                                        if (inst_18572) {
                                          var statearr_18628_18661 = state_18604__$1;
                                          statearr_18628_18661[1] = 17;
                                        } else {
                                          var statearr_18629_18662 = state_18604__$1;
                                          statearr_18629_18662[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_18605 === 15) {
                                          var state_18604__$1 = state_18604;
                                          var statearr_18630_18663 = state_18604__$1;
                                          statearr_18630_18663[2] = null;
                                          statearr_18630_18663[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_18605 === 16) {
                                            var inst_18588 = state_18604[2];
                                            var state_18604__$1 = state_18604;
                                            var statearr_18631_18664 = state_18604__$1;
                                            statearr_18631_18664[2] = inst_18588;
                                            statearr_18631_18664[1] = 12;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_18605 === 17) {
                                              var inst_18570 = state_18604[13];
                                              var inst_18574 = cljs.core.chunk_first.call(null, inst_18570);
                                              var inst_18575 = cljs.core.chunk_rest.call(null, inst_18570);
                                              var inst_18576 = cljs.core.count.call(null, inst_18574);
                                              var inst_18556 = inst_18575;
                                              var inst_18557 = inst_18574;
                                              var inst_18558 = inst_18576;
                                              var inst_18559 = 0;
                                              var state_18604__$1 = function() {
                                                var statearr_18632 = state_18604;
                                                statearr_18632[8] = inst_18559;
                                                statearr_18632[9] = inst_18558;
                                                statearr_18632[10] = inst_18556;
                                                statearr_18632[11] = inst_18557;
                                                return statearr_18632;
                                              }();
                                              var statearr_18633_18665 = state_18604__$1;
                                              statearr_18633_18665[2] = null;
                                              statearr_18633_18665[1] = 8;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_18605 === 18) {
                                                var inst_18570 = state_18604[13];
                                                var inst_18579 = cljs.core.first.call(null, inst_18570);
                                                var state_18604__$1 = state_18604;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18604__$1, 20, out, inst_18579);
                                              } else {
                                                if (state_val_18605 === 19) {
                                                  var inst_18585 = state_18604[2];
                                                  var state_18604__$1 = state_18604;
                                                  var statearr_18634_18666 = state_18604__$1;
                                                  statearr_18634_18666[2] = inst_18585;
                                                  statearr_18634_18666[1] = 16;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_18605 === 20) {
                                                    var inst_18570 = state_18604[13];
                                                    var inst_18581 = state_18604[2];
                                                    var inst_18582 = cljs.core.next.call(null, inst_18570);
                                                    var inst_18556 = inst_18582;
                                                    var inst_18557 = null;
                                                    var inst_18558 = 0;
                                                    var inst_18559 = 0;
                                                    var state_18604__$1 = function() {
                                                      var statearr_18635 = state_18604;
                                                      statearr_18635[15] = inst_18581;
                                                      statearr_18635[8] = inst_18559;
                                                      statearr_18635[9] = inst_18558;
                                                      statearr_18635[10] = inst_18556;
                                                      statearr_18635[11] = inst_18557;
                                                      return statearr_18635;
                                                    }();
                                                    var statearr_18636_18667 = state_18604__$1;
                                                    statearr_18636_18667[2] = null;
                                                    statearr_18636_18667[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_18605 === 21) {
                                                      var state_18604__$1 = state_18604;
                                                      var statearr_18637_18668 = state_18604__$1;
                                                      statearr_18637_18668[2] = null;
                                                      statearr_18637_18668[1] = 23;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_18605 === 22) {
                                                        var state_18604__$1 = state_18604;
                                                        var statearr_18638_18669 = state_18604__$1;
                                                        statearr_18638_18669[2] = null;
                                                        statearr_18638_18669[1] = 2;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_18605 === 23) {
                                                          var inst_18598 = state_18604[2];
                                                          var state_18604__$1 = state_18604;
                                                          var statearr_18639_18670 = state_18604__$1;
                                                          statearr_18639_18670[2] = inst_18598;
                                                          statearr_18639_18670[1] = 7;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7022__auto__);
        return function(switch__6951__auto__, c__7022__auto__) {
          return function() {
            var state_machine__6952__auto__ = null;
            var state_machine__6952__auto____0 = function() {
              var statearr_18643 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_18643[0] = state_machine__6952__auto__;
              statearr_18643[1] = 1;
              return statearr_18643;
            };
            var state_machine__6952__auto____1 = function(state_18604) {
              while (true) {
                var ret_value__6953__auto__ = function() {
                  try {
                    while (true) {
                      var result__6954__auto__ = switch__6951__auto__.call(null, state_18604);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6954__auto__;
                      }
                      break;
                    }
                  } catch (e18644) {
                    if (e18644 instanceof Object) {
                      var ex__6955__auto__ = e18644;
                      var statearr_18645_18671 = state_18604;
                      statearr_18645_18671[5] = ex__6955__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18604);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e18644;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__18672 = state_18604;
                  state_18604 = G__18672;
                  continue;
                } else {
                  return ret_value__6953__auto__;
                }
                break;
              }
            };
            state_machine__6952__auto__ = function(state_18604) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6952__auto____0.call(this);
                case 1:
                  return state_machine__6952__auto____1.call(this, state_18604);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
            state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
            return state_machine__6952__auto__;
          }();
        }(switch__6951__auto__, c__7022__auto__);
      }();
      var state__7024__auto__ = function() {
        var statearr_18646 = f__7023__auto__.call(null);
        statearr_18646[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto__;
        return statearr_18646;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
    };
  }(c__7022__auto__));
  return c__7022__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__7022__auto___18767 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto___18767) {
      return function() {
        var f__7023__auto__ = function() {
          var switch__6951__auto__ = function(c__7022__auto___18767) {
            return function(state_18743) {
              var state_val_18744 = state_18743[1];
              if (state_val_18744 === 1) {
                var state_18743__$1 = state_18743;
                var statearr_18745_18768 = state_18743__$1;
                statearr_18745_18768[2] = null;
                statearr_18745_18768[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_18744 === 2) {
                  var state_18743__$1 = state_18743;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18743__$1, 4, from);
                } else {
                  if (state_val_18744 === 3) {
                    var inst_18741 = state_18743[2];
                    var state_18743__$1 = state_18743;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18743__$1, inst_18741);
                  } else {
                    if (state_val_18744 === 4) {
                      var inst_18722 = state_18743[7];
                      var inst_18722__$1 = state_18743[2];
                      var inst_18723 = inst_18722__$1 == null;
                      var state_18743__$1 = function() {
                        var statearr_18746 = state_18743;
                        statearr_18746[7] = inst_18722__$1;
                        return statearr_18746;
                      }();
                      if (cljs.core.truth_(inst_18723)) {
                        var statearr_18747_18769 = state_18743__$1;
                        statearr_18747_18769[1] = 5;
                      } else {
                        var statearr_18748_18770 = state_18743__$1;
                        statearr_18748_18770[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_18744 === 5) {
                        var state_18743__$1 = state_18743;
                        if (cljs.core.truth_(close_QMARK_)) {
                          var statearr_18749_18771 = state_18743__$1;
                          statearr_18749_18771[1] = 8;
                        } else {
                          var statearr_18750_18772 = state_18743__$1;
                          statearr_18750_18772[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_18744 === 6) {
                          var inst_18722 = state_18743[7];
                          var state_18743__$1 = state_18743;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18743__$1, 11, to, inst_18722);
                        } else {
                          if (state_val_18744 === 7) {
                            var inst_18739 = state_18743[2];
                            var state_18743__$1 = state_18743;
                            var statearr_18751_18773 = state_18743__$1;
                            statearr_18751_18773[2] = inst_18739;
                            statearr_18751_18773[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_18744 === 8) {
                              var inst_18726 = cljs.core.async.close_BANG_.call(null, to);
                              var state_18743__$1 = state_18743;
                              var statearr_18752_18774 = state_18743__$1;
                              statearr_18752_18774[2] = inst_18726;
                              statearr_18752_18774[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_18744 === 9) {
                                var state_18743__$1 = state_18743;
                                var statearr_18753_18775 = state_18743__$1;
                                statearr_18753_18775[2] = null;
                                statearr_18753_18775[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_18744 === 10) {
                                  var inst_18729 = state_18743[2];
                                  var state_18743__$1 = state_18743;
                                  var statearr_18754_18776 = state_18743__$1;
                                  statearr_18754_18776[2] = inst_18729;
                                  statearr_18754_18776[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_18744 === 11) {
                                    var inst_18732 = state_18743[2];
                                    var state_18743__$1 = state_18743;
                                    if (cljs.core.truth_(inst_18732)) {
                                      var statearr_18755_18777 = state_18743__$1;
                                      statearr_18755_18777[1] = 12;
                                    } else {
                                      var statearr_18756_18778 = state_18743__$1;
                                      statearr_18756_18778[1] = 13;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_18744 === 12) {
                                      var state_18743__$1 = state_18743;
                                      var statearr_18757_18779 = state_18743__$1;
                                      statearr_18757_18779[2] = null;
                                      statearr_18757_18779[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_18744 === 13) {
                                        var state_18743__$1 = state_18743;
                                        var statearr_18758_18780 = state_18743__$1;
                                        statearr_18758_18780[2] = null;
                                        statearr_18758_18780[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_18744 === 14) {
                                          var inst_18737 = state_18743[2];
                                          var state_18743__$1 = state_18743;
                                          var statearr_18759_18781 = state_18743__$1;
                                          statearr_18759_18781[2] = inst_18737;
                                          statearr_18759_18781[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__7022__auto___18767);
          return function(switch__6951__auto__, c__7022__auto___18767) {
            return function() {
              var state_machine__6952__auto__ = null;
              var state_machine__6952__auto____0 = function() {
                var statearr_18763 = [null, null, null, null, null, null, null, null];
                statearr_18763[0] = state_machine__6952__auto__;
                statearr_18763[1] = 1;
                return statearr_18763;
              };
              var state_machine__6952__auto____1 = function(state_18743) {
                while (true) {
                  var ret_value__6953__auto__ = function() {
                    try {
                      while (true) {
                        var result__6954__auto__ = switch__6951__auto__.call(null, state_18743);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6954__auto__;
                        }
                        break;
                      }
                    } catch (e18764) {
                      if (e18764 instanceof Object) {
                        var ex__6955__auto__ = e18764;
                        var statearr_18765_18782 = state_18743;
                        statearr_18765_18782[5] = ex__6955__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18743);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e18764;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__18783 = state_18743;
                    state_18743 = G__18783;
                    continue;
                  } else {
                    return ret_value__6953__auto__;
                  }
                  break;
                }
              };
              state_machine__6952__auto__ = function(state_18743) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6952__auto____0.call(this);
                  case 1:
                    return state_machine__6952__auto____1.call(this, state_18743);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
              return state_machine__6952__auto__;
            }();
          }(switch__6951__auto__, c__7022__auto___18767);
        }();
        var state__7024__auto__ = function() {
          var statearr_18766 = f__7023__auto__.call(null);
          statearr_18766[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto___18767;
          return statearr_18766;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
      };
    }(c__7022__auto___18767));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__7022__auto___18884 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto___18884, tc, fc) {
      return function() {
        var f__7023__auto__ = function() {
          var switch__6951__auto__ = function(c__7022__auto___18884, tc, fc) {
            return function(state_18859) {
              var state_val_18860 = state_18859[1];
              if (state_val_18860 === 1) {
                var state_18859__$1 = state_18859;
                var statearr_18861_18885 = state_18859__$1;
                statearr_18861_18885[2] = null;
                statearr_18861_18885[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_18860 === 2) {
                  var state_18859__$1 = state_18859;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18859__$1, 4, ch);
                } else {
                  if (state_val_18860 === 3) {
                    var inst_18857 = state_18859[2];
                    var state_18859__$1 = state_18859;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18859__$1, inst_18857);
                  } else {
                    if (state_val_18860 === 4) {
                      var inst_18836 = state_18859[7];
                      var inst_18836__$1 = state_18859[2];
                      var inst_18837 = inst_18836__$1 == null;
                      var state_18859__$1 = function() {
                        var statearr_18862 = state_18859;
                        statearr_18862[7] = inst_18836__$1;
                        return statearr_18862;
                      }();
                      if (cljs.core.truth_(inst_18837)) {
                        var statearr_18863_18886 = state_18859__$1;
                        statearr_18863_18886[1] = 5;
                      } else {
                        var statearr_18864_18887 = state_18859__$1;
                        statearr_18864_18887[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_18860 === 5) {
                        var inst_18839 = cljs.core.async.close_BANG_.call(null, tc);
                        var inst_18840 = cljs.core.async.close_BANG_.call(null, fc);
                        var state_18859__$1 = function() {
                          var statearr_18865 = state_18859;
                          statearr_18865[8] = inst_18839;
                          return statearr_18865;
                        }();
                        var statearr_18866_18888 = state_18859__$1;
                        statearr_18866_18888[2] = inst_18840;
                        statearr_18866_18888[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_18860 === 6) {
                          var inst_18836 = state_18859[7];
                          var inst_18842 = p.call(null, inst_18836);
                          var state_18859__$1 = state_18859;
                          if (cljs.core.truth_(inst_18842)) {
                            var statearr_18867_18889 = state_18859__$1;
                            statearr_18867_18889[1] = 9;
                          } else {
                            var statearr_18868_18890 = state_18859__$1;
                            statearr_18868_18890[1] = 10;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_18860 === 7) {
                            var inst_18855 = state_18859[2];
                            var state_18859__$1 = state_18859;
                            var statearr_18869_18891 = state_18859__$1;
                            statearr_18869_18891[2] = inst_18855;
                            statearr_18869_18891[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_18860 === 8) {
                              var inst_18848 = state_18859[2];
                              var state_18859__$1 = state_18859;
                              if (cljs.core.truth_(inst_18848)) {
                                var statearr_18870_18892 = state_18859__$1;
                                statearr_18870_18892[1] = 12;
                              } else {
                                var statearr_18871_18893 = state_18859__$1;
                                statearr_18871_18893[1] = 13;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_18860 === 9) {
                                var state_18859__$1 = state_18859;
                                var statearr_18872_18894 = state_18859__$1;
                                statearr_18872_18894[2] = tc;
                                statearr_18872_18894[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_18860 === 10) {
                                  var state_18859__$1 = state_18859;
                                  var statearr_18873_18895 = state_18859__$1;
                                  statearr_18873_18895[2] = fc;
                                  statearr_18873_18895[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_18860 === 11) {
                                    var inst_18836 = state_18859[7];
                                    var inst_18846 = state_18859[2];
                                    var state_18859__$1 = state_18859;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18859__$1, 8, inst_18846, inst_18836);
                                  } else {
                                    if (state_val_18860 === 12) {
                                      var state_18859__$1 = state_18859;
                                      var statearr_18874_18896 = state_18859__$1;
                                      statearr_18874_18896[2] = null;
                                      statearr_18874_18896[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_18860 === 13) {
                                        var state_18859__$1 = state_18859;
                                        var statearr_18875_18897 = state_18859__$1;
                                        statearr_18875_18897[2] = null;
                                        statearr_18875_18897[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_18860 === 14) {
                                          var inst_18853 = state_18859[2];
                                          var state_18859__$1 = state_18859;
                                          var statearr_18876_18898 = state_18859__$1;
                                          statearr_18876_18898[2] = inst_18853;
                                          statearr_18876_18898[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__7022__auto___18884, tc, fc);
          return function(switch__6951__auto__, c__7022__auto___18884, tc, fc) {
            return function() {
              var state_machine__6952__auto__ = null;
              var state_machine__6952__auto____0 = function() {
                var statearr_18880 = [null, null, null, null, null, null, null, null, null];
                statearr_18880[0] = state_machine__6952__auto__;
                statearr_18880[1] = 1;
                return statearr_18880;
              };
              var state_machine__6952__auto____1 = function(state_18859) {
                while (true) {
                  var ret_value__6953__auto__ = function() {
                    try {
                      while (true) {
                        var result__6954__auto__ = switch__6951__auto__.call(null, state_18859);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6954__auto__;
                        }
                        break;
                      }
                    } catch (e18881) {
                      if (e18881 instanceof Object) {
                        var ex__6955__auto__ = e18881;
                        var statearr_18882_18899 = state_18859;
                        statearr_18882_18899[5] = ex__6955__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18859);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e18881;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__18900 = state_18859;
                    state_18859 = G__18900;
                    continue;
                  } else {
                    return ret_value__6953__auto__;
                  }
                  break;
                }
              };
              state_machine__6952__auto__ = function(state_18859) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6952__auto____0.call(this);
                  case 1:
                    return state_machine__6952__auto____1.call(this, state_18859);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
              return state_machine__6952__auto__;
            }();
          }(switch__6951__auto__, c__7022__auto___18884, tc, fc);
        }();
        var state__7024__auto__ = function() {
          var statearr_18883 = f__7023__auto__.call(null);
          statearr_18883[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto___18884;
          return statearr_18883;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
      };
    }(c__7022__auto___18884, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__7022__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto__) {
    return function() {
      var f__7023__auto__ = function() {
        var switch__6951__auto__ = function(c__7022__auto__) {
          return function(state_18947) {
            var state_val_18948 = state_18947[1];
            if (state_val_18948 === 7) {
              var inst_18943 = state_18947[2];
              var state_18947__$1 = state_18947;
              var statearr_18949_18965 = state_18947__$1;
              statearr_18949_18965[2] = inst_18943;
              statearr_18949_18965[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_18948 === 6) {
                var inst_18933 = state_18947[7];
                var inst_18936 = state_18947[8];
                var inst_18940 = f.call(null, inst_18933, inst_18936);
                var inst_18933__$1 = inst_18940;
                var state_18947__$1 = function() {
                  var statearr_18950 = state_18947;
                  statearr_18950[7] = inst_18933__$1;
                  return statearr_18950;
                }();
                var statearr_18951_18966 = state_18947__$1;
                statearr_18951_18966[2] = null;
                statearr_18951_18966[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_18948 === 5) {
                  var inst_18933 = state_18947[7];
                  var state_18947__$1 = state_18947;
                  var statearr_18952_18967 = state_18947__$1;
                  statearr_18952_18967[2] = inst_18933;
                  statearr_18952_18967[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_18948 === 4) {
                    var inst_18936 = state_18947[8];
                    var inst_18936__$1 = state_18947[2];
                    var inst_18937 = inst_18936__$1 == null;
                    var state_18947__$1 = function() {
                      var statearr_18953 = state_18947;
                      statearr_18953[8] = inst_18936__$1;
                      return statearr_18953;
                    }();
                    if (cljs.core.truth_(inst_18937)) {
                      var statearr_18954_18968 = state_18947__$1;
                      statearr_18954_18968[1] = 5;
                    } else {
                      var statearr_18955_18969 = state_18947__$1;
                      statearr_18955_18969[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_18948 === 3) {
                      var inst_18945 = state_18947[2];
                      var state_18947__$1 = state_18947;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18947__$1, inst_18945);
                    } else {
                      if (state_val_18948 === 2) {
                        var state_18947__$1 = state_18947;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18947__$1, 4, ch);
                      } else {
                        if (state_val_18948 === 1) {
                          var inst_18933 = init;
                          var state_18947__$1 = function() {
                            var statearr_18956 = state_18947;
                            statearr_18956[7] = inst_18933;
                            return statearr_18956;
                          }();
                          var statearr_18957_18970 = state_18947__$1;
                          statearr_18957_18970[2] = null;
                          statearr_18957_18970[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7022__auto__);
        return function(switch__6951__auto__, c__7022__auto__) {
          return function() {
            var state_machine__6952__auto__ = null;
            var state_machine__6952__auto____0 = function() {
              var statearr_18961 = [null, null, null, null, null, null, null, null, null];
              statearr_18961[0] = state_machine__6952__auto__;
              statearr_18961[1] = 1;
              return statearr_18961;
            };
            var state_machine__6952__auto____1 = function(state_18947) {
              while (true) {
                var ret_value__6953__auto__ = function() {
                  try {
                    while (true) {
                      var result__6954__auto__ = switch__6951__auto__.call(null, state_18947);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6954__auto__;
                      }
                      break;
                    }
                  } catch (e18962) {
                    if (e18962 instanceof Object) {
                      var ex__6955__auto__ = e18962;
                      var statearr_18963_18971 = state_18947;
                      statearr_18963_18971[5] = ex__6955__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18947);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e18962;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__18972 = state_18947;
                  state_18947 = G__18972;
                  continue;
                } else {
                  return ret_value__6953__auto__;
                }
                break;
              }
            };
            state_machine__6952__auto__ = function(state_18947) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6952__auto____0.call(this);
                case 1:
                  return state_machine__6952__auto____1.call(this, state_18947);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
            state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
            return state_machine__6952__auto__;
          }();
        }(switch__6951__auto__, c__7022__auto__);
      }();
      var state__7024__auto__ = function() {
        var statearr_18964 = f__7023__auto__.call(null);
        statearr_18964[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto__;
        return statearr_18964;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
    };
  }(c__7022__auto__));
  return c__7022__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__7022__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto__) {
      return function() {
        var f__7023__auto__ = function() {
          var switch__6951__auto__ = function(c__7022__auto__) {
            return function(state_19046) {
              var state_val_19047 = state_19046[1];
              if (state_val_19047 === 1) {
                var inst_19022 = cljs.core.seq.call(null, coll);
                var inst_19023 = inst_19022;
                var state_19046__$1 = function() {
                  var statearr_19048 = state_19046;
                  statearr_19048[7] = inst_19023;
                  return statearr_19048;
                }();
                var statearr_19049_19071 = state_19046__$1;
                statearr_19049_19071[2] = null;
                statearr_19049_19071[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_19047 === 2) {
                  var inst_19023 = state_19046[7];
                  var state_19046__$1 = state_19046;
                  if (cljs.core.truth_(inst_19023)) {
                    var statearr_19050_19072 = state_19046__$1;
                    statearr_19050_19072[1] = 4;
                  } else {
                    var statearr_19051_19073 = state_19046__$1;
                    statearr_19051_19073[1] = 5;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_19047 === 3) {
                    var inst_19044 = state_19046[2];
                    var state_19046__$1 = state_19046;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19046__$1, inst_19044);
                  } else {
                    if (state_val_19047 === 4) {
                      var inst_19023 = state_19046[7];
                      var inst_19026 = cljs.core.first.call(null, inst_19023);
                      var state_19046__$1 = state_19046;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19046__$1, 7, ch, inst_19026);
                    } else {
                      if (state_val_19047 === 5) {
                        var inst_19023 = state_19046[7];
                        var state_19046__$1 = state_19046;
                        var statearr_19052_19074 = state_19046__$1;
                        statearr_19052_19074[2] = inst_19023;
                        statearr_19052_19074[1] = 6;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_19047 === 6) {
                          var inst_19031 = state_19046[2];
                          var state_19046__$1 = state_19046;
                          if (cljs.core.truth_(inst_19031)) {
                            var statearr_19053_19075 = state_19046__$1;
                            statearr_19053_19075[1] = 8;
                          } else {
                            var statearr_19054_19076 = state_19046__$1;
                            statearr_19054_19076[1] = 9;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_19047 === 7) {
                            var inst_19028 = state_19046[2];
                            var state_19046__$1 = state_19046;
                            var statearr_19055_19077 = state_19046__$1;
                            statearr_19055_19077[2] = inst_19028;
                            statearr_19055_19077[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_19047 === 8) {
                              var inst_19023 = state_19046[7];
                              var inst_19033 = cljs.core.next.call(null, inst_19023);
                              var inst_19023__$1 = inst_19033;
                              var state_19046__$1 = function() {
                                var statearr_19056 = state_19046;
                                statearr_19056[7] = inst_19023__$1;
                                return statearr_19056;
                              }();
                              var statearr_19057_19078 = state_19046__$1;
                              statearr_19057_19078[2] = null;
                              statearr_19057_19078[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_19047 === 9) {
                                var state_19046__$1 = state_19046;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_19058_19079 = state_19046__$1;
                                  statearr_19058_19079[1] = 11;
                                } else {
                                  var statearr_19059_19080 = state_19046__$1;
                                  statearr_19059_19080[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_19047 === 10) {
                                  var inst_19042 = state_19046[2];
                                  var state_19046__$1 = state_19046;
                                  var statearr_19060_19081 = state_19046__$1;
                                  statearr_19060_19081[2] = inst_19042;
                                  statearr_19060_19081[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_19047 === 11) {
                                    var inst_19037 = cljs.core.async.close_BANG_.call(null, ch);
                                    var state_19046__$1 = state_19046;
                                    var statearr_19061_19082 = state_19046__$1;
                                    statearr_19061_19082[2] = inst_19037;
                                    statearr_19061_19082[1] = 13;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_19047 === 12) {
                                      var state_19046__$1 = state_19046;
                                      var statearr_19062_19083 = state_19046__$1;
                                      statearr_19062_19083[2] = null;
                                      statearr_19062_19083[1] = 13;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_19047 === 13) {
                                        var inst_19040 = state_19046[2];
                                        var state_19046__$1 = state_19046;
                                        var statearr_19063_19084 = state_19046__$1;
                                        statearr_19063_19084[2] = inst_19040;
                                        statearr_19063_19084[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__7022__auto__);
          return function(switch__6951__auto__, c__7022__auto__) {
            return function() {
              var state_machine__6952__auto__ = null;
              var state_machine__6952__auto____0 = function() {
                var statearr_19067 = [null, null, null, null, null, null, null, null];
                statearr_19067[0] = state_machine__6952__auto__;
                statearr_19067[1] = 1;
                return statearr_19067;
              };
              var state_machine__6952__auto____1 = function(state_19046) {
                while (true) {
                  var ret_value__6953__auto__ = function() {
                    try {
                      while (true) {
                        var result__6954__auto__ = switch__6951__auto__.call(null, state_19046);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6954__auto__;
                        }
                        break;
                      }
                    } catch (e19068) {
                      if (e19068 instanceof Object) {
                        var ex__6955__auto__ = e19068;
                        var statearr_19069_19085 = state_19046;
                        statearr_19069_19085[5] = ex__6955__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19046);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e19068;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__19086 = state_19046;
                    state_19046 = G__19086;
                    continue;
                  } else {
                    return ret_value__6953__auto__;
                  }
                  break;
                }
              };
              state_machine__6952__auto__ = function(state_19046) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6952__auto____0.call(this);
                  case 1:
                    return state_machine__6952__auto____1.call(this, state_19046);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
              return state_machine__6952__auto__;
            }();
          }(switch__6951__auto__, c__7022__auto__);
        }();
        var state__7024__auto__ = function() {
          var statearr_19070 = f__7023__auto__.call(null);
          statearr_19070[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto__;
          return statearr_19070;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
      };
    }(c__7022__auto__));
    return c__7022__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj19088 = {};
  return obj19088;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3529__auto__ = _;
    if (and__3529__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4168__auto__ = _ == null ? null : _;
    return function() {
      var or__3541__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj19090 = {};
  return obj19090;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t19312 !== "undefined") {
    } else {
      cljs.core.async.t19312 = function(cs, ch, mult, meta19313) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta19313 = meta19313;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t19312.cljs$lang$type = true;
      cljs.core.async.t19312.cljs$lang$ctorStr = "cljs.core.async/t19312";
      cljs.core.async.t19312.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
          return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t19312");
        };
      }(cs);
      cljs.core.async.t19312.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t19312.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t19312.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t19312.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t19312.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t19312.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t19312.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_19314) {
          var self__ = this;
          var _19314__$1 = this;
          return self__.meta19313;
        };
      }(cs);
      cljs.core.async.t19312.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_19314, meta19313__$1) {
          var self__ = this;
          var _19314__$1 = this;
          return new cljs.core.async.t19312(self__.cs, self__.ch, self__.mult, meta19313__$1);
        };
      }(cs);
      cljs.core.async.__GT_t19312 = function(cs) {
        return function __GT_t19312(cs__$1, ch__$1, mult__$1, meta19313) {
          return new cljs.core.async.t19312(cs__$1, ch__$1, mult__$1, meta19313);
        };
      }(cs);
    }
    return new cljs.core.async.t19312(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__7022__auto___19533 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto___19533, cs, m, dchan, dctr, done) {
    return function() {
      var f__7023__auto__ = function() {
        var switch__6951__auto__ = function(c__7022__auto___19533, cs, m, dchan, dctr, done) {
          return function(state_19445) {
            var state_val_19446 = state_19445[1];
            if (state_val_19446 === 32) {
              var inst_19387 = state_19445[7];
              var inst_19386 = state_19445[8];
              var inst_19388 = state_19445[9];
              var inst_19385 = state_19445[10];
              var inst_19400 = state_19445[2];
              var inst_19401 = inst_19388 + 1;
              var tmp19447 = inst_19387;
              var tmp19448 = inst_19386;
              var tmp19449 = inst_19385;
              var inst_19385__$1 = tmp19449;
              var inst_19386__$1 = tmp19448;
              var inst_19387__$1 = tmp19447;
              var inst_19388__$1 = inst_19401;
              var state_19445__$1 = function() {
                var statearr_19450 = state_19445;
                statearr_19450[7] = inst_19387__$1;
                statearr_19450[8] = inst_19386__$1;
                statearr_19450[9] = inst_19388__$1;
                statearr_19450[10] = inst_19385__$1;
                statearr_19450[11] = inst_19400;
                return statearr_19450;
              }();
              var statearr_19451_19534 = state_19445__$1;
              statearr_19451_19534[2] = null;
              statearr_19451_19534[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_19446 === 1) {
                var state_19445__$1 = state_19445;
                var statearr_19452_19535 = state_19445__$1;
                statearr_19452_19535[2] = null;
                statearr_19452_19535[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_19446 === 33) {
                  var inst_19404 = state_19445[12];
                  var inst_19406 = cljs.core.chunked_seq_QMARK_.call(null, inst_19404);
                  var state_19445__$1 = state_19445;
                  if (inst_19406) {
                    var statearr_19453_19536 = state_19445__$1;
                    statearr_19453_19536[1] = 36;
                  } else {
                    var statearr_19454_19537 = state_19445__$1;
                    statearr_19454_19537[1] = 37;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_19446 === 2) {
                    var state_19445__$1 = state_19445;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19445__$1, 4, ch);
                  } else {
                    if (state_val_19446 === 34) {
                      var state_19445__$1 = state_19445;
                      var statearr_19455_19538 = state_19445__$1;
                      statearr_19455_19538[2] = null;
                      statearr_19455_19538[1] = 35;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_19446 === 3) {
                        var inst_19443 = state_19445[2];
                        var state_19445__$1 = state_19445;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19445__$1, inst_19443);
                      } else {
                        if (state_val_19446 === 35) {
                          var inst_19427 = state_19445[2];
                          var state_19445__$1 = state_19445;
                          var statearr_19456_19539 = state_19445__$1;
                          statearr_19456_19539[2] = inst_19427;
                          statearr_19456_19539[1] = 29;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_19446 === 4) {
                            var inst_19317 = state_19445[13];
                            var inst_19317__$1 = state_19445[2];
                            var inst_19318 = inst_19317__$1 == null;
                            var state_19445__$1 = function() {
                              var statearr_19457 = state_19445;
                              statearr_19457[13] = inst_19317__$1;
                              return statearr_19457;
                            }();
                            if (cljs.core.truth_(inst_19318)) {
                              var statearr_19458_19540 = state_19445__$1;
                              statearr_19458_19540[1] = 5;
                            } else {
                              var statearr_19459_19541 = state_19445__$1;
                              statearr_19459_19541[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_19446 === 36) {
                              var inst_19404 = state_19445[12];
                              var inst_19408 = cljs.core.chunk_first.call(null, inst_19404);
                              var inst_19409 = cljs.core.chunk_rest.call(null, inst_19404);
                              var inst_19410 = cljs.core.count.call(null, inst_19408);
                              var inst_19385 = inst_19409;
                              var inst_19386 = inst_19408;
                              var inst_19387 = inst_19410;
                              var inst_19388 = 0;
                              var state_19445__$1 = function() {
                                var statearr_19460 = state_19445;
                                statearr_19460[7] = inst_19387;
                                statearr_19460[8] = inst_19386;
                                statearr_19460[9] = inst_19388;
                                statearr_19460[10] = inst_19385;
                                return statearr_19460;
                              }();
                              var statearr_19461_19542 = state_19445__$1;
                              statearr_19461_19542[2] = null;
                              statearr_19461_19542[1] = 25;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_19446 === 5) {
                                var inst_19324 = cljs.core.deref.call(null, cs);
                                var inst_19325 = cljs.core.seq.call(null, inst_19324);
                                var inst_19326 = inst_19325;
                                var inst_19327 = null;
                                var inst_19328 = 0;
                                var inst_19329 = 0;
                                var state_19445__$1 = function() {
                                  var statearr_19462 = state_19445;
                                  statearr_19462[14] = inst_19329;
                                  statearr_19462[15] = inst_19328;
                                  statearr_19462[16] = inst_19326;
                                  statearr_19462[17] = inst_19327;
                                  return statearr_19462;
                                }();
                                var statearr_19463_19543 = state_19445__$1;
                                statearr_19463_19543[2] = null;
                                statearr_19463_19543[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_19446 === 37) {
                                  var inst_19413 = state_19445[18];
                                  var inst_19404 = state_19445[12];
                                  var inst_19317 = state_19445[13];
                                  var inst_19413__$1 = cljs.core.first.call(null, inst_19404);
                                  var inst_19414 = cljs.core.async.put_BANG_.call(null, inst_19413__$1, inst_19317, done);
                                  var state_19445__$1 = function() {
                                    var statearr_19464 = state_19445;
                                    statearr_19464[18] = inst_19413__$1;
                                    return statearr_19464;
                                  }();
                                  if (cljs.core.truth_(inst_19414)) {
                                    var statearr_19465_19544 = state_19445__$1;
                                    statearr_19465_19544[1] = 39;
                                  } else {
                                    var statearr_19466_19545 = state_19445__$1;
                                    statearr_19466_19545[1] = 40;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_19446 === 6) {
                                    var inst_19377 = state_19445[19];
                                    var inst_19376 = cljs.core.deref.call(null, cs);
                                    var inst_19377__$1 = cljs.core.keys.call(null, inst_19376);
                                    var inst_19378 = cljs.core.count.call(null, inst_19377__$1);
                                    var inst_19379 = cljs.core.reset_BANG_.call(null, dctr, inst_19378);
                                    var inst_19384 = cljs.core.seq.call(null, inst_19377__$1);
                                    var inst_19385 = inst_19384;
                                    var inst_19386 = null;
                                    var inst_19387 = 0;
                                    var inst_19388 = 0;
                                    var state_19445__$1 = function() {
                                      var statearr_19467 = state_19445;
                                      statearr_19467[20] = inst_19379;
                                      statearr_19467[19] = inst_19377__$1;
                                      statearr_19467[7] = inst_19387;
                                      statearr_19467[8] = inst_19386;
                                      statearr_19467[9] = inst_19388;
                                      statearr_19467[10] = inst_19385;
                                      return statearr_19467;
                                    }();
                                    var statearr_19468_19546 = state_19445__$1;
                                    statearr_19468_19546[2] = null;
                                    statearr_19468_19546[1] = 25;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_19446 === 38) {
                                      var inst_19424 = state_19445[2];
                                      var state_19445__$1 = state_19445;
                                      var statearr_19469_19547 = state_19445__$1;
                                      statearr_19469_19547[2] = inst_19424;
                                      statearr_19469_19547[1] = 35;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_19446 === 7) {
                                        var inst_19441 = state_19445[2];
                                        var state_19445__$1 = state_19445;
                                        var statearr_19470_19548 = state_19445__$1;
                                        statearr_19470_19548[2] = inst_19441;
                                        statearr_19470_19548[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_19446 === 39) {
                                          var state_19445__$1 = state_19445;
                                          var statearr_19471_19549 = state_19445__$1;
                                          statearr_19471_19549[2] = null;
                                          statearr_19471_19549[1] = 41;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_19446 === 8) {
                                            var inst_19329 = state_19445[14];
                                            var inst_19328 = state_19445[15];
                                            var inst_19331 = inst_19329 < inst_19328;
                                            var inst_19332 = inst_19331;
                                            var state_19445__$1 = state_19445;
                                            if (cljs.core.truth_(inst_19332)) {
                                              var statearr_19472_19550 = state_19445__$1;
                                              statearr_19472_19550[1] = 10;
                                            } else {
                                              var statearr_19473_19551 = state_19445__$1;
                                              statearr_19473_19551[1] = 11;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_19446 === 40) {
                                              var inst_19413 = state_19445[18];
                                              var inst_19417 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                              var inst_19418 = cljs.core.async.untap_STAR_.call(null, m, inst_19413);
                                              var state_19445__$1 = function() {
                                                var statearr_19474 = state_19445;
                                                statearr_19474[21] = inst_19417;
                                                return statearr_19474;
                                              }();
                                              var statearr_19475_19552 = state_19445__$1;
                                              statearr_19475_19552[2] = inst_19418;
                                              statearr_19475_19552[1] = 41;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_19446 === 9) {
                                                var inst_19374 = state_19445[2];
                                                var state_19445__$1 = state_19445;
                                                var statearr_19476_19553 = state_19445__$1;
                                                statearr_19476_19553[2] = inst_19374;
                                                statearr_19476_19553[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_19446 === 41) {
                                                  var inst_19404 = state_19445[12];
                                                  var inst_19420 = state_19445[2];
                                                  var inst_19421 = cljs.core.next.call(null, inst_19404);
                                                  var inst_19385 = inst_19421;
                                                  var inst_19386 = null;
                                                  var inst_19387 = 0;
                                                  var inst_19388 = 0;
                                                  var state_19445__$1 = function() {
                                                    var statearr_19477 = state_19445;
                                                    statearr_19477[7] = inst_19387;
                                                    statearr_19477[22] = inst_19420;
                                                    statearr_19477[8] = inst_19386;
                                                    statearr_19477[9] = inst_19388;
                                                    statearr_19477[10] = inst_19385;
                                                    return statearr_19477;
                                                  }();
                                                  var statearr_19478_19554 = state_19445__$1;
                                                  statearr_19478_19554[2] = null;
                                                  statearr_19478_19554[1] = 25;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_19446 === 10) {
                                                    var inst_19329 = state_19445[14];
                                                    var inst_19327 = state_19445[17];
                                                    var inst_19335 = cljs.core._nth.call(null, inst_19327, inst_19329);
                                                    var inst_19336 = cljs.core.nth.call(null, inst_19335, 0, null);
                                                    var inst_19337 = cljs.core.nth.call(null, inst_19335, 1, null);
                                                    var state_19445__$1 = function() {
                                                      var statearr_19479 = state_19445;
                                                      statearr_19479[23] = inst_19336;
                                                      return statearr_19479;
                                                    }();
                                                    if (cljs.core.truth_(inst_19337)) {
                                                      var statearr_19480_19555 = state_19445__$1;
                                                      statearr_19480_19555[1] = 13;
                                                    } else {
                                                      var statearr_19481_19556 = state_19445__$1;
                                                      statearr_19481_19556[1] = 14;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_19446 === 42) {
                                                      var state_19445__$1 = state_19445;
                                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19445__$1, 45, dchan);
                                                    } else {
                                                      if (state_val_19446 === 11) {
                                                        var inst_19346 = state_19445[24];
                                                        var inst_19326 = state_19445[16];
                                                        var inst_19346__$1 = cljs.core.seq.call(null, inst_19326);
                                                        var state_19445__$1 = function() {
                                                          var statearr_19482 = state_19445;
                                                          statearr_19482[24] = inst_19346__$1;
                                                          return statearr_19482;
                                                        }();
                                                        if (inst_19346__$1) {
                                                          var statearr_19483_19557 = state_19445__$1;
                                                          statearr_19483_19557[1] = 16;
                                                        } else {
                                                          var statearr_19484_19558 = state_19445__$1;
                                                          statearr_19484_19558[1] = 17;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_19446 === 43) {
                                                          var state_19445__$1 = state_19445;
                                                          var statearr_19485_19559 = state_19445__$1;
                                                          statearr_19485_19559[2] = null;
                                                          statearr_19485_19559[1] = 44;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_19446 === 12) {
                                                            var inst_19372 = state_19445[2];
                                                            var state_19445__$1 = state_19445;
                                                            var statearr_19486_19560 = state_19445__$1;
                                                            statearr_19486_19560[2] = inst_19372;
                                                            statearr_19486_19560[1] = 9;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_19446 === 44) {
                                                              var inst_19438 = state_19445[2];
                                                              var state_19445__$1 = function() {
                                                                var statearr_19487 = state_19445;
                                                                statearr_19487[25] = inst_19438;
                                                                return statearr_19487;
                                                              }();
                                                              var statearr_19488_19561 = state_19445__$1;
                                                              statearr_19488_19561[2] = null;
                                                              statearr_19488_19561[1] = 2;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_19446 === 13) {
                                                                var inst_19336 = state_19445[23];
                                                                var inst_19339 = cljs.core.async.close_BANG_.call(null, inst_19336);
                                                                var state_19445__$1 = state_19445;
                                                                var statearr_19489_19562 = state_19445__$1;
                                                                statearr_19489_19562[2] = inst_19339;
                                                                statearr_19489_19562[1] = 15;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                if (state_val_19446 === 45) {
                                                                  var inst_19435 = state_19445[2];
                                                                  var state_19445__$1 = state_19445;
                                                                  var statearr_19493_19563 = state_19445__$1;
                                                                  statearr_19493_19563[2] = inst_19435;
                                                                  statearr_19493_19563[1] = 44;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                } else {
                                                                  if (state_val_19446 === 14) {
                                                                    var state_19445__$1 = state_19445;
                                                                    var statearr_19494_19564 = state_19445__$1;
                                                                    statearr_19494_19564[2] = null;
                                                                    statearr_19494_19564[1] = 15;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                  } else {
                                                                    if (state_val_19446 === 15) {
                                                                      var inst_19329 = state_19445[14];
                                                                      var inst_19328 = state_19445[15];
                                                                      var inst_19326 = state_19445[16];
                                                                      var inst_19327 = state_19445[17];
                                                                      var inst_19342 = state_19445[2];
                                                                      var inst_19343 = inst_19329 + 1;
                                                                      var tmp19490 = inst_19328;
                                                                      var tmp19491 = inst_19326;
                                                                      var tmp19492 = inst_19327;
                                                                      var inst_19326__$1 = tmp19491;
                                                                      var inst_19327__$1 = tmp19492;
                                                                      var inst_19328__$1 = tmp19490;
                                                                      var inst_19329__$1 = inst_19343;
                                                                      var state_19445__$1 = function() {
                                                                        var statearr_19495 = state_19445;
                                                                        statearr_19495[26] = inst_19342;
                                                                        statearr_19495[14] = inst_19329__$1;
                                                                        statearr_19495[15] = inst_19328__$1;
                                                                        statearr_19495[16] = inst_19326__$1;
                                                                        statearr_19495[17] = inst_19327__$1;
                                                                        return statearr_19495;
                                                                      }();
                                                                      var statearr_19496_19565 = state_19445__$1;
                                                                      statearr_19496_19565[2] = null;
                                                                      statearr_19496_19565[1] = 8;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                    } else {
                                                                      if (state_val_19446 === 16) {
                                                                        var inst_19346 = state_19445[24];
                                                                        var inst_19348 = cljs.core.chunked_seq_QMARK_.call(null, inst_19346);
                                                                        var state_19445__$1 = state_19445;
                                                                        if (inst_19348) {
                                                                          var statearr_19497_19566 = state_19445__$1;
                                                                          statearr_19497_19566[1] = 19;
                                                                        } else {
                                                                          var statearr_19498_19567 = state_19445__$1;
                                                                          statearr_19498_19567[1] = 20;
                                                                        }
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                      } else {
                                                                        if (state_val_19446 === 17) {
                                                                          var state_19445__$1 = state_19445;
                                                                          var statearr_19499_19568 = state_19445__$1;
                                                                          statearr_19499_19568[2] = null;
                                                                          statearr_19499_19568[1] = 18;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                        } else {
                                                                          if (state_val_19446 === 18) {
                                                                            var inst_19370 = state_19445[2];
                                                                            var state_19445__$1 = state_19445;
                                                                            var statearr_19500_19569 = state_19445__$1;
                                                                            statearr_19500_19569[2] = inst_19370;
                                                                            statearr_19500_19569[1] = 12;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                          } else {
                                                                            if (state_val_19446 === 19) {
                                                                              var inst_19346 = state_19445[24];
                                                                              var inst_19350 = cljs.core.chunk_first.call(null, inst_19346);
                                                                              var inst_19351 = cljs.core.chunk_rest.call(null, inst_19346);
                                                                              var inst_19352 = cljs.core.count.call(null, inst_19350);
                                                                              var inst_19326 = inst_19351;
                                                                              var inst_19327 = inst_19350;
                                                                              var inst_19328 = inst_19352;
                                                                              var inst_19329 = 0;
                                                                              var state_19445__$1 = function() {
                                                                                var statearr_19501 = state_19445;
                                                                                statearr_19501[14] = inst_19329;
                                                                                statearr_19501[15] = inst_19328;
                                                                                statearr_19501[16] = inst_19326;
                                                                                statearr_19501[17] = inst_19327;
                                                                                return statearr_19501;
                                                                              }();
                                                                              var statearr_19502_19570 = state_19445__$1;
                                                                              statearr_19502_19570[2] = null;
                                                                              statearr_19502_19570[1] = 8;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                            } else {
                                                                              if (state_val_19446 === 20) {
                                                                                var inst_19346 = state_19445[24];
                                                                                var inst_19356 = cljs.core.first.call(null, inst_19346);
                                                                                var inst_19357 = cljs.core.nth.call(null, inst_19356, 0, null);
                                                                                var inst_19358 = cljs.core.nth.call(null, inst_19356, 1, null);
                                                                                var state_19445__$1 = function() {
                                                                                  var statearr_19503 = state_19445;
                                                                                  statearr_19503[27] = inst_19357;
                                                                                  return statearr_19503;
                                                                                }();
                                                                                if (cljs.core.truth_(inst_19358)) {
                                                                                  var statearr_19504_19571 = state_19445__$1;
                                                                                  statearr_19504_19571[1] = 22;
                                                                                } else {
                                                                                  var statearr_19505_19572 = state_19445__$1;
                                                                                  statearr_19505_19572[1] = 23;
                                                                                }
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                              } else {
                                                                                if (state_val_19446 === 21) {
                                                                                  var inst_19367 = state_19445[2];
                                                                                  var state_19445__$1 = state_19445;
                                                                                  var statearr_19506_19573 = state_19445__$1;
                                                                                  statearr_19506_19573[2] = inst_19367;
                                                                                  statearr_19506_19573[1] = 18;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                } else {
                                                                                  if (state_val_19446 === 22) {
                                                                                    var inst_19357 = state_19445[27];
                                                                                    var inst_19360 = cljs.core.async.close_BANG_.call(null, inst_19357);
                                                                                    var state_19445__$1 = state_19445;
                                                                                    var statearr_19507_19574 = state_19445__$1;
                                                                                    statearr_19507_19574[2] = inst_19360;
                                                                                    statearr_19507_19574[1] = 24;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                  } else {
                                                                                    if (state_val_19446 === 23) {
                                                                                      var state_19445__$1 = state_19445;
                                                                                      var statearr_19508_19575 = state_19445__$1;
                                                                                      statearr_19508_19575[2] = null;
                                                                                      statearr_19508_19575[1] = 24;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                    } else {
                                                                                      if (state_val_19446 === 24) {
                                                                                        var inst_19346 = state_19445[24];
                                                                                        var inst_19363 = state_19445[2];
                                                                                        var inst_19364 = cljs.core.next.call(null, inst_19346);
                                                                                        var inst_19326 = inst_19364;
                                                                                        var inst_19327 = null;
                                                                                        var inst_19328 = 0;
                                                                                        var inst_19329 = 0;
                                                                                        var state_19445__$1 = function() {
                                                                                          var statearr_19509 = state_19445;
                                                                                          statearr_19509[28] = inst_19363;
                                                                                          statearr_19509[14] = inst_19329;
                                                                                          statearr_19509[15] = inst_19328;
                                                                                          statearr_19509[16] = inst_19326;
                                                                                          statearr_19509[17] = inst_19327;
                                                                                          return statearr_19509;
                                                                                        }();
                                                                                        var statearr_19510_19576 = state_19445__$1;
                                                                                        statearr_19510_19576[2] = null;
                                                                                        statearr_19510_19576[1] = 8;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                      } else {
                                                                                        if (state_val_19446 === 25) {
                                                                                          var inst_19387 = state_19445[7];
                                                                                          var inst_19388 = state_19445[9];
                                                                                          var inst_19390 = inst_19388 < inst_19387;
                                                                                          var inst_19391 = inst_19390;
                                                                                          var state_19445__$1 = state_19445;
                                                                                          if (cljs.core.truth_(inst_19391)) {
                                                                                            var statearr_19511_19577 = state_19445__$1;
                                                                                            statearr_19511_19577[1] = 27;
                                                                                          } else {
                                                                                            var statearr_19512_19578 = state_19445__$1;
                                                                                            statearr_19512_19578[1] = 28;
                                                                                          }
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                        } else {
                                                                                          if (state_val_19446 === 26) {
                                                                                            var inst_19377 = state_19445[19];
                                                                                            var inst_19431 = state_19445[2];
                                                                                            var inst_19432 = cljs.core.seq.call(null, inst_19377);
                                                                                            var state_19445__$1 = function() {
                                                                                              var statearr_19513 = state_19445;
                                                                                              statearr_19513[29] = inst_19431;
                                                                                              return statearr_19513;
                                                                                            }();
                                                                                            if (inst_19432) {
                                                                                              var statearr_19514_19579 = state_19445__$1;
                                                                                              statearr_19514_19579[1] = 42;
                                                                                            } else {
                                                                                              var statearr_19515_19580 = state_19445__$1;
                                                                                              statearr_19515_19580[1] = 43;
                                                                                            }
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                          } else {
                                                                                            if (state_val_19446 === 27) {
                                                                                              var inst_19393 = state_19445[30];
                                                                                              var inst_19386 = state_19445[8];
                                                                                              var inst_19388 = state_19445[9];
                                                                                              var inst_19317 = state_19445[13];
                                                                                              var inst_19393__$1 = cljs.core._nth.call(null, inst_19386, inst_19388);
                                                                                              var inst_19394 = cljs.core.async.put_BANG_.call(null, inst_19393__$1, inst_19317, done);
                                                                                              var state_19445__$1 = function() {
                                                                                                var statearr_19516 = state_19445;
                                                                                                statearr_19516[30] = inst_19393__$1;
                                                                                                return statearr_19516;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_19394)) {
                                                                                                var statearr_19517_19581 = state_19445__$1;
                                                                                                statearr_19517_19581[1] = 30;
                                                                                              } else {
                                                                                                var statearr_19518_19582 = state_19445__$1;
                                                                                                statearr_19518_19582[1] = 31;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                            } else {
                                                                                              if (state_val_19446 === 28) {
                                                                                                var inst_19385 = state_19445[10];
                                                                                                var inst_19404 = state_19445[12];
                                                                                                var inst_19404__$1 = cljs.core.seq.call(null, inst_19385);
                                                                                                var state_19445__$1 = function() {
                                                                                                  var statearr_19519 = state_19445;
                                                                                                  statearr_19519[12] = inst_19404__$1;
                                                                                                  return statearr_19519;
                                                                                                }();
                                                                                                if (inst_19404__$1) {
                                                                                                  var statearr_19520_19583 = state_19445__$1;
                                                                                                  statearr_19520_19583[1] = 33;
                                                                                                } else {
                                                                                                  var statearr_19521_19584 = state_19445__$1;
                                                                                                  statearr_19521_19584[1] = 34;
                                                                                                }
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                              } else {
                                                                                                if (state_val_19446 === 29) {
                                                                                                  var inst_19429 = state_19445[2];
                                                                                                  var state_19445__$1 = state_19445;
                                                                                                  var statearr_19522_19585 = state_19445__$1;
                                                                                                  statearr_19522_19585[2] = inst_19429;
                                                                                                  statearr_19522_19585[1] = 26;
                                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                } else {
                                                                                                  if (state_val_19446 === 30) {
                                                                                                    var state_19445__$1 = state_19445;
                                                                                                    var statearr_19523_19586 = state_19445__$1;
                                                                                                    statearr_19523_19586[2] = null;
                                                                                                    statearr_19523_19586[1] = 32;
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                  } else {
                                                                                                    if (state_val_19446 === 31) {
                                                                                                      var inst_19393 = state_19445[30];
                                                                                                      var inst_19397 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                                      var inst_19398 = cljs.core.async.untap_STAR_.call(null, m, inst_19393);
                                                                                                      var state_19445__$1 = function() {
                                                                                                        var statearr_19524 = state_19445;
                                                                                                        statearr_19524[31] = inst_19397;
                                                                                                        return statearr_19524;
                                                                                                      }();
                                                                                                      var statearr_19525_19587 = state_19445__$1;
                                                                                                      statearr_19525_19587[2] = inst_19398;
                                                                                                      statearr_19525_19587[1] = 32;
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7022__auto___19533, cs, m, dchan, dctr, done);
        return function(switch__6951__auto__, c__7022__auto___19533, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6952__auto__ = null;
            var state_machine__6952__auto____0 = function() {
              var statearr_19529 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_19529[0] = state_machine__6952__auto__;
              statearr_19529[1] = 1;
              return statearr_19529;
            };
            var state_machine__6952__auto____1 = function(state_19445) {
              while (true) {
                var ret_value__6953__auto__ = function() {
                  try {
                    while (true) {
                      var result__6954__auto__ = switch__6951__auto__.call(null, state_19445);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6954__auto__;
                      }
                      break;
                    }
                  } catch (e19530) {
                    if (e19530 instanceof Object) {
                      var ex__6955__auto__ = e19530;
                      var statearr_19531_19588 = state_19445;
                      statearr_19531_19588[5] = ex__6955__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19445);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e19530;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__19589 = state_19445;
                  state_19445 = G__19589;
                  continue;
                } else {
                  return ret_value__6953__auto__;
                }
                break;
              }
            };
            state_machine__6952__auto__ = function(state_19445) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6952__auto____0.call(this);
                case 1:
                  return state_machine__6952__auto____1.call(this, state_19445);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
            state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
            return state_machine__6952__auto__;
          }();
        }(switch__6951__auto__, c__7022__auto___19533, cs, m, dchan, dctr, done);
      }();
      var state__7024__auto__ = function() {
        var statearr_19532 = f__7023__auto__.call(null);
        statearr_19532[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto___19533;
        return statearr_19532;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
    };
  }(c__7022__auto___19533, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj19591 = {};
  return obj19591;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t19711 !== "undefined") {
    } else {
      cljs.core.async.t19711 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta19712) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta19712 = meta19712;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t19711.cljs$lang$type = true;
      cljs.core.async.t19711.cljs$lang$ctorStr = "cljs.core.async/t19711";
      cljs.core.async.t19711.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
          return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t19711");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t19711.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t19711.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t19711.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t19711.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t19711.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t19711.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("mode must be one of: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.solo_modes)) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null)))));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t19711.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t19711.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t19711.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_19713) {
          var self__ = this;
          var _19713__$1 = this;
          return self__.meta19712;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t19711.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_19713, meta19712__$1) {
          var self__ = this;
          var _19713__$1 = this;
          return new cljs.core.async.t19711(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta19712__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t19711 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t19711(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta19712) {
          return new cljs.core.async.t19711(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta19712);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t19711(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null);
  }();
  var c__7022__auto___19830 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto___19830, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__7023__auto__ = function() {
        var switch__6951__auto__ = function(c__7022__auto___19830, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_19783) {
            var state_val_19784 = state_19783[1];
            if (state_val_19784 === 1) {
              var inst_19717 = state_19783[7];
              var inst_19717__$1 = calc_state.call(null);
              var inst_19718 = cljs.core.seq_QMARK_.call(null, inst_19717__$1);
              var state_19783__$1 = function() {
                var statearr_19785 = state_19783;
                statearr_19785[7] = inst_19717__$1;
                return statearr_19785;
              }();
              if (inst_19718) {
                var statearr_19786_19831 = state_19783__$1;
                statearr_19786_19831[1] = 2;
              } else {
                var statearr_19787_19832 = state_19783__$1;
                statearr_19787_19832[1] = 3;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_19784 === 2) {
                var inst_19717 = state_19783[7];
                var inst_19720 = cljs.core.apply.call(null, cljs.core.hash_map, inst_19717);
                var state_19783__$1 = state_19783;
                var statearr_19788_19833 = state_19783__$1;
                statearr_19788_19833[2] = inst_19720;
                statearr_19788_19833[1] = 4;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_19784 === 3) {
                  var inst_19717 = state_19783[7];
                  var state_19783__$1 = state_19783;
                  var statearr_19789_19834 = state_19783__$1;
                  statearr_19789_19834[2] = inst_19717;
                  statearr_19789_19834[1] = 4;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_19784 === 4) {
                    var inst_19717 = state_19783[7];
                    var inst_19723 = state_19783[2];
                    var inst_19724 = cljs.core.get.call(null, inst_19723, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                    var inst_19725 = cljs.core.get.call(null, inst_19723, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                    var inst_19726 = cljs.core.get.call(null, inst_19723, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                    var inst_19727 = inst_19717;
                    var state_19783__$1 = function() {
                      var statearr_19790 = state_19783;
                      statearr_19790[8] = inst_19727;
                      statearr_19790[9] = inst_19726;
                      statearr_19790[10] = inst_19725;
                      statearr_19790[11] = inst_19724;
                      return statearr_19790;
                    }();
                    var statearr_19791_19835 = state_19783__$1;
                    statearr_19791_19835[2] = null;
                    statearr_19791_19835[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_19784 === 5) {
                      var inst_19727 = state_19783[8];
                      var inst_19730 = cljs.core.seq_QMARK_.call(null, inst_19727);
                      var state_19783__$1 = state_19783;
                      if (inst_19730) {
                        var statearr_19792_19836 = state_19783__$1;
                        statearr_19792_19836[1] = 7;
                      } else {
                        var statearr_19793_19837 = state_19783__$1;
                        statearr_19793_19837[1] = 8;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_19784 === 6) {
                        var inst_19781 = state_19783[2];
                        var state_19783__$1 = state_19783;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19783__$1, inst_19781);
                      } else {
                        if (state_val_19784 === 7) {
                          var inst_19727 = state_19783[8];
                          var inst_19732 = cljs.core.apply.call(null, cljs.core.hash_map, inst_19727);
                          var state_19783__$1 = state_19783;
                          var statearr_19794_19838 = state_19783__$1;
                          statearr_19794_19838[2] = inst_19732;
                          statearr_19794_19838[1] = 9;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_19784 === 8) {
                            var inst_19727 = state_19783[8];
                            var state_19783__$1 = state_19783;
                            var statearr_19795_19839 = state_19783__$1;
                            statearr_19795_19839[2] = inst_19727;
                            statearr_19795_19839[1] = 9;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_19784 === 9) {
                              var inst_19735 = state_19783[12];
                              var inst_19735__$1 = state_19783[2];
                              var inst_19736 = cljs.core.get.call(null, inst_19735__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                              var inst_19737 = cljs.core.get.call(null, inst_19735__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                              var inst_19738 = cljs.core.get.call(null, inst_19735__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                              var state_19783__$1 = function() {
                                var statearr_19796 = state_19783;
                                statearr_19796[13] = inst_19738;
                                statearr_19796[14] = inst_19737;
                                statearr_19796[12] = inst_19735__$1;
                                return statearr_19796;
                              }();
                              return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_19783__$1, 10, inst_19736);
                            } else {
                              if (state_val_19784 === 10) {
                                var inst_19742 = state_19783[15];
                                var inst_19743 = state_19783[16];
                                var inst_19741 = state_19783[2];
                                var inst_19742__$1 = cljs.core.nth.call(null, inst_19741, 0, null);
                                var inst_19743__$1 = cljs.core.nth.call(null, inst_19741, 1, null);
                                var inst_19744 = inst_19742__$1 == null;
                                var inst_19745 = cljs.core._EQ_.call(null, inst_19743__$1, change);
                                var inst_19746 = inst_19744 || inst_19745;
                                var state_19783__$1 = function() {
                                  var statearr_19797 = state_19783;
                                  statearr_19797[15] = inst_19742__$1;
                                  statearr_19797[16] = inst_19743__$1;
                                  return statearr_19797;
                                }();
                                if (cljs.core.truth_(inst_19746)) {
                                  var statearr_19798_19840 = state_19783__$1;
                                  statearr_19798_19840[1] = 11;
                                } else {
                                  var statearr_19799_19841 = state_19783__$1;
                                  statearr_19799_19841[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_19784 === 11) {
                                  var inst_19742 = state_19783[15];
                                  var inst_19748 = inst_19742 == null;
                                  var state_19783__$1 = state_19783;
                                  if (cljs.core.truth_(inst_19748)) {
                                    var statearr_19800_19842 = state_19783__$1;
                                    statearr_19800_19842[1] = 14;
                                  } else {
                                    var statearr_19801_19843 = state_19783__$1;
                                    statearr_19801_19843[1] = 15;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_19784 === 12) {
                                    var inst_19743 = state_19783[16];
                                    var inst_19738 = state_19783[13];
                                    var inst_19757 = state_19783[17];
                                    var inst_19757__$1 = inst_19738.call(null, inst_19743);
                                    var state_19783__$1 = function() {
                                      var statearr_19802 = state_19783;
                                      statearr_19802[17] = inst_19757__$1;
                                      return statearr_19802;
                                    }();
                                    if (cljs.core.truth_(inst_19757__$1)) {
                                      var statearr_19803_19844 = state_19783__$1;
                                      statearr_19803_19844[1] = 17;
                                    } else {
                                      var statearr_19804_19845 = state_19783__$1;
                                      statearr_19804_19845[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_19784 === 13) {
                                      var inst_19779 = state_19783[2];
                                      var state_19783__$1 = state_19783;
                                      var statearr_19805_19846 = state_19783__$1;
                                      statearr_19805_19846[2] = inst_19779;
                                      statearr_19805_19846[1] = 6;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_19784 === 14) {
                                        var inst_19743 = state_19783[16];
                                        var inst_19750 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_19743);
                                        var state_19783__$1 = state_19783;
                                        var statearr_19806_19847 = state_19783__$1;
                                        statearr_19806_19847[2] = inst_19750;
                                        statearr_19806_19847[1] = 16;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_19784 === 15) {
                                          var state_19783__$1 = state_19783;
                                          var statearr_19807_19848 = state_19783__$1;
                                          statearr_19807_19848[2] = null;
                                          statearr_19807_19848[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_19784 === 16) {
                                            var inst_19753 = state_19783[2];
                                            var inst_19754 = calc_state.call(null);
                                            var inst_19727 = inst_19754;
                                            var state_19783__$1 = function() {
                                              var statearr_19808 = state_19783;
                                              statearr_19808[18] = inst_19753;
                                              statearr_19808[8] = inst_19727;
                                              return statearr_19808;
                                            }();
                                            var statearr_19809_19849 = state_19783__$1;
                                            statearr_19809_19849[2] = null;
                                            statearr_19809_19849[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_19784 === 17) {
                                              var inst_19757 = state_19783[17];
                                              var state_19783__$1 = state_19783;
                                              var statearr_19810_19850 = state_19783__$1;
                                              statearr_19810_19850[2] = inst_19757;
                                              statearr_19810_19850[1] = 19;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_19784 === 18) {
                                                var inst_19743 = state_19783[16];
                                                var inst_19738 = state_19783[13];
                                                var inst_19737 = state_19783[14];
                                                var inst_19760 = cljs.core.empty_QMARK_.call(null, inst_19738);
                                                var inst_19761 = inst_19737.call(null, inst_19743);
                                                var inst_19762 = cljs.core.not.call(null, inst_19761);
                                                var inst_19763 = inst_19760 && inst_19762;
                                                var state_19783__$1 = state_19783;
                                                var statearr_19811_19851 = state_19783__$1;
                                                statearr_19811_19851[2] = inst_19763;
                                                statearr_19811_19851[1] = 19;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_19784 === 19) {
                                                  var inst_19765 = state_19783[2];
                                                  var state_19783__$1 = state_19783;
                                                  if (cljs.core.truth_(inst_19765)) {
                                                    var statearr_19812_19852 = state_19783__$1;
                                                    statearr_19812_19852[1] = 20;
                                                  } else {
                                                    var statearr_19813_19853 = state_19783__$1;
                                                    statearr_19813_19853[1] = 21;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_19784 === 20) {
                                                    var inst_19742 = state_19783[15];
                                                    var state_19783__$1 = state_19783;
                                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19783__$1, 23, out, inst_19742);
                                                  } else {
                                                    if (state_val_19784 === 21) {
                                                      var inst_19735 = state_19783[12];
                                                      var inst_19727 = inst_19735;
                                                      var state_19783__$1 = function() {
                                                        var statearr_19814 = state_19783;
                                                        statearr_19814[8] = inst_19727;
                                                        return statearr_19814;
                                                      }();
                                                      var statearr_19815_19854 = state_19783__$1;
                                                      statearr_19815_19854[2] = null;
                                                      statearr_19815_19854[1] = 5;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_19784 === 22) {
                                                        var inst_19777 = state_19783[2];
                                                        var state_19783__$1 = state_19783;
                                                        var statearr_19816_19855 = state_19783__$1;
                                                        statearr_19816_19855[2] = inst_19777;
                                                        statearr_19816_19855[1] = 13;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_19784 === 23) {
                                                          var inst_19768 = state_19783[2];
                                                          var state_19783__$1 = state_19783;
                                                          if (cljs.core.truth_(inst_19768)) {
                                                            var statearr_19817_19856 = state_19783__$1;
                                                            statearr_19817_19856[1] = 24;
                                                          } else {
                                                            var statearr_19818_19857 = state_19783__$1;
                                                            statearr_19818_19857[1] = 25;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_19784 === 24) {
                                                            var inst_19735 = state_19783[12];
                                                            var inst_19727 = inst_19735;
                                                            var state_19783__$1 = function() {
                                                              var statearr_19819 = state_19783;
                                                              statearr_19819[8] = inst_19727;
                                                              return statearr_19819;
                                                            }();
                                                            var statearr_19820_19858 = state_19783__$1;
                                                            statearr_19820_19858[2] = null;
                                                            statearr_19820_19858[1] = 5;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_19784 === 25) {
                                                              var state_19783__$1 = state_19783;
                                                              var statearr_19821_19859 = state_19783__$1;
                                                              statearr_19821_19859[2] = null;
                                                              statearr_19821_19859[1] = 26;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_19784 === 26) {
                                                                var inst_19773 = state_19783[2];
                                                                var state_19783__$1 = state_19783;
                                                                var statearr_19822_19860 = state_19783__$1;
                                                                statearr_19822_19860[2] = inst_19773;
                                                                statearr_19822_19860[1] = 22;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7022__auto___19830, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6951__auto__, c__7022__auto___19830, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6952__auto__ = null;
            var state_machine__6952__auto____0 = function() {
              var statearr_19826 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_19826[0] = state_machine__6952__auto__;
              statearr_19826[1] = 1;
              return statearr_19826;
            };
            var state_machine__6952__auto____1 = function(state_19783) {
              while (true) {
                var ret_value__6953__auto__ = function() {
                  try {
                    while (true) {
                      var result__6954__auto__ = switch__6951__auto__.call(null, state_19783);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6954__auto__;
                      }
                      break;
                    }
                  } catch (e19827) {
                    if (e19827 instanceof Object) {
                      var ex__6955__auto__ = e19827;
                      var statearr_19828_19861 = state_19783;
                      statearr_19828_19861[5] = ex__6955__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19783);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e19827;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__19862 = state_19783;
                  state_19783 = G__19862;
                  continue;
                } else {
                  return ret_value__6953__auto__;
                }
                break;
              }
            };
            state_machine__6952__auto__ = function(state_19783) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6952__auto____0.call(this);
                case 1:
                  return state_machine__6952__auto____1.call(this, state_19783);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
            state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
            return state_machine__6952__auto__;
          }();
        }(switch__6951__auto__, c__7022__auto___19830, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__7024__auto__ = function() {
        var statearr_19829 = f__7023__auto__.call(null);
        statearr_19829[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto___19830;
        return statearr_19829;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
    };
  }(c__7022__auto___19830, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj19864 = {};
  return obj19864;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3529__auto__ = p;
    if (and__3529__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4168__auto__ = p == null ? null : p;
    return function() {
      var or__3541__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3529__auto__ = p;
    if (and__3529__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4168__auto__ = p == null ? null : p;
    return function() {
      var or__3541__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3529__auto__ = p;
      if (and__3529__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4168__auto__ = p == null ? null : p;
      return function() {
        var or__3541__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3529__auto__ = p;
      if (and__3529__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4168__auto__ = p == null ? null : p;
      return function() {
        var or__3541__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3541__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3541__auto__, mults) {
            return function(p1__19865_SHARP_) {
              if (cljs.core.truth_(p1__19865_SHARP_.call(null, topic))) {
                return p1__19865_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__19865_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3541__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t19988 !== "undefined") {
      } else {
        cljs.core.async.t19988 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta19989) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta19989 = meta19989;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t19988.cljs$lang$type = true;
        cljs.core.async.t19988.cljs$lang$ctorStr = "cljs.core.async/t19988";
        cljs.core.async.t19988.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
            return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t19988");
          };
        }(mults, ensure_mult);
        cljs.core.async.t19988.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t19988.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t19988.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t19988.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t19988.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t19988.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t19988.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t19988.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_19990) {
            var self__ = this;
            var _19990__$1 = this;
            return self__.meta19989;
          };
        }(mults, ensure_mult);
        cljs.core.async.t19988.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_19990, meta19989__$1) {
            var self__ = this;
            var _19990__$1 = this;
            return new cljs.core.async.t19988(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta19989__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t19988 = function(mults, ensure_mult) {
          return function __GT_t19988(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta19989) {
            return new cljs.core.async.t19988(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta19989);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t19988(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__7022__auto___20110 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto___20110, mults, ensure_mult, p) {
      return function() {
        var f__7023__auto__ = function() {
          var switch__6951__auto__ = function(c__7022__auto___20110, mults, ensure_mult, p) {
            return function(state_20062) {
              var state_val_20063 = state_20062[1];
              if (state_val_20063 === 1) {
                var state_20062__$1 = state_20062;
                var statearr_20064_20111 = state_20062__$1;
                statearr_20064_20111[2] = null;
                statearr_20064_20111[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_20063 === 2) {
                  var state_20062__$1 = state_20062;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20062__$1, 4, ch);
                } else {
                  if (state_val_20063 === 3) {
                    var inst_20060 = state_20062[2];
                    var state_20062__$1 = state_20062;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20062__$1, inst_20060);
                  } else {
                    if (state_val_20063 === 4) {
                      var inst_19993 = state_20062[7];
                      var inst_19993__$1 = state_20062[2];
                      var inst_19994 = inst_19993__$1 == null;
                      var state_20062__$1 = function() {
                        var statearr_20065 = state_20062;
                        statearr_20065[7] = inst_19993__$1;
                        return statearr_20065;
                      }();
                      if (cljs.core.truth_(inst_19994)) {
                        var statearr_20066_20112 = state_20062__$1;
                        statearr_20066_20112[1] = 5;
                      } else {
                        var statearr_20067_20113 = state_20062__$1;
                        statearr_20067_20113[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_20063 === 5) {
                        var inst_20000 = cljs.core.deref.call(null, mults);
                        var inst_20001 = cljs.core.vals.call(null, inst_20000);
                        var inst_20002 = cljs.core.seq.call(null, inst_20001);
                        var inst_20003 = inst_20002;
                        var inst_20004 = null;
                        var inst_20005 = 0;
                        var inst_20006 = 0;
                        var state_20062__$1 = function() {
                          var statearr_20068 = state_20062;
                          statearr_20068[8] = inst_20003;
                          statearr_20068[9] = inst_20004;
                          statearr_20068[10] = inst_20005;
                          statearr_20068[11] = inst_20006;
                          return statearr_20068;
                        }();
                        var statearr_20069_20114 = state_20062__$1;
                        statearr_20069_20114[2] = null;
                        statearr_20069_20114[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_20063 === 6) {
                          var inst_20041 = state_20062[12];
                          var inst_20043 = state_20062[13];
                          var inst_19993 = state_20062[7];
                          var inst_20041__$1 = topic_fn.call(null, inst_19993);
                          var inst_20042 = cljs.core.deref.call(null, mults);
                          var inst_20043__$1 = cljs.core.get.call(null, inst_20042, inst_20041__$1);
                          var state_20062__$1 = function() {
                            var statearr_20070 = state_20062;
                            statearr_20070[12] = inst_20041__$1;
                            statearr_20070[13] = inst_20043__$1;
                            return statearr_20070;
                          }();
                          if (cljs.core.truth_(inst_20043__$1)) {
                            var statearr_20071_20115 = state_20062__$1;
                            statearr_20071_20115[1] = 19;
                          } else {
                            var statearr_20072_20116 = state_20062__$1;
                            statearr_20072_20116[1] = 20;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_20063 === 7) {
                            var inst_20058 = state_20062[2];
                            var state_20062__$1 = state_20062;
                            var statearr_20073_20117 = state_20062__$1;
                            statearr_20073_20117[2] = inst_20058;
                            statearr_20073_20117[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_20063 === 8) {
                              var inst_20005 = state_20062[10];
                              var inst_20006 = state_20062[11];
                              var inst_20008 = inst_20006 < inst_20005;
                              var inst_20009 = inst_20008;
                              var state_20062__$1 = state_20062;
                              if (cljs.core.truth_(inst_20009)) {
                                var statearr_20077_20118 = state_20062__$1;
                                statearr_20077_20118[1] = 10;
                              } else {
                                var statearr_20078_20119 = state_20062__$1;
                                statearr_20078_20119[1] = 11;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_20063 === 9) {
                                var inst_20039 = state_20062[2];
                                var state_20062__$1 = state_20062;
                                var statearr_20079_20120 = state_20062__$1;
                                statearr_20079_20120[2] = inst_20039;
                                statearr_20079_20120[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_20063 === 10) {
                                  var inst_20003 = state_20062[8];
                                  var inst_20004 = state_20062[9];
                                  var inst_20005 = state_20062[10];
                                  var inst_20006 = state_20062[11];
                                  var inst_20011 = cljs.core._nth.call(null, inst_20004, inst_20006);
                                  var inst_20012 = cljs.core.async.muxch_STAR_.call(null, inst_20011);
                                  var inst_20013 = cljs.core.async.close_BANG_.call(null, inst_20012);
                                  var inst_20014 = inst_20006 + 1;
                                  var tmp20074 = inst_20003;
                                  var tmp20075 = inst_20004;
                                  var tmp20076 = inst_20005;
                                  var inst_20003__$1 = tmp20074;
                                  var inst_20004__$1 = tmp20075;
                                  var inst_20005__$1 = tmp20076;
                                  var inst_20006__$1 = inst_20014;
                                  var state_20062__$1 = function() {
                                    var statearr_20080 = state_20062;
                                    statearr_20080[14] = inst_20013;
                                    statearr_20080[8] = inst_20003__$1;
                                    statearr_20080[9] = inst_20004__$1;
                                    statearr_20080[10] = inst_20005__$1;
                                    statearr_20080[11] = inst_20006__$1;
                                    return statearr_20080;
                                  }();
                                  var statearr_20081_20121 = state_20062__$1;
                                  statearr_20081_20121[2] = null;
                                  statearr_20081_20121[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_20063 === 11) {
                                    var inst_20003 = state_20062[8];
                                    var inst_20017 = state_20062[15];
                                    var inst_20017__$1 = cljs.core.seq.call(null, inst_20003);
                                    var state_20062__$1 = function() {
                                      var statearr_20082 = state_20062;
                                      statearr_20082[15] = inst_20017__$1;
                                      return statearr_20082;
                                    }();
                                    if (inst_20017__$1) {
                                      var statearr_20083_20122 = state_20062__$1;
                                      statearr_20083_20122[1] = 13;
                                    } else {
                                      var statearr_20084_20123 = state_20062__$1;
                                      statearr_20084_20123[1] = 14;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_20063 === 12) {
                                      var inst_20037 = state_20062[2];
                                      var state_20062__$1 = state_20062;
                                      var statearr_20085_20124 = state_20062__$1;
                                      statearr_20085_20124[2] = inst_20037;
                                      statearr_20085_20124[1] = 9;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_20063 === 13) {
                                        var inst_20017 = state_20062[15];
                                        var inst_20019 = cljs.core.chunked_seq_QMARK_.call(null, inst_20017);
                                        var state_20062__$1 = state_20062;
                                        if (inst_20019) {
                                          var statearr_20086_20125 = state_20062__$1;
                                          statearr_20086_20125[1] = 16;
                                        } else {
                                          var statearr_20087_20126 = state_20062__$1;
                                          statearr_20087_20126[1] = 17;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_20063 === 14) {
                                          var state_20062__$1 = state_20062;
                                          var statearr_20088_20127 = state_20062__$1;
                                          statearr_20088_20127[2] = null;
                                          statearr_20088_20127[1] = 15;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_20063 === 15) {
                                            var inst_20035 = state_20062[2];
                                            var state_20062__$1 = state_20062;
                                            var statearr_20089_20128 = state_20062__$1;
                                            statearr_20089_20128[2] = inst_20035;
                                            statearr_20089_20128[1] = 12;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_20063 === 16) {
                                              var inst_20017 = state_20062[15];
                                              var inst_20021 = cljs.core.chunk_first.call(null, inst_20017);
                                              var inst_20022 = cljs.core.chunk_rest.call(null, inst_20017);
                                              var inst_20023 = cljs.core.count.call(null, inst_20021);
                                              var inst_20003 = inst_20022;
                                              var inst_20004 = inst_20021;
                                              var inst_20005 = inst_20023;
                                              var inst_20006 = 0;
                                              var state_20062__$1 = function() {
                                                var statearr_20090 = state_20062;
                                                statearr_20090[8] = inst_20003;
                                                statearr_20090[9] = inst_20004;
                                                statearr_20090[10] = inst_20005;
                                                statearr_20090[11] = inst_20006;
                                                return statearr_20090;
                                              }();
                                              var statearr_20091_20129 = state_20062__$1;
                                              statearr_20091_20129[2] = null;
                                              statearr_20091_20129[1] = 8;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_20063 === 17) {
                                                var inst_20017 = state_20062[15];
                                                var inst_20026 = cljs.core.first.call(null, inst_20017);
                                                var inst_20027 = cljs.core.async.muxch_STAR_.call(null, inst_20026);
                                                var inst_20028 = cljs.core.async.close_BANG_.call(null, inst_20027);
                                                var inst_20029 = cljs.core.next.call(null, inst_20017);
                                                var inst_20003 = inst_20029;
                                                var inst_20004 = null;
                                                var inst_20005 = 0;
                                                var inst_20006 = 0;
                                                var state_20062__$1 = function() {
                                                  var statearr_20092 = state_20062;
                                                  statearr_20092[8] = inst_20003;
                                                  statearr_20092[9] = inst_20004;
                                                  statearr_20092[10] = inst_20005;
                                                  statearr_20092[11] = inst_20006;
                                                  statearr_20092[16] = inst_20028;
                                                  return statearr_20092;
                                                }();
                                                var statearr_20093_20130 = state_20062__$1;
                                                statearr_20093_20130[2] = null;
                                                statearr_20093_20130[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_20063 === 18) {
                                                  var inst_20032 = state_20062[2];
                                                  var state_20062__$1 = state_20062;
                                                  var statearr_20094_20131 = state_20062__$1;
                                                  statearr_20094_20131[2] = inst_20032;
                                                  statearr_20094_20131[1] = 15;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_20063 === 19) {
                                                    var inst_20043 = state_20062[13];
                                                    var inst_19993 = state_20062[7];
                                                    var inst_20045 = cljs.core.async.muxch_STAR_.call(null, inst_20043);
                                                    var state_20062__$1 = state_20062;
                                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20062__$1, 22, inst_20045, inst_19993);
                                                  } else {
                                                    if (state_val_20063 === 20) {
                                                      var state_20062__$1 = state_20062;
                                                      var statearr_20095_20132 = state_20062__$1;
                                                      statearr_20095_20132[2] = null;
                                                      statearr_20095_20132[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_20063 === 21) {
                                                        var inst_20055 = state_20062[2];
                                                        var state_20062__$1 = function() {
                                                          var statearr_20096 = state_20062;
                                                          statearr_20096[17] = inst_20055;
                                                          return statearr_20096;
                                                        }();
                                                        var statearr_20097_20133 = state_20062__$1;
                                                        statearr_20097_20133[2] = null;
                                                        statearr_20097_20133[1] = 2;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_20063 === 22) {
                                                          var inst_20047 = state_20062[2];
                                                          var state_20062__$1 = state_20062;
                                                          if (cljs.core.truth_(inst_20047)) {
                                                            var statearr_20098_20134 = state_20062__$1;
                                                            statearr_20098_20134[1] = 23;
                                                          } else {
                                                            var statearr_20099_20135 = state_20062__$1;
                                                            statearr_20099_20135[1] = 24;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_20063 === 23) {
                                                            var state_20062__$1 = state_20062;
                                                            var statearr_20100_20136 = state_20062__$1;
                                                            statearr_20100_20136[2] = null;
                                                            statearr_20100_20136[1] = 25;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_20063 === 24) {
                                                              var inst_20041 = state_20062[12];
                                                              var inst_20050 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_20041);
                                                              var state_20062__$1 = state_20062;
                                                              var statearr_20101_20137 = state_20062__$1;
                                                              statearr_20101_20137[2] = inst_20050;
                                                              statearr_20101_20137[1] = 25;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_20063 === 25) {
                                                                var inst_20052 = state_20062[2];
                                                                var state_20062__$1 = state_20062;
                                                                var statearr_20102_20138 = state_20062__$1;
                                                                statearr_20102_20138[2] = inst_20052;
                                                                statearr_20102_20138[1] = 21;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__7022__auto___20110, mults, ensure_mult, p);
          return function(switch__6951__auto__, c__7022__auto___20110, mults, ensure_mult, p) {
            return function() {
              var state_machine__6952__auto__ = null;
              var state_machine__6952__auto____0 = function() {
                var statearr_20106 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_20106[0] = state_machine__6952__auto__;
                statearr_20106[1] = 1;
                return statearr_20106;
              };
              var state_machine__6952__auto____1 = function(state_20062) {
                while (true) {
                  var ret_value__6953__auto__ = function() {
                    try {
                      while (true) {
                        var result__6954__auto__ = switch__6951__auto__.call(null, state_20062);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6954__auto__;
                        }
                        break;
                      }
                    } catch (e20107) {
                      if (e20107 instanceof Object) {
                        var ex__6955__auto__ = e20107;
                        var statearr_20108_20139 = state_20062;
                        statearr_20108_20139[5] = ex__6955__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20062);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e20107;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__20140 = state_20062;
                    state_20062 = G__20140;
                    continue;
                  } else {
                    return ret_value__6953__auto__;
                  }
                  break;
                }
              };
              state_machine__6952__auto__ = function(state_20062) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6952__auto____0.call(this);
                  case 1:
                    return state_machine__6952__auto____1.call(this, state_20062);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
              return state_machine__6952__auto__;
            }();
          }(switch__6951__auto__, c__7022__auto___20110, mults, ensure_mult, p);
        }();
        var state__7024__auto__ = function() {
          var statearr_20109 = f__7023__auto__.call(null);
          statearr_20109[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto___20110;
          return statearr_20109;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
      };
    }(c__7022__auto___20110, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__7022__auto___20277 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto___20277, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__7023__auto__ = function() {
          var switch__6951__auto__ = function(c__7022__auto___20277, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_20247) {
              var state_val_20248 = state_20247[1];
              if (state_val_20248 === 1) {
                var state_20247__$1 = state_20247;
                var statearr_20249_20278 = state_20247__$1;
                statearr_20249_20278[2] = null;
                statearr_20249_20278[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_20248 === 2) {
                  var inst_20210 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                  var inst_20211 = 0;
                  var state_20247__$1 = function() {
                    var statearr_20250 = state_20247;
                    statearr_20250[7] = inst_20211;
                    statearr_20250[8] = inst_20210;
                    return statearr_20250;
                  }();
                  var statearr_20251_20279 = state_20247__$1;
                  statearr_20251_20279[2] = null;
                  statearr_20251_20279[1] = 4;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_20248 === 3) {
                    var inst_20245 = state_20247[2];
                    var state_20247__$1 = state_20247;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20247__$1, inst_20245);
                  } else {
                    if (state_val_20248 === 4) {
                      var inst_20211 = state_20247[7];
                      var inst_20213 = inst_20211 < cnt;
                      var state_20247__$1 = state_20247;
                      if (cljs.core.truth_(inst_20213)) {
                        var statearr_20252_20280 = state_20247__$1;
                        statearr_20252_20280[1] = 6;
                      } else {
                        var statearr_20253_20281 = state_20247__$1;
                        statearr_20253_20281[1] = 7;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_20248 === 5) {
                        var inst_20231 = state_20247[2];
                        var state_20247__$1 = function() {
                          var statearr_20254 = state_20247;
                          statearr_20254[9] = inst_20231;
                          return statearr_20254;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20247__$1, 12, dchan);
                      } else {
                        if (state_val_20248 === 6) {
                          var state_20247__$1 = state_20247;
                          var statearr_20255_20282 = state_20247__$1;
                          statearr_20255_20282[2] = null;
                          statearr_20255_20282[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_20248 === 7) {
                            var state_20247__$1 = state_20247;
                            var statearr_20256_20283 = state_20247__$1;
                            statearr_20256_20283[2] = null;
                            statearr_20256_20283[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_20248 === 8) {
                              var inst_20229 = state_20247[2];
                              var state_20247__$1 = state_20247;
                              var statearr_20257_20284 = state_20247__$1;
                              statearr_20257_20284[2] = inst_20229;
                              statearr_20257_20284[1] = 5;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_20248 === 9) {
                                var inst_20211 = state_20247[7];
                                var inst_20224 = state_20247[2];
                                var inst_20225 = inst_20211 + 1;
                                var inst_20211__$1 = inst_20225;
                                var state_20247__$1 = function() {
                                  var statearr_20258 = state_20247;
                                  statearr_20258[7] = inst_20211__$1;
                                  statearr_20258[10] = inst_20224;
                                  return statearr_20258;
                                }();
                                var statearr_20259_20285 = state_20247__$1;
                                statearr_20259_20285[2] = null;
                                statearr_20259_20285[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_20248 === 10) {
                                  var inst_20215 = state_20247[2];
                                  var inst_20216 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                  var state_20247__$1 = function() {
                                    var statearr_20260 = state_20247;
                                    statearr_20260[11] = inst_20215;
                                    return statearr_20260;
                                  }();
                                  var statearr_20261_20286 = state_20247__$1;
                                  statearr_20261_20286[2] = inst_20216;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20247__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_20248 === 11) {
                                    var inst_20211 = state_20247[7];
                                    var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_20247, 10, Object, null, 9);
                                    var inst_20220 = chs__$1.call(null, inst_20211);
                                    var inst_20221 = done.call(null, inst_20211);
                                    var inst_20222 = cljs.core.async.take_BANG_.call(null, inst_20220, inst_20221);
                                    var state_20247__$1 = state_20247;
                                    var statearr_20262_20287 = state_20247__$1;
                                    statearr_20262_20287[2] = inst_20222;
                                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20247__$1);
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_20248 === 12) {
                                      var inst_20233 = state_20247[12];
                                      var inst_20233__$1 = state_20247[2];
                                      var inst_20234 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_20233__$1);
                                      var state_20247__$1 = function() {
                                        var statearr_20263 = state_20247;
                                        statearr_20263[12] = inst_20233__$1;
                                        return statearr_20263;
                                      }();
                                      if (cljs.core.truth_(inst_20234)) {
                                        var statearr_20264_20288 = state_20247__$1;
                                        statearr_20264_20288[1] = 13;
                                      } else {
                                        var statearr_20265_20289 = state_20247__$1;
                                        statearr_20265_20289[1] = 14;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_20248 === 13) {
                                        var inst_20236 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_20247__$1 = state_20247;
                                        var statearr_20266_20290 = state_20247__$1;
                                        statearr_20266_20290[2] = inst_20236;
                                        statearr_20266_20290[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_20248 === 14) {
                                          var inst_20233 = state_20247[12];
                                          var inst_20238 = cljs.core.apply.call(null, f, inst_20233);
                                          var state_20247__$1 = state_20247;
                                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20247__$1, 16, out, inst_20238);
                                        } else {
                                          if (state_val_20248 === 15) {
                                            var inst_20243 = state_20247[2];
                                            var state_20247__$1 = state_20247;
                                            var statearr_20267_20291 = state_20247__$1;
                                            statearr_20267_20291[2] = inst_20243;
                                            statearr_20267_20291[1] = 3;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_20248 === 16) {
                                              var inst_20240 = state_20247[2];
                                              var state_20247__$1 = function() {
                                                var statearr_20268 = state_20247;
                                                statearr_20268[13] = inst_20240;
                                                return statearr_20268;
                                              }();
                                              var statearr_20269_20292 = state_20247__$1;
                                              statearr_20269_20292[2] = null;
                                              statearr_20269_20292[1] = 2;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__7022__auto___20277, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6951__auto__, c__7022__auto___20277, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6952__auto__ = null;
              var state_machine__6952__auto____0 = function() {
                var statearr_20273 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_20273[0] = state_machine__6952__auto__;
                statearr_20273[1] = 1;
                return statearr_20273;
              };
              var state_machine__6952__auto____1 = function(state_20247) {
                while (true) {
                  var ret_value__6953__auto__ = function() {
                    try {
                      while (true) {
                        var result__6954__auto__ = switch__6951__auto__.call(null, state_20247);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6954__auto__;
                        }
                        break;
                      }
                    } catch (e20274) {
                      if (e20274 instanceof Object) {
                        var ex__6955__auto__ = e20274;
                        var statearr_20275_20293 = state_20247;
                        statearr_20275_20293[5] = ex__6955__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20247);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e20274;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__20294 = state_20247;
                    state_20247 = G__20294;
                    continue;
                  } else {
                    return ret_value__6953__auto__;
                  }
                  break;
                }
              };
              state_machine__6952__auto__ = function(state_20247) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6952__auto____0.call(this);
                  case 1:
                    return state_machine__6952__auto____1.call(this, state_20247);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
              return state_machine__6952__auto__;
            }();
          }(switch__6951__auto__, c__7022__auto___20277, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__7024__auto__ = function() {
          var statearr_20276 = f__7023__auto__.call(null);
          statearr_20276[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto___20277;
          return statearr_20276;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
      };
    }(c__7022__auto___20277, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__7022__auto___20402 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto___20402, out) {
      return function() {
        var f__7023__auto__ = function() {
          var switch__6951__auto__ = function(c__7022__auto___20402, out) {
            return function(state_20378) {
              var state_val_20379 = state_20378[1];
              if (state_val_20379 === 1) {
                var inst_20349 = cljs.core.vec.call(null, chs);
                var inst_20350 = inst_20349;
                var state_20378__$1 = function() {
                  var statearr_20380 = state_20378;
                  statearr_20380[7] = inst_20350;
                  return statearr_20380;
                }();
                var statearr_20381_20403 = state_20378__$1;
                statearr_20381_20403[2] = null;
                statearr_20381_20403[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_20379 === 2) {
                  var inst_20350 = state_20378[7];
                  var inst_20352 = cljs.core.count.call(null, inst_20350);
                  var inst_20353 = inst_20352 > 0;
                  var state_20378__$1 = state_20378;
                  if (cljs.core.truth_(inst_20353)) {
                    var statearr_20382_20404 = state_20378__$1;
                    statearr_20382_20404[1] = 4;
                  } else {
                    var statearr_20383_20405 = state_20378__$1;
                    statearr_20383_20405[1] = 5;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_20379 === 3) {
                    var inst_20376 = state_20378[2];
                    var state_20378__$1 = state_20378;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20378__$1, inst_20376);
                  } else {
                    if (state_val_20379 === 4) {
                      var inst_20350 = state_20378[7];
                      var state_20378__$1 = state_20378;
                      return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_20378__$1, 7, inst_20350);
                    } else {
                      if (state_val_20379 === 5) {
                        var inst_20372 = cljs.core.async.close_BANG_.call(null, out);
                        var state_20378__$1 = state_20378;
                        var statearr_20384_20406 = state_20378__$1;
                        statearr_20384_20406[2] = inst_20372;
                        statearr_20384_20406[1] = 6;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_20379 === 6) {
                          var inst_20374 = state_20378[2];
                          var state_20378__$1 = state_20378;
                          var statearr_20385_20407 = state_20378__$1;
                          statearr_20385_20407[2] = inst_20374;
                          statearr_20385_20407[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_20379 === 7) {
                            var inst_20357 = state_20378[8];
                            var inst_20358 = state_20378[9];
                            var inst_20357__$1 = state_20378[2];
                            var inst_20358__$1 = cljs.core.nth.call(null, inst_20357__$1, 0, null);
                            var inst_20359 = cljs.core.nth.call(null, inst_20357__$1, 1, null);
                            var inst_20360 = inst_20358__$1 == null;
                            var state_20378__$1 = function() {
                              var statearr_20386 = state_20378;
                              statearr_20386[8] = inst_20357__$1;
                              statearr_20386[9] = inst_20358__$1;
                              statearr_20386[10] = inst_20359;
                              return statearr_20386;
                            }();
                            if (cljs.core.truth_(inst_20360)) {
                              var statearr_20387_20408 = state_20378__$1;
                              statearr_20387_20408[1] = 8;
                            } else {
                              var statearr_20388_20409 = state_20378__$1;
                              statearr_20388_20409[1] = 9;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_20379 === 8) {
                              var inst_20357 = state_20378[8];
                              var inst_20358 = state_20378[9];
                              var inst_20359 = state_20378[10];
                              var inst_20350 = state_20378[7];
                              var inst_20362 = function() {
                                var c = inst_20359;
                                var v = inst_20358;
                                var vec__20355 = inst_20357;
                                var cs = inst_20350;
                                return function(c, v, vec__20355, cs, inst_20357, inst_20358, inst_20359, inst_20350, state_val_20379, c__7022__auto___20402, out) {
                                  return function(p1__20295_SHARP_) {
                                    return cljs.core.not_EQ_.call(null, c, p1__20295_SHARP_);
                                  };
                                }(c, v, vec__20355, cs, inst_20357, inst_20358, inst_20359, inst_20350, state_val_20379, c__7022__auto___20402, out);
                              }();
                              var inst_20363 = cljs.core.filterv.call(null, inst_20362, inst_20350);
                              var inst_20350__$1 = inst_20363;
                              var state_20378__$1 = function() {
                                var statearr_20389 = state_20378;
                                statearr_20389[7] = inst_20350__$1;
                                return statearr_20389;
                              }();
                              var statearr_20390_20410 = state_20378__$1;
                              statearr_20390_20410[2] = null;
                              statearr_20390_20410[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_20379 === 9) {
                                var inst_20358 = state_20378[9];
                                var state_20378__$1 = state_20378;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20378__$1, 11, out, inst_20358);
                              } else {
                                if (state_val_20379 === 10) {
                                  var inst_20370 = state_20378[2];
                                  var state_20378__$1 = state_20378;
                                  var statearr_20392_20411 = state_20378__$1;
                                  statearr_20392_20411[2] = inst_20370;
                                  statearr_20392_20411[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_20379 === 11) {
                                    var inst_20350 = state_20378[7];
                                    var inst_20367 = state_20378[2];
                                    var tmp20391 = inst_20350;
                                    var inst_20350__$1 = tmp20391;
                                    var state_20378__$1 = function() {
                                      var statearr_20393 = state_20378;
                                      statearr_20393[11] = inst_20367;
                                      statearr_20393[7] = inst_20350__$1;
                                      return statearr_20393;
                                    }();
                                    var statearr_20394_20412 = state_20378__$1;
                                    statearr_20394_20412[2] = null;
                                    statearr_20394_20412[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__7022__auto___20402, out);
          return function(switch__6951__auto__, c__7022__auto___20402, out) {
            return function() {
              var state_machine__6952__auto__ = null;
              var state_machine__6952__auto____0 = function() {
                var statearr_20398 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_20398[0] = state_machine__6952__auto__;
                statearr_20398[1] = 1;
                return statearr_20398;
              };
              var state_machine__6952__auto____1 = function(state_20378) {
                while (true) {
                  var ret_value__6953__auto__ = function() {
                    try {
                      while (true) {
                        var result__6954__auto__ = switch__6951__auto__.call(null, state_20378);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6954__auto__;
                        }
                        break;
                      }
                    } catch (e20399) {
                      if (e20399 instanceof Object) {
                        var ex__6955__auto__ = e20399;
                        var statearr_20400_20413 = state_20378;
                        statearr_20400_20413[5] = ex__6955__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20378);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e20399;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__20414 = state_20378;
                    state_20378 = G__20414;
                    continue;
                  } else {
                    return ret_value__6953__auto__;
                  }
                  break;
                }
              };
              state_machine__6952__auto__ = function(state_20378) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6952__auto____0.call(this);
                  case 1:
                    return state_machine__6952__auto____1.call(this, state_20378);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
              return state_machine__6952__auto__;
            }();
          }(switch__6951__auto__, c__7022__auto___20402, out);
        }();
        var state__7024__auto__ = function() {
          var statearr_20401 = f__7023__auto__.call(null);
          statearr_20401[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto___20402;
          return statearr_20401;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
      };
    }(c__7022__auto___20402, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__7022__auto___20507 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto___20507, out) {
      return function() {
        var f__7023__auto__ = function() {
          var switch__6951__auto__ = function(c__7022__auto___20507, out) {
            return function(state_20484) {
              var state_val_20485 = state_20484[1];
              if (state_val_20485 === 1) {
                var inst_20461 = 0;
                var state_20484__$1 = function() {
                  var statearr_20486 = state_20484;
                  statearr_20486[7] = inst_20461;
                  return statearr_20486;
                }();
                var statearr_20487_20508 = state_20484__$1;
                statearr_20487_20508[2] = null;
                statearr_20487_20508[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_20485 === 2) {
                  var inst_20461 = state_20484[7];
                  var inst_20463 = inst_20461 < n;
                  var state_20484__$1 = state_20484;
                  if (cljs.core.truth_(inst_20463)) {
                    var statearr_20488_20509 = state_20484__$1;
                    statearr_20488_20509[1] = 4;
                  } else {
                    var statearr_20489_20510 = state_20484__$1;
                    statearr_20489_20510[1] = 5;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_20485 === 3) {
                    var inst_20481 = state_20484[2];
                    var inst_20482 = cljs.core.async.close_BANG_.call(null, out);
                    var state_20484__$1 = function() {
                      var statearr_20490 = state_20484;
                      statearr_20490[8] = inst_20481;
                      return statearr_20490;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20484__$1, inst_20482);
                  } else {
                    if (state_val_20485 === 4) {
                      var state_20484__$1 = state_20484;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20484__$1, 7, ch);
                    } else {
                      if (state_val_20485 === 5) {
                        var state_20484__$1 = state_20484;
                        var statearr_20491_20511 = state_20484__$1;
                        statearr_20491_20511[2] = null;
                        statearr_20491_20511[1] = 6;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_20485 === 6) {
                          var inst_20479 = state_20484[2];
                          var state_20484__$1 = state_20484;
                          var statearr_20492_20512 = state_20484__$1;
                          statearr_20492_20512[2] = inst_20479;
                          statearr_20492_20512[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_20485 === 7) {
                            var inst_20466 = state_20484[9];
                            var inst_20466__$1 = state_20484[2];
                            var inst_20467 = inst_20466__$1 == null;
                            var inst_20468 = cljs.core.not.call(null, inst_20467);
                            var state_20484__$1 = function() {
                              var statearr_20493 = state_20484;
                              statearr_20493[9] = inst_20466__$1;
                              return statearr_20493;
                            }();
                            if (inst_20468) {
                              var statearr_20494_20513 = state_20484__$1;
                              statearr_20494_20513[1] = 8;
                            } else {
                              var statearr_20495_20514 = state_20484__$1;
                              statearr_20495_20514[1] = 9;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_20485 === 8) {
                              var inst_20466 = state_20484[9];
                              var state_20484__$1 = state_20484;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20484__$1, 11, out, inst_20466);
                            } else {
                              if (state_val_20485 === 9) {
                                var state_20484__$1 = state_20484;
                                var statearr_20496_20515 = state_20484__$1;
                                statearr_20496_20515[2] = null;
                                statearr_20496_20515[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_20485 === 10) {
                                  var inst_20476 = state_20484[2];
                                  var state_20484__$1 = state_20484;
                                  var statearr_20497_20516 = state_20484__$1;
                                  statearr_20497_20516[2] = inst_20476;
                                  statearr_20497_20516[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_20485 === 11) {
                                    var inst_20461 = state_20484[7];
                                    var inst_20471 = state_20484[2];
                                    var inst_20472 = inst_20461 + 1;
                                    var inst_20461__$1 = inst_20472;
                                    var state_20484__$1 = function() {
                                      var statearr_20498 = state_20484;
                                      statearr_20498[10] = inst_20471;
                                      statearr_20498[7] = inst_20461__$1;
                                      return statearr_20498;
                                    }();
                                    var statearr_20499_20517 = state_20484__$1;
                                    statearr_20499_20517[2] = null;
                                    statearr_20499_20517[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__7022__auto___20507, out);
          return function(switch__6951__auto__, c__7022__auto___20507, out) {
            return function() {
              var state_machine__6952__auto__ = null;
              var state_machine__6952__auto____0 = function() {
                var statearr_20503 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_20503[0] = state_machine__6952__auto__;
                statearr_20503[1] = 1;
                return statearr_20503;
              };
              var state_machine__6952__auto____1 = function(state_20484) {
                while (true) {
                  var ret_value__6953__auto__ = function() {
                    try {
                      while (true) {
                        var result__6954__auto__ = switch__6951__auto__.call(null, state_20484);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6954__auto__;
                        }
                        break;
                      }
                    } catch (e20504) {
                      if (e20504 instanceof Object) {
                        var ex__6955__auto__ = e20504;
                        var statearr_20505_20518 = state_20484;
                        statearr_20505_20518[5] = ex__6955__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20484);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e20504;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__20519 = state_20484;
                    state_20484 = G__20519;
                    continue;
                  } else {
                    return ret_value__6953__auto__;
                  }
                  break;
                }
              };
              state_machine__6952__auto__ = function(state_20484) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6952__auto____0.call(this);
                  case 1:
                    return state_machine__6952__auto____1.call(this, state_20484);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
              return state_machine__6952__auto__;
            }();
          }(switch__6951__auto__, c__7022__auto___20507, out);
        }();
        var state__7024__auto__ = function() {
          var statearr_20506 = f__7023__auto__.call(null);
          statearr_20506[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto___20507;
          return statearr_20506;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
      };
    }(c__7022__auto___20507, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__7022__auto___20616 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto___20616, out) {
      return function() {
        var f__7023__auto__ = function() {
          var switch__6951__auto__ = function(c__7022__auto___20616, out) {
            return function(state_20591) {
              var state_val_20592 = state_20591[1];
              if (state_val_20592 === 1) {
                var inst_20568 = null;
                var state_20591__$1 = function() {
                  var statearr_20593 = state_20591;
                  statearr_20593[7] = inst_20568;
                  return statearr_20593;
                }();
                var statearr_20594_20617 = state_20591__$1;
                statearr_20594_20617[2] = null;
                statearr_20594_20617[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_20592 === 2) {
                  var state_20591__$1 = state_20591;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20591__$1, 4, ch);
                } else {
                  if (state_val_20592 === 3) {
                    var inst_20588 = state_20591[2];
                    var inst_20589 = cljs.core.async.close_BANG_.call(null, out);
                    var state_20591__$1 = function() {
                      var statearr_20595 = state_20591;
                      statearr_20595[8] = inst_20588;
                      return statearr_20595;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20591__$1, inst_20589);
                  } else {
                    if (state_val_20592 === 4) {
                      var inst_20571 = state_20591[9];
                      var inst_20571__$1 = state_20591[2];
                      var inst_20572 = inst_20571__$1 == null;
                      var inst_20573 = cljs.core.not.call(null, inst_20572);
                      var state_20591__$1 = function() {
                        var statearr_20596 = state_20591;
                        statearr_20596[9] = inst_20571__$1;
                        return statearr_20596;
                      }();
                      if (inst_20573) {
                        var statearr_20597_20618 = state_20591__$1;
                        statearr_20597_20618[1] = 5;
                      } else {
                        var statearr_20598_20619 = state_20591__$1;
                        statearr_20598_20619[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_20592 === 5) {
                        var inst_20571 = state_20591[9];
                        var inst_20568 = state_20591[7];
                        var inst_20575 = cljs.core._EQ_.call(null, inst_20571, inst_20568);
                        var state_20591__$1 = state_20591;
                        if (inst_20575) {
                          var statearr_20599_20620 = state_20591__$1;
                          statearr_20599_20620[1] = 8;
                        } else {
                          var statearr_20600_20621 = state_20591__$1;
                          statearr_20600_20621[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_20592 === 6) {
                          var state_20591__$1 = state_20591;
                          var statearr_20602_20622 = state_20591__$1;
                          statearr_20602_20622[2] = null;
                          statearr_20602_20622[1] = 7;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_20592 === 7) {
                            var inst_20586 = state_20591[2];
                            var state_20591__$1 = state_20591;
                            var statearr_20603_20623 = state_20591__$1;
                            statearr_20603_20623[2] = inst_20586;
                            statearr_20603_20623[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_20592 === 8) {
                              var inst_20568 = state_20591[7];
                              var tmp20601 = inst_20568;
                              var inst_20568__$1 = tmp20601;
                              var state_20591__$1 = function() {
                                var statearr_20604 = state_20591;
                                statearr_20604[7] = inst_20568__$1;
                                return statearr_20604;
                              }();
                              var statearr_20605_20624 = state_20591__$1;
                              statearr_20605_20624[2] = null;
                              statearr_20605_20624[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_20592 === 9) {
                                var inst_20571 = state_20591[9];
                                var state_20591__$1 = state_20591;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20591__$1, 11, out, inst_20571);
                              } else {
                                if (state_val_20592 === 10) {
                                  var inst_20583 = state_20591[2];
                                  var state_20591__$1 = state_20591;
                                  var statearr_20606_20625 = state_20591__$1;
                                  statearr_20606_20625[2] = inst_20583;
                                  statearr_20606_20625[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_20592 === 11) {
                                    var inst_20571 = state_20591[9];
                                    var inst_20580 = state_20591[2];
                                    var inst_20568 = inst_20571;
                                    var state_20591__$1 = function() {
                                      var statearr_20607 = state_20591;
                                      statearr_20607[10] = inst_20580;
                                      statearr_20607[7] = inst_20568;
                                      return statearr_20607;
                                    }();
                                    var statearr_20608_20626 = state_20591__$1;
                                    statearr_20608_20626[2] = null;
                                    statearr_20608_20626[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__7022__auto___20616, out);
          return function(switch__6951__auto__, c__7022__auto___20616, out) {
            return function() {
              var state_machine__6952__auto__ = null;
              var state_machine__6952__auto____0 = function() {
                var statearr_20612 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_20612[0] = state_machine__6952__auto__;
                statearr_20612[1] = 1;
                return statearr_20612;
              };
              var state_machine__6952__auto____1 = function(state_20591) {
                while (true) {
                  var ret_value__6953__auto__ = function() {
                    try {
                      while (true) {
                        var result__6954__auto__ = switch__6951__auto__.call(null, state_20591);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6954__auto__;
                        }
                        break;
                      }
                    } catch (e20613) {
                      if (e20613 instanceof Object) {
                        var ex__6955__auto__ = e20613;
                        var statearr_20614_20627 = state_20591;
                        statearr_20614_20627[5] = ex__6955__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20591);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e20613;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__20628 = state_20591;
                    state_20591 = G__20628;
                    continue;
                  } else {
                    return ret_value__6953__auto__;
                  }
                  break;
                }
              };
              state_machine__6952__auto__ = function(state_20591) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6952__auto____0.call(this);
                  case 1:
                    return state_machine__6952__auto____1.call(this, state_20591);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
              return state_machine__6952__auto__;
            }();
          }(switch__6951__auto__, c__7022__auto___20616, out);
        }();
        var state__7024__auto__ = function() {
          var statearr_20615 = f__7023__auto__.call(null);
          statearr_20615[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto___20616;
          return statearr_20615;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
      };
    }(c__7022__auto___20616, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__7022__auto___20763 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto___20763, out) {
      return function() {
        var f__7023__auto__ = function() {
          var switch__6951__auto__ = function(c__7022__auto___20763, out) {
            return function(state_20733) {
              var state_val_20734 = state_20733[1];
              if (state_val_20734 === 1) {
                var inst_20696 = new Array(n);
                var inst_20697 = inst_20696;
                var inst_20698 = 0;
                var state_20733__$1 = function() {
                  var statearr_20735 = state_20733;
                  statearr_20735[7] = inst_20697;
                  statearr_20735[8] = inst_20698;
                  return statearr_20735;
                }();
                var statearr_20736_20764 = state_20733__$1;
                statearr_20736_20764[2] = null;
                statearr_20736_20764[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_20734 === 2) {
                  var state_20733__$1 = state_20733;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20733__$1, 4, ch);
                } else {
                  if (state_val_20734 === 3) {
                    var inst_20731 = state_20733[2];
                    var state_20733__$1 = state_20733;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20733__$1, inst_20731);
                  } else {
                    if (state_val_20734 === 4) {
                      var inst_20701 = state_20733[9];
                      var inst_20701__$1 = state_20733[2];
                      var inst_20702 = inst_20701__$1 == null;
                      var inst_20703 = cljs.core.not.call(null, inst_20702);
                      var state_20733__$1 = function() {
                        var statearr_20737 = state_20733;
                        statearr_20737[9] = inst_20701__$1;
                        return statearr_20737;
                      }();
                      if (inst_20703) {
                        var statearr_20738_20765 = state_20733__$1;
                        statearr_20738_20765[1] = 5;
                      } else {
                        var statearr_20739_20766 = state_20733__$1;
                        statearr_20739_20766[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_20734 === 5) {
                        var inst_20701 = state_20733[9];
                        var inst_20706 = state_20733[10];
                        var inst_20697 = state_20733[7];
                        var inst_20698 = state_20733[8];
                        var inst_20705 = inst_20697[inst_20698] = inst_20701;
                        var inst_20706__$1 = inst_20698 + 1;
                        var inst_20707 = inst_20706__$1 < n;
                        var state_20733__$1 = function() {
                          var statearr_20740 = state_20733;
                          statearr_20740[10] = inst_20706__$1;
                          statearr_20740[11] = inst_20705;
                          return statearr_20740;
                        }();
                        if (cljs.core.truth_(inst_20707)) {
                          var statearr_20741_20767 = state_20733__$1;
                          statearr_20741_20767[1] = 8;
                        } else {
                          var statearr_20742_20768 = state_20733__$1;
                          statearr_20742_20768[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_20734 === 6) {
                          var inst_20698 = state_20733[8];
                          var inst_20719 = inst_20698 > 0;
                          var state_20733__$1 = state_20733;
                          if (cljs.core.truth_(inst_20719)) {
                            var statearr_20744_20769 = state_20733__$1;
                            statearr_20744_20769[1] = 12;
                          } else {
                            var statearr_20745_20770 = state_20733__$1;
                            statearr_20745_20770[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_20734 === 7) {
                            var inst_20729 = state_20733[2];
                            var state_20733__$1 = state_20733;
                            var statearr_20746_20771 = state_20733__$1;
                            statearr_20746_20771[2] = inst_20729;
                            statearr_20746_20771[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_20734 === 8) {
                              var inst_20706 = state_20733[10];
                              var inst_20697 = state_20733[7];
                              var tmp20743 = inst_20697;
                              var inst_20697__$1 = tmp20743;
                              var inst_20698 = inst_20706;
                              var state_20733__$1 = function() {
                                var statearr_20747 = state_20733;
                                statearr_20747[7] = inst_20697__$1;
                                statearr_20747[8] = inst_20698;
                                return statearr_20747;
                              }();
                              var statearr_20748_20772 = state_20733__$1;
                              statearr_20748_20772[2] = null;
                              statearr_20748_20772[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_20734 === 9) {
                                var inst_20697 = state_20733[7];
                                var inst_20711 = cljs.core.vec.call(null, inst_20697);
                                var state_20733__$1 = state_20733;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20733__$1, 11, out, inst_20711);
                              } else {
                                if (state_val_20734 === 10) {
                                  var inst_20717 = state_20733[2];
                                  var state_20733__$1 = state_20733;
                                  var statearr_20749_20773 = state_20733__$1;
                                  statearr_20749_20773[2] = inst_20717;
                                  statearr_20749_20773[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_20734 === 11) {
                                    var inst_20713 = state_20733[2];
                                    var inst_20714 = new Array(n);
                                    var inst_20697 = inst_20714;
                                    var inst_20698 = 0;
                                    var state_20733__$1 = function() {
                                      var statearr_20750 = state_20733;
                                      statearr_20750[12] = inst_20713;
                                      statearr_20750[7] = inst_20697;
                                      statearr_20750[8] = inst_20698;
                                      return statearr_20750;
                                    }();
                                    var statearr_20751_20774 = state_20733__$1;
                                    statearr_20751_20774[2] = null;
                                    statearr_20751_20774[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_20734 === 12) {
                                      var inst_20697 = state_20733[7];
                                      var inst_20721 = cljs.core.vec.call(null, inst_20697);
                                      var state_20733__$1 = state_20733;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20733__$1, 15, out, inst_20721);
                                    } else {
                                      if (state_val_20734 === 13) {
                                        var state_20733__$1 = state_20733;
                                        var statearr_20752_20775 = state_20733__$1;
                                        statearr_20752_20775[2] = null;
                                        statearr_20752_20775[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_20734 === 14) {
                                          var inst_20726 = state_20733[2];
                                          var inst_20727 = cljs.core.async.close_BANG_.call(null, out);
                                          var state_20733__$1 = function() {
                                            var statearr_20753 = state_20733;
                                            statearr_20753[13] = inst_20726;
                                            return statearr_20753;
                                          }();
                                          var statearr_20754_20776 = state_20733__$1;
                                          statearr_20754_20776[2] = inst_20727;
                                          statearr_20754_20776[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_20734 === 15) {
                                            var inst_20723 = state_20733[2];
                                            var state_20733__$1 = state_20733;
                                            var statearr_20755_20777 = state_20733__$1;
                                            statearr_20755_20777[2] = inst_20723;
                                            statearr_20755_20777[1] = 14;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__7022__auto___20763, out);
          return function(switch__6951__auto__, c__7022__auto___20763, out) {
            return function() {
              var state_machine__6952__auto__ = null;
              var state_machine__6952__auto____0 = function() {
                var statearr_20759 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_20759[0] = state_machine__6952__auto__;
                statearr_20759[1] = 1;
                return statearr_20759;
              };
              var state_machine__6952__auto____1 = function(state_20733) {
                while (true) {
                  var ret_value__6953__auto__ = function() {
                    try {
                      while (true) {
                        var result__6954__auto__ = switch__6951__auto__.call(null, state_20733);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6954__auto__;
                        }
                        break;
                      }
                    } catch (e20760) {
                      if (e20760 instanceof Object) {
                        var ex__6955__auto__ = e20760;
                        var statearr_20761_20778 = state_20733;
                        statearr_20761_20778[5] = ex__6955__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20733);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e20760;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__20779 = state_20733;
                    state_20733 = G__20779;
                    continue;
                  } else {
                    return ret_value__6953__auto__;
                  }
                  break;
                }
              };
              state_machine__6952__auto__ = function(state_20733) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6952__auto____0.call(this);
                  case 1:
                    return state_machine__6952__auto____1.call(this, state_20733);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
              return state_machine__6952__auto__;
            }();
          }(switch__6951__auto__, c__7022__auto___20763, out);
        }();
        var state__7024__auto__ = function() {
          var statearr_20762 = f__7023__auto__.call(null);
          statearr_20762[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto___20763;
          return statearr_20762;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
      };
    }(c__7022__auto___20763, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__7022__auto___20922 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__7022__auto___20922, out) {
      return function() {
        var f__7023__auto__ = function() {
          var switch__6951__auto__ = function(c__7022__auto___20922, out) {
            return function(state_20892) {
              var state_val_20893 = state_20892[1];
              if (state_val_20893 === 1) {
                var inst_20851 = [];
                var inst_20852 = inst_20851;
                var inst_20853 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538);
                var state_20892__$1 = function() {
                  var statearr_20894 = state_20892;
                  statearr_20894[7] = inst_20852;
                  statearr_20894[8] = inst_20853;
                  return statearr_20894;
                }();
                var statearr_20895_20923 = state_20892__$1;
                statearr_20895_20923[2] = null;
                statearr_20895_20923[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_20893 === 2) {
                  var state_20892__$1 = state_20892;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20892__$1, 4, ch);
                } else {
                  if (state_val_20893 === 3) {
                    var inst_20890 = state_20892[2];
                    var state_20892__$1 = state_20892;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20892__$1, inst_20890);
                  } else {
                    if (state_val_20893 === 4) {
                      var inst_20856 = state_20892[9];
                      var inst_20856__$1 = state_20892[2];
                      var inst_20857 = inst_20856__$1 == null;
                      var inst_20858 = cljs.core.not.call(null, inst_20857);
                      var state_20892__$1 = function() {
                        var statearr_20896 = state_20892;
                        statearr_20896[9] = inst_20856__$1;
                        return statearr_20896;
                      }();
                      if (inst_20858) {
                        var statearr_20897_20924 = state_20892__$1;
                        statearr_20897_20924[1] = 5;
                      } else {
                        var statearr_20898_20925 = state_20892__$1;
                        statearr_20898_20925[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_20893 === 5) {
                        var inst_20856 = state_20892[9];
                        var inst_20860 = state_20892[10];
                        var inst_20853 = state_20892[8];
                        var inst_20860__$1 = f.call(null, inst_20856);
                        var inst_20861 = cljs.core._EQ_.call(null, inst_20860__$1, inst_20853);
                        var inst_20862 = cljs.core.keyword_identical_QMARK_.call(null, inst_20853, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538));
                        var inst_20863 = inst_20861 || inst_20862;
                        var state_20892__$1 = function() {
                          var statearr_20899 = state_20892;
                          statearr_20899[10] = inst_20860__$1;
                          return statearr_20899;
                        }();
                        if (cljs.core.truth_(inst_20863)) {
                          var statearr_20900_20926 = state_20892__$1;
                          statearr_20900_20926[1] = 8;
                        } else {
                          var statearr_20901_20927 = state_20892__$1;
                          statearr_20901_20927[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_20893 === 6) {
                          var inst_20852 = state_20892[7];
                          var inst_20877 = inst_20852.length;
                          var inst_20878 = inst_20877 > 0;
                          var state_20892__$1 = state_20892;
                          if (cljs.core.truth_(inst_20878)) {
                            var statearr_20903_20928 = state_20892__$1;
                            statearr_20903_20928[1] = 12;
                          } else {
                            var statearr_20904_20929 = state_20892__$1;
                            statearr_20904_20929[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_20893 === 7) {
                            var inst_20888 = state_20892[2];
                            var state_20892__$1 = state_20892;
                            var statearr_20905_20930 = state_20892__$1;
                            statearr_20905_20930[2] = inst_20888;
                            statearr_20905_20930[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_20893 === 8) {
                              var inst_20856 = state_20892[9];
                              var inst_20860 = state_20892[10];
                              var inst_20852 = state_20892[7];
                              var inst_20865 = inst_20852.push(inst_20856);
                              var tmp20902 = inst_20852;
                              var inst_20852__$1 = tmp20902;
                              var inst_20853 = inst_20860;
                              var state_20892__$1 = function() {
                                var statearr_20906 = state_20892;
                                statearr_20906[11] = inst_20865;
                                statearr_20906[7] = inst_20852__$1;
                                statearr_20906[8] = inst_20853;
                                return statearr_20906;
                              }();
                              var statearr_20907_20931 = state_20892__$1;
                              statearr_20907_20931[2] = null;
                              statearr_20907_20931[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_20893 === 9) {
                                var inst_20852 = state_20892[7];
                                var inst_20868 = cljs.core.vec.call(null, inst_20852);
                                var state_20892__$1 = state_20892;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20892__$1, 11, out, inst_20868);
                              } else {
                                if (state_val_20893 === 10) {
                                  var inst_20875 = state_20892[2];
                                  var state_20892__$1 = state_20892;
                                  var statearr_20908_20932 = state_20892__$1;
                                  statearr_20908_20932[2] = inst_20875;
                                  statearr_20908_20932[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_20893 === 11) {
                                    var inst_20856 = state_20892[9];
                                    var inst_20860 = state_20892[10];
                                    var inst_20870 = state_20892[2];
                                    var inst_20871 = [];
                                    var inst_20872 = inst_20871.push(inst_20856);
                                    var inst_20852 = inst_20871;
                                    var inst_20853 = inst_20860;
                                    var state_20892__$1 = function() {
                                      var statearr_20909 = state_20892;
                                      statearr_20909[12] = inst_20872;
                                      statearr_20909[13] = inst_20870;
                                      statearr_20909[7] = inst_20852;
                                      statearr_20909[8] = inst_20853;
                                      return statearr_20909;
                                    }();
                                    var statearr_20910_20933 = state_20892__$1;
                                    statearr_20910_20933[2] = null;
                                    statearr_20910_20933[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_20893 === 12) {
                                      var inst_20852 = state_20892[7];
                                      var inst_20880 = cljs.core.vec.call(null, inst_20852);
                                      var state_20892__$1 = state_20892;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20892__$1, 15, out, inst_20880);
                                    } else {
                                      if (state_val_20893 === 13) {
                                        var state_20892__$1 = state_20892;
                                        var statearr_20911_20934 = state_20892__$1;
                                        statearr_20911_20934[2] = null;
                                        statearr_20911_20934[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_20893 === 14) {
                                          var inst_20885 = state_20892[2];
                                          var inst_20886 = cljs.core.async.close_BANG_.call(null, out);
                                          var state_20892__$1 = function() {
                                            var statearr_20912 = state_20892;
                                            statearr_20912[14] = inst_20885;
                                            return statearr_20912;
                                          }();
                                          var statearr_20913_20935 = state_20892__$1;
                                          statearr_20913_20935[2] = inst_20886;
                                          statearr_20913_20935[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_20893 === 15) {
                                            var inst_20882 = state_20892[2];
                                            var state_20892__$1 = state_20892;
                                            var statearr_20914_20936 = state_20892__$1;
                                            statearr_20914_20936[2] = inst_20882;
                                            statearr_20914_20936[1] = 14;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__7022__auto___20922, out);
          return function(switch__6951__auto__, c__7022__auto___20922, out) {
            return function() {
              var state_machine__6952__auto__ = null;
              var state_machine__6952__auto____0 = function() {
                var statearr_20918 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_20918[0] = state_machine__6952__auto__;
                statearr_20918[1] = 1;
                return statearr_20918;
              };
              var state_machine__6952__auto____1 = function(state_20892) {
                while (true) {
                  var ret_value__6953__auto__ = function() {
                    try {
                      while (true) {
                        var result__6954__auto__ = switch__6951__auto__.call(null, state_20892);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6954__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6954__auto__;
                        }
                        break;
                      }
                    } catch (e20919) {
                      if (e20919 instanceof Object) {
                        var ex__6955__auto__ = e20919;
                        var statearr_20920_20937 = state_20892;
                        statearr_20920_20937[5] = ex__6955__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20892);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e20919;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6953__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__20938 = state_20892;
                    state_20892 = G__20938;
                    continue;
                  } else {
                    return ret_value__6953__auto__;
                  }
                  break;
                }
              };
              state_machine__6952__auto__ = function(state_20892) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6952__auto____0.call(this);
                  case 1:
                    return state_machine__6952__auto____1.call(this, state_20892);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6952__auto____0;
              state_machine__6952__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6952__auto____1;
              return state_machine__6952__auto__;
            }();
          }(switch__6951__auto__, c__7022__auto___20922, out);
        }();
        var state__7024__auto__ = function() {
          var statearr_20921 = f__7023__auto__.call(null);
          statearr_20921[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7022__auto___20922;
          return statearr_20921;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7024__auto__);
      };
    }(c__7022__auto___20922, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var a = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__18167) {
    var opts__5101__auto__ = cljs.core.first(arglist__18167);
    var children__5102__auto__ = cljs.core.rest(arglist__18167);
    return a__delegate(opts__5101__auto__, children__5102__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var abbr = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__18168) {
    var opts__5101__auto__ = cljs.core.first(arglist__18168);
    var children__5102__auto__ = cljs.core.rest(arglist__18168);
    return abbr__delegate(opts__5101__auto__, children__5102__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var address = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__18169) {
    var opts__5101__auto__ = cljs.core.first(arglist__18169);
    var children__5102__auto__ = cljs.core.rest(arglist__18169);
    return address__delegate(opts__5101__auto__, children__5102__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var area = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__18170) {
    var opts__5101__auto__ = cljs.core.first(arglist__18170);
    var children__5102__auto__ = cljs.core.rest(arglist__18170);
    return area__delegate(opts__5101__auto__, children__5102__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var article = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__18171) {
    var opts__5101__auto__ = cljs.core.first(arglist__18171);
    var children__5102__auto__ = cljs.core.rest(arglist__18171);
    return article__delegate(opts__5101__auto__, children__5102__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var aside = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__18172) {
    var opts__5101__auto__ = cljs.core.first(arglist__18172);
    var children__5102__auto__ = cljs.core.rest(arglist__18172);
    return aside__delegate(opts__5101__auto__, children__5102__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var audio = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__18173) {
    var opts__5101__auto__ = cljs.core.first(arglist__18173);
    var children__5102__auto__ = cljs.core.rest(arglist__18173);
    return audio__delegate(opts__5101__auto__, children__5102__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var b = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__18174) {
    var opts__5101__auto__ = cljs.core.first(arglist__18174);
    var children__5102__auto__ = cljs.core.rest(arglist__18174);
    return b__delegate(opts__5101__auto__, children__5102__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var base = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__18175) {
    var opts__5101__auto__ = cljs.core.first(arglist__18175);
    var children__5102__auto__ = cljs.core.rest(arglist__18175);
    return base__delegate(opts__5101__auto__, children__5102__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var bdi = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__18176) {
    var opts__5101__auto__ = cljs.core.first(arglist__18176);
    var children__5102__auto__ = cljs.core.rest(arglist__18176);
    return bdi__delegate(opts__5101__auto__, children__5102__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var bdo = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__18177) {
    var opts__5101__auto__ = cljs.core.first(arglist__18177);
    var children__5102__auto__ = cljs.core.rest(arglist__18177);
    return bdo__delegate(opts__5101__auto__, children__5102__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var big = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__18178) {
    var opts__5101__auto__ = cljs.core.first(arglist__18178);
    var children__5102__auto__ = cljs.core.rest(arglist__18178);
    return big__delegate(opts__5101__auto__, children__5102__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var blockquote = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__18179) {
    var opts__5101__auto__ = cljs.core.first(arglist__18179);
    var children__5102__auto__ = cljs.core.rest(arglist__18179);
    return blockquote__delegate(opts__5101__auto__, children__5102__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var body = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__18180) {
    var opts__5101__auto__ = cljs.core.first(arglist__18180);
    var children__5102__auto__ = cljs.core.rest(arglist__18180);
    return body__delegate(opts__5101__auto__, children__5102__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var br = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__18181) {
    var opts__5101__auto__ = cljs.core.first(arglist__18181);
    var children__5102__auto__ = cljs.core.rest(arglist__18181);
    return br__delegate(opts__5101__auto__, children__5102__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var button = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__18182) {
    var opts__5101__auto__ = cljs.core.first(arglist__18182);
    var children__5102__auto__ = cljs.core.rest(arglist__18182);
    return button__delegate(opts__5101__auto__, children__5102__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var canvas = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__18183) {
    var opts__5101__auto__ = cljs.core.first(arglist__18183);
    var children__5102__auto__ = cljs.core.rest(arglist__18183);
    return canvas__delegate(opts__5101__auto__, children__5102__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var caption = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__18184) {
    var opts__5101__auto__ = cljs.core.first(arglist__18184);
    var children__5102__auto__ = cljs.core.rest(arglist__18184);
    return caption__delegate(opts__5101__auto__, children__5102__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var cite = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__18185) {
    var opts__5101__auto__ = cljs.core.first(arglist__18185);
    var children__5102__auto__ = cljs.core.rest(arglist__18185);
    return cite__delegate(opts__5101__auto__, children__5102__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var code = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__18186) {
    var opts__5101__auto__ = cljs.core.first(arglist__18186);
    var children__5102__auto__ = cljs.core.rest(arglist__18186);
    return code__delegate(opts__5101__auto__, children__5102__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var col = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__18187) {
    var opts__5101__auto__ = cljs.core.first(arglist__18187);
    var children__5102__auto__ = cljs.core.rest(arglist__18187);
    return col__delegate(opts__5101__auto__, children__5102__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var colgroup = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__18188) {
    var opts__5101__auto__ = cljs.core.first(arglist__18188);
    var children__5102__auto__ = cljs.core.rest(arglist__18188);
    return colgroup__delegate(opts__5101__auto__, children__5102__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var data = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__18189) {
    var opts__5101__auto__ = cljs.core.first(arglist__18189);
    var children__5102__auto__ = cljs.core.rest(arglist__18189);
    return data__delegate(opts__5101__auto__, children__5102__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var datalist = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__18190) {
    var opts__5101__auto__ = cljs.core.first(arglist__18190);
    var children__5102__auto__ = cljs.core.rest(arglist__18190);
    return datalist__delegate(opts__5101__auto__, children__5102__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var dd = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__18191) {
    var opts__5101__auto__ = cljs.core.first(arglist__18191);
    var children__5102__auto__ = cljs.core.rest(arglist__18191);
    return dd__delegate(opts__5101__auto__, children__5102__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var del = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__18192) {
    var opts__5101__auto__ = cljs.core.first(arglist__18192);
    var children__5102__auto__ = cljs.core.rest(arglist__18192);
    return del__delegate(opts__5101__auto__, children__5102__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var dfn = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__18193) {
    var opts__5101__auto__ = cljs.core.first(arglist__18193);
    var children__5102__auto__ = cljs.core.rest(arglist__18193);
    return dfn__delegate(opts__5101__auto__, children__5102__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var div = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__18194) {
    var opts__5101__auto__ = cljs.core.first(arglist__18194);
    var children__5102__auto__ = cljs.core.rest(arglist__18194);
    return div__delegate(opts__5101__auto__, children__5102__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var dl = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__18195) {
    var opts__5101__auto__ = cljs.core.first(arglist__18195);
    var children__5102__auto__ = cljs.core.rest(arglist__18195);
    return dl__delegate(opts__5101__auto__, children__5102__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var dt = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__18196) {
    var opts__5101__auto__ = cljs.core.first(arglist__18196);
    var children__5102__auto__ = cljs.core.rest(arglist__18196);
    return dt__delegate(opts__5101__auto__, children__5102__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var em = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__18197) {
    var opts__5101__auto__ = cljs.core.first(arglist__18197);
    var children__5102__auto__ = cljs.core.rest(arglist__18197);
    return em__delegate(opts__5101__auto__, children__5102__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var embed = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__18198) {
    var opts__5101__auto__ = cljs.core.first(arglist__18198);
    var children__5102__auto__ = cljs.core.rest(arglist__18198);
    return embed__delegate(opts__5101__auto__, children__5102__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var fieldset = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__18199) {
    var opts__5101__auto__ = cljs.core.first(arglist__18199);
    var children__5102__auto__ = cljs.core.rest(arglist__18199);
    return fieldset__delegate(opts__5101__auto__, children__5102__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var figcaption = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__18200) {
    var opts__5101__auto__ = cljs.core.first(arglist__18200);
    var children__5102__auto__ = cljs.core.rest(arglist__18200);
    return figcaption__delegate(opts__5101__auto__, children__5102__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var figure = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__18201) {
    var opts__5101__auto__ = cljs.core.first(arglist__18201);
    var children__5102__auto__ = cljs.core.rest(arglist__18201);
    return figure__delegate(opts__5101__auto__, children__5102__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var footer = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__18202) {
    var opts__5101__auto__ = cljs.core.first(arglist__18202);
    var children__5102__auto__ = cljs.core.rest(arglist__18202);
    return footer__delegate(opts__5101__auto__, children__5102__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var form = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__18203) {
    var opts__5101__auto__ = cljs.core.first(arglist__18203);
    var children__5102__auto__ = cljs.core.rest(arglist__18203);
    return form__delegate(opts__5101__auto__, children__5102__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var h1 = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__18204) {
    var opts__5101__auto__ = cljs.core.first(arglist__18204);
    var children__5102__auto__ = cljs.core.rest(arglist__18204);
    return h1__delegate(opts__5101__auto__, children__5102__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var h2 = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__18205) {
    var opts__5101__auto__ = cljs.core.first(arglist__18205);
    var children__5102__auto__ = cljs.core.rest(arglist__18205);
    return h2__delegate(opts__5101__auto__, children__5102__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var h3 = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__18206) {
    var opts__5101__auto__ = cljs.core.first(arglist__18206);
    var children__5102__auto__ = cljs.core.rest(arglist__18206);
    return h3__delegate(opts__5101__auto__, children__5102__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var h4 = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__18207) {
    var opts__5101__auto__ = cljs.core.first(arglist__18207);
    var children__5102__auto__ = cljs.core.rest(arglist__18207);
    return h4__delegate(opts__5101__auto__, children__5102__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var h5 = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__18208) {
    var opts__5101__auto__ = cljs.core.first(arglist__18208);
    var children__5102__auto__ = cljs.core.rest(arglist__18208);
    return h5__delegate(opts__5101__auto__, children__5102__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var h6 = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__18209) {
    var opts__5101__auto__ = cljs.core.first(arglist__18209);
    var children__5102__auto__ = cljs.core.rest(arglist__18209);
    return h6__delegate(opts__5101__auto__, children__5102__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var head = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__18210) {
    var opts__5101__auto__ = cljs.core.first(arglist__18210);
    var children__5102__auto__ = cljs.core.rest(arglist__18210);
    return head__delegate(opts__5101__auto__, children__5102__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var header = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__18211) {
    var opts__5101__auto__ = cljs.core.first(arglist__18211);
    var children__5102__auto__ = cljs.core.rest(arglist__18211);
    return header__delegate(opts__5101__auto__, children__5102__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var hr = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__18212) {
    var opts__5101__auto__ = cljs.core.first(arglist__18212);
    var children__5102__auto__ = cljs.core.rest(arglist__18212);
    return hr__delegate(opts__5101__auto__, children__5102__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var html = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__18213) {
    var opts__5101__auto__ = cljs.core.first(arglist__18213);
    var children__5102__auto__ = cljs.core.rest(arglist__18213);
    return html__delegate(opts__5101__auto__, children__5102__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var i = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__18214) {
    var opts__5101__auto__ = cljs.core.first(arglist__18214);
    var children__5102__auto__ = cljs.core.rest(arglist__18214);
    return i__delegate(opts__5101__auto__, children__5102__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var iframe = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__18215) {
    var opts__5101__auto__ = cljs.core.first(arglist__18215);
    var children__5102__auto__ = cljs.core.rest(arglist__18215);
    return iframe__delegate(opts__5101__auto__, children__5102__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var img = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__18216) {
    var opts__5101__auto__ = cljs.core.first(arglist__18216);
    var children__5102__auto__ = cljs.core.rest(arglist__18216);
    return img__delegate(opts__5101__auto__, children__5102__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var ins = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__18217) {
    var opts__5101__auto__ = cljs.core.first(arglist__18217);
    var children__5102__auto__ = cljs.core.rest(arglist__18217);
    return ins__delegate(opts__5101__auto__, children__5102__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var kbd = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__18218) {
    var opts__5101__auto__ = cljs.core.first(arglist__18218);
    var children__5102__auto__ = cljs.core.rest(arglist__18218);
    return kbd__delegate(opts__5101__auto__, children__5102__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var keygen = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__18219) {
    var opts__5101__auto__ = cljs.core.first(arglist__18219);
    var children__5102__auto__ = cljs.core.rest(arglist__18219);
    return keygen__delegate(opts__5101__auto__, children__5102__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var label = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__18220) {
    var opts__5101__auto__ = cljs.core.first(arglist__18220);
    var children__5102__auto__ = cljs.core.rest(arglist__18220);
    return label__delegate(opts__5101__auto__, children__5102__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var legend = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__18221) {
    var opts__5101__auto__ = cljs.core.first(arglist__18221);
    var children__5102__auto__ = cljs.core.rest(arglist__18221);
    return legend__delegate(opts__5101__auto__, children__5102__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var li = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__18222) {
    var opts__5101__auto__ = cljs.core.first(arglist__18222);
    var children__5102__auto__ = cljs.core.rest(arglist__18222);
    return li__delegate(opts__5101__auto__, children__5102__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var link = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__18223) {
    var opts__5101__auto__ = cljs.core.first(arglist__18223);
    var children__5102__auto__ = cljs.core.rest(arglist__18223);
    return link__delegate(opts__5101__auto__, children__5102__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var main = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__18224) {
    var opts__5101__auto__ = cljs.core.first(arglist__18224);
    var children__5102__auto__ = cljs.core.rest(arglist__18224);
    return main__delegate(opts__5101__auto__, children__5102__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var map = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__18225) {
    var opts__5101__auto__ = cljs.core.first(arglist__18225);
    var children__5102__auto__ = cljs.core.rest(arglist__18225);
    return map__delegate(opts__5101__auto__, children__5102__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var mark = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__18226) {
    var opts__5101__auto__ = cljs.core.first(arglist__18226);
    var children__5102__auto__ = cljs.core.rest(arglist__18226);
    return mark__delegate(opts__5101__auto__, children__5102__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var menu = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__18227) {
    var opts__5101__auto__ = cljs.core.first(arglist__18227);
    var children__5102__auto__ = cljs.core.rest(arglist__18227);
    return menu__delegate(opts__5101__auto__, children__5102__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var menuitem = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__18228) {
    var opts__5101__auto__ = cljs.core.first(arglist__18228);
    var children__5102__auto__ = cljs.core.rest(arglist__18228);
    return menuitem__delegate(opts__5101__auto__, children__5102__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var meta = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__18229) {
    var opts__5101__auto__ = cljs.core.first(arglist__18229);
    var children__5102__auto__ = cljs.core.rest(arglist__18229);
    return meta__delegate(opts__5101__auto__, children__5102__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var meter = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__18230) {
    var opts__5101__auto__ = cljs.core.first(arglist__18230);
    var children__5102__auto__ = cljs.core.rest(arglist__18230);
    return meter__delegate(opts__5101__auto__, children__5102__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var nav = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__18231) {
    var opts__5101__auto__ = cljs.core.first(arglist__18231);
    var children__5102__auto__ = cljs.core.rest(arglist__18231);
    return nav__delegate(opts__5101__auto__, children__5102__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var noscript = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__18232) {
    var opts__5101__auto__ = cljs.core.first(arglist__18232);
    var children__5102__auto__ = cljs.core.rest(arglist__18232);
    return noscript__delegate(opts__5101__auto__, children__5102__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var object = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__18233) {
    var opts__5101__auto__ = cljs.core.first(arglist__18233);
    var children__5102__auto__ = cljs.core.rest(arglist__18233);
    return object__delegate(opts__5101__auto__, children__5102__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var ol = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__18234) {
    var opts__5101__auto__ = cljs.core.first(arglist__18234);
    var children__5102__auto__ = cljs.core.rest(arglist__18234);
    return ol__delegate(opts__5101__auto__, children__5102__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var optgroup = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__18235) {
    var opts__5101__auto__ = cljs.core.first(arglist__18235);
    var children__5102__auto__ = cljs.core.rest(arglist__18235);
    return optgroup__delegate(opts__5101__auto__, children__5102__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var output = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__18236) {
    var opts__5101__auto__ = cljs.core.first(arglist__18236);
    var children__5102__auto__ = cljs.core.rest(arglist__18236);
    return output__delegate(opts__5101__auto__, children__5102__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var p = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__18237) {
    var opts__5101__auto__ = cljs.core.first(arglist__18237);
    var children__5102__auto__ = cljs.core.rest(arglist__18237);
    return p__delegate(opts__5101__auto__, children__5102__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var param = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__18238) {
    var opts__5101__auto__ = cljs.core.first(arglist__18238);
    var children__5102__auto__ = cljs.core.rest(arglist__18238);
    return param__delegate(opts__5101__auto__, children__5102__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var pre = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__18239) {
    var opts__5101__auto__ = cljs.core.first(arglist__18239);
    var children__5102__auto__ = cljs.core.rest(arglist__18239);
    return pre__delegate(opts__5101__auto__, children__5102__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var progress = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__18240) {
    var opts__5101__auto__ = cljs.core.first(arglist__18240);
    var children__5102__auto__ = cljs.core.rest(arglist__18240);
    return progress__delegate(opts__5101__auto__, children__5102__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var q = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__18241) {
    var opts__5101__auto__ = cljs.core.first(arglist__18241);
    var children__5102__auto__ = cljs.core.rest(arglist__18241);
    return q__delegate(opts__5101__auto__, children__5102__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var rp = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__18242) {
    var opts__5101__auto__ = cljs.core.first(arglist__18242);
    var children__5102__auto__ = cljs.core.rest(arglist__18242);
    return rp__delegate(opts__5101__auto__, children__5102__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var rt = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__18243) {
    var opts__5101__auto__ = cljs.core.first(arglist__18243);
    var children__5102__auto__ = cljs.core.rest(arglist__18243);
    return rt__delegate(opts__5101__auto__, children__5102__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var ruby = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__18244) {
    var opts__5101__auto__ = cljs.core.first(arglist__18244);
    var children__5102__auto__ = cljs.core.rest(arglist__18244);
    return ruby__delegate(opts__5101__auto__, children__5102__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var s = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__18245) {
    var opts__5101__auto__ = cljs.core.first(arglist__18245);
    var children__5102__auto__ = cljs.core.rest(arglist__18245);
    return s__delegate(opts__5101__auto__, children__5102__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var samp = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__18246) {
    var opts__5101__auto__ = cljs.core.first(arglist__18246);
    var children__5102__auto__ = cljs.core.rest(arglist__18246);
    return samp__delegate(opts__5101__auto__, children__5102__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var script = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__18247) {
    var opts__5101__auto__ = cljs.core.first(arglist__18247);
    var children__5102__auto__ = cljs.core.rest(arglist__18247);
    return script__delegate(opts__5101__auto__, children__5102__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var section = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__18248) {
    var opts__5101__auto__ = cljs.core.first(arglist__18248);
    var children__5102__auto__ = cljs.core.rest(arglist__18248);
    return section__delegate(opts__5101__auto__, children__5102__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var select = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__18249) {
    var opts__5101__auto__ = cljs.core.first(arglist__18249);
    var children__5102__auto__ = cljs.core.rest(arglist__18249);
    return select__delegate(opts__5101__auto__, children__5102__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var small = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__18250) {
    var opts__5101__auto__ = cljs.core.first(arglist__18250);
    var children__5102__auto__ = cljs.core.rest(arglist__18250);
    return small__delegate(opts__5101__auto__, children__5102__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var source = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__18251) {
    var opts__5101__auto__ = cljs.core.first(arglist__18251);
    var children__5102__auto__ = cljs.core.rest(arglist__18251);
    return source__delegate(opts__5101__auto__, children__5102__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var span = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__18252) {
    var opts__5101__auto__ = cljs.core.first(arglist__18252);
    var children__5102__auto__ = cljs.core.rest(arglist__18252);
    return span__delegate(opts__5101__auto__, children__5102__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var strong = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__18253) {
    var opts__5101__auto__ = cljs.core.first(arglist__18253);
    var children__5102__auto__ = cljs.core.rest(arglist__18253);
    return strong__delegate(opts__5101__auto__, children__5102__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var style = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__18254) {
    var opts__5101__auto__ = cljs.core.first(arglist__18254);
    var children__5102__auto__ = cljs.core.rest(arglist__18254);
    return style__delegate(opts__5101__auto__, children__5102__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var sub = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__18255) {
    var opts__5101__auto__ = cljs.core.first(arglist__18255);
    var children__5102__auto__ = cljs.core.rest(arglist__18255);
    return sub__delegate(opts__5101__auto__, children__5102__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var summary = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__18256) {
    var opts__5101__auto__ = cljs.core.first(arglist__18256);
    var children__5102__auto__ = cljs.core.rest(arglist__18256);
    return summary__delegate(opts__5101__auto__, children__5102__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var sup = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__18257) {
    var opts__5101__auto__ = cljs.core.first(arglist__18257);
    var children__5102__auto__ = cljs.core.rest(arglist__18257);
    return sup__delegate(opts__5101__auto__, children__5102__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var table = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__18258) {
    var opts__5101__auto__ = cljs.core.first(arglist__18258);
    var children__5102__auto__ = cljs.core.rest(arglist__18258);
    return table__delegate(opts__5101__auto__, children__5102__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var tbody = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__18259) {
    var opts__5101__auto__ = cljs.core.first(arglist__18259);
    var children__5102__auto__ = cljs.core.rest(arglist__18259);
    return tbody__delegate(opts__5101__auto__, children__5102__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var td = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__18260) {
    var opts__5101__auto__ = cljs.core.first(arglist__18260);
    var children__5102__auto__ = cljs.core.rest(arglist__18260);
    return td__delegate(opts__5101__auto__, children__5102__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var tfoot = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__18261) {
    var opts__5101__auto__ = cljs.core.first(arglist__18261);
    var children__5102__auto__ = cljs.core.rest(arglist__18261);
    return tfoot__delegate(opts__5101__auto__, children__5102__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var th = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__18262) {
    var opts__5101__auto__ = cljs.core.first(arglist__18262);
    var children__5102__auto__ = cljs.core.rest(arglist__18262);
    return th__delegate(opts__5101__auto__, children__5102__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var thead = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__18263) {
    var opts__5101__auto__ = cljs.core.first(arglist__18263);
    var children__5102__auto__ = cljs.core.rest(arglist__18263);
    return thead__delegate(opts__5101__auto__, children__5102__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var time = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__18264) {
    var opts__5101__auto__ = cljs.core.first(arglist__18264);
    var children__5102__auto__ = cljs.core.rest(arglist__18264);
    return time__delegate(opts__5101__auto__, children__5102__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var title = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__18265) {
    var opts__5101__auto__ = cljs.core.first(arglist__18265);
    var children__5102__auto__ = cljs.core.rest(arglist__18265);
    return title__delegate(opts__5101__auto__, children__5102__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var tr = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__18266) {
    var opts__5101__auto__ = cljs.core.first(arglist__18266);
    var children__5102__auto__ = cljs.core.rest(arglist__18266);
    return tr__delegate(opts__5101__auto__, children__5102__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var track = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__18267) {
    var opts__5101__auto__ = cljs.core.first(arglist__18267);
    var children__5102__auto__ = cljs.core.rest(arglist__18267);
    return track__delegate(opts__5101__auto__, children__5102__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var u = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__18268) {
    var opts__5101__auto__ = cljs.core.first(arglist__18268);
    var children__5102__auto__ = cljs.core.rest(arglist__18268);
    return u__delegate(opts__5101__auto__, children__5102__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var ul = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__18269) {
    var opts__5101__auto__ = cljs.core.first(arglist__18269);
    var children__5102__auto__ = cljs.core.rest(arglist__18269);
    return ul__delegate(opts__5101__auto__, children__5102__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var var$ = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__18270) {
    var opts__5101__auto__ = cljs.core.first(arglist__18270);
    var children__5102__auto__ = cljs.core.rest(arglist__18270);
    return var$__delegate(opts__5101__auto__, children__5102__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var video = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__18271) {
    var opts__5101__auto__ = cljs.core.first(arglist__18271);
    var children__5102__auto__ = cljs.core.rest(arglist__18271);
    return video__delegate(opts__5101__auto__, children__5102__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var wbr = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__18272) {
    var opts__5101__auto__ = cljs.core.first(arglist__18272);
    var children__5102__auto__ = cljs.core.rest(arglist__18272);
    return wbr__delegate(opts__5101__auto__, children__5102__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var circle = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__18273) {
    var opts__5101__auto__ = cljs.core.first(arglist__18273);
    var children__5102__auto__ = cljs.core.rest(arglist__18273);
    return circle__delegate(opts__5101__auto__, children__5102__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var ellipse = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__18274) {
    var opts__5101__auto__ = cljs.core.first(arglist__18274);
    var children__5102__auto__ = cljs.core.rest(arglist__18274);
    return ellipse__delegate(opts__5101__auto__, children__5102__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var g = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__18275) {
    var opts__5101__auto__ = cljs.core.first(arglist__18275);
    var children__5102__auto__ = cljs.core.rest(arglist__18275);
    return g__delegate(opts__5101__auto__, children__5102__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var line = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__18276) {
    var opts__5101__auto__ = cljs.core.first(arglist__18276);
    var children__5102__auto__ = cljs.core.rest(arglist__18276);
    return line__delegate(opts__5101__auto__, children__5102__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var path = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__18277) {
    var opts__5101__auto__ = cljs.core.first(arglist__18277);
    var children__5102__auto__ = cljs.core.rest(arglist__18277);
    return path__delegate(opts__5101__auto__, children__5102__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var polyline = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__18278) {
    var opts__5101__auto__ = cljs.core.first(arglist__18278);
    var children__5102__auto__ = cljs.core.rest(arglist__18278);
    return polyline__delegate(opts__5101__auto__, children__5102__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var rect = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__18279) {
    var opts__5101__auto__ = cljs.core.first(arglist__18279);
    var children__5102__auto__ = cljs.core.rest(arglist__18279);
    return rect__delegate(opts__5101__auto__, children__5102__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var svg = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__18280) {
    var opts__5101__auto__ = cljs.core.first(arglist__18280);
    var children__5102__auto__ = cljs.core.rest(arglist__18280);
    return svg__delegate(opts__5101__auto__, children__5102__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var text = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__18281) {
    var opts__5101__auto__ = cljs.core.first(arglist__18281);
    var children__5102__auto__ = cljs.core.rest(arglist__18281);
    return text__delegate(opts__5101__auto__, children__5102__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var defs = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__18282) {
    var opts__5101__auto__ = cljs.core.first(arglist__18282);
    var children__5102__auto__ = cljs.core.rest(arglist__18282);
    return defs__delegate(opts__5101__auto__, children__5102__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var linearGradient = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__18283) {
    var opts__5101__auto__ = cljs.core.first(arglist__18283);
    var children__5102__auto__ = cljs.core.rest(arglist__18283);
    return linearGradient__delegate(opts__5101__auto__, children__5102__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var polygon = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__18284) {
    var opts__5101__auto__ = cljs.core.first(arglist__18284);
    var children__5102__auto__ = cljs.core.rest(arglist__18284);
    return polygon__delegate(opts__5101__auto__, children__5102__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var radialGradient = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__18285) {
    var opts__5101__auto__ = cljs.core.first(arglist__18285);
    var children__5102__auto__ = cljs.core.rest(arglist__18285);
    return radialGradient__delegate(opts__5101__auto__, children__5102__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__5101__auto__, children__5102__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5101__auto__, children__5102__auto__)));
  };
  var stop = function(opts__5101__auto__, var_args) {
    var children__5102__auto__ = null;
    if (arguments.length > 1) {
      children__5102__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__5101__auto__, children__5102__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__18286) {
    var opts__5101__auto__ = cljs.core.first(arglist__18286);
    var children__5102__auto__ = cljs.core.rest(arglist__18286);
    return stop__delegate(opts__5101__auto__, children__5102__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj17939 = {};
  return obj17939;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.display_name[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.display_name["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj17941 = {};
  return obj17941;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.init_state[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.init_state["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj17943 = {};
  return obj17943;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.should_update[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.should_update["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj17945 = {};
  return obj17945;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.will_mount[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.will_mount["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj17947 = {};
  return obj17947;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.did_mount[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.did_mount["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj17949 = {};
  return obj17949;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.will_unmount[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.will_unmount["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj17951 = {};
  return obj17951;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.will_update[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.will_update["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj17953 = {};
  return obj17953;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.did_update[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.did_update["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj17955 = {};
  return obj17955;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.will_receive_props[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.will_receive_props["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj17957 = {};
  return obj17957;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.render[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.render["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj17959 = {};
  return obj17959;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.render_state[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.render_state["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj17961 = {};
  return obj17961;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj17963 = {};
  return obj17963;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = om.core._get_state[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._get_state["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = om.core._get_state[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._get_state["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj17965 = {};
  return obj17965;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = om.core._get_render_state[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._get_render_state["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = om.core._get_render_state[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._get_render_state["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj17967 = {};
  return obj17967;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___2 = function(this$, val) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$2(this$, val);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val);
    }
  };
  var _set_state_BANG___3 = function(this$, ks, val) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, ks, val);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val);
    }
  };
  _set_state_BANG_ = function(this$, ks, val) {
    switch(arguments.length) {
      case 2:
        return _set_state_BANG___2.call(this, this$, ks);
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = _set_state_BANG___2;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj17969 = {};
  return obj17969;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core._get_queue[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._get_queue["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj17971 = {};
  return obj17971;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = om.core._value[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._value["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj17973 = {};
  return obj17973;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3529__auto__ = cursor;
    if (and__3529__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4168__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3541__auto__ = om.core._path[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._path["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3529__auto__ = cursor;
    if (and__3529__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4168__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3541__auto__ = om.core._state[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._state["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj17975 = {};
  return obj17975;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3529__auto__ = value;
      if (and__3529__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4168__auto__ = value == null ? null : value;
      return function() {
        var or__3541__auto__ = om.core._to_cursor[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._to_cursor["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3529__auto__ = value;
      if (and__3529__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4168__auto__ = value == null ? null : value;
      return function() {
        var or__3541__auto__ = om.core._to_cursor[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._to_cursor["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj17977 = {};
  return obj17977;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3529__auto__ = cursor;
    if (and__3529__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4168__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3541__auto__ = om.core._derive[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._derive["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj17979 = {};
  return obj17979;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3529__auto__ = cursor;
    if (and__3529__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4168__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3541__auto__ = om.core._transact_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj17981 = {};
  return obj17981;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = om.core._listen_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = om.core._notify_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__17983 = state;
    if (G__17983) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__17983.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__17983.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__17983);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__17983);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f) : null;
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", 3145885106))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", 1017337751), path, new cljs.core.Keyword(null, "old-value", "old-value", 1451216317), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 3626601078), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1449001181), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    3624385942), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__17985 = x;
  if (G__17985) {
    var bit__4191__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3541__auto__ = bit__4191__auto__;
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return G__17985.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__17985.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__17985);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__17985);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_17987 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17987;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4092__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4092__auto__)) {
    var pending_state = temp__4092__auto__;
    var G__17989 = state;
    G__17989["__om_prev_state"] = state["__om_state"];
    G__17989["__om_state"] = pending_state;
    G__17989["__om_pending_state"] = null;
    return G__17989;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3541__auto__ = props;
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4092__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4092__auto__)) {
      var props_state = temp__4092__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3541__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 2086388618), new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", 4103164189), new cljs.core.Keyword(null, "render", "render", 4374279432), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 2122862542), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 2087784617), new cljs.core.Keyword(null, "componentWillUnmount", 
"componentWillUnmount", 4147620643), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", 3257856604), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 3877103209), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 2219830677), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 3193956709)], [function(next_props, next_state) {
  var this$ = this;
  var c_18017 = om.core.children.call(null, this$);
  if (function() {
    var G__17990 = c_18017;
    if (G__17990) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__17990.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__17990.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__17990);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__17990);
    }
  }()) {
    var state_18018 = this$.state;
    var _STAR_read_enabled_STAR_17991_18019 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_18017, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17991_18019;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__17992 = c;
    if (G__17992) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__17992.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__17992.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__17992);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__17992);
    }
  }()) {
    var state_18020 = this$.state;
    var _STAR_read_enabled_STAR_17993_18021 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3541__auto__ = state_18020["__om_prev_state"];
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return state_18020["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17993_18021;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_17994 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__17995 = c;
      if (G__17995) {
        var bit__4191__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3541__auto__ = bit__4191__auto__;
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return G__17995.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__17995.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__17995);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__17995);
      }
    }()) {
      var _STAR_parent_STAR_17996 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_17997 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_17998 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_17998;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_17997;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_17996;
      }
    } else {
      if (function() {
        var G__17999 = c;
        if (G__17999) {
          var bit__4191__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3541__auto__ = bit__4191__auto__;
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return G__17999.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__17999.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__17999);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__17999);
        }
      }()) {
        var _STAR_parent_STAR_18000 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_18001 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_18002 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_18002;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_18001;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_18000;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return c;
        } else {
          return null;
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17994;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__18003 = c;
    if (G__18003) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__18003.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__18003.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__18003);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__18003);
    }
  }()) {
    var _STAR_read_enabled_STAR_18004 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18004;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__18005 = c;
    if (G__18005) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__18005.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__18005.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__18005);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__18005);
    }
  }()) {
    var _STAR_read_enabled_STAR_18006 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18006;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__18007 = c;
    if (G__18007) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__18007.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__18007.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__18007);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__18007);
    }
  }()) {
    var _STAR_read_enabled_STAR_18008 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18008;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_18022 = om.core.children.call(null, this$);
  if (function() {
    var G__18009 = c_18022;
    if (G__18009) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__18009.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__18009.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__18009);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__18009);
    }
  }()) {
    var _STAR_read_enabled_STAR_18010_18023 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_18022);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18010_18023;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__18011 = c;
    if (G__18011) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__18011.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__18011.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__18011);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__18011);
    }
  }()) {
    var _STAR_read_enabled_STAR_18012 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18012;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3541__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 2663181321)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 2663181321)), function() {
    var G__18013 = c;
    if (G__18013) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__18013.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__18013.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__18013);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__18013);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_18014 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18014;
    }
  }() : null), "__om_id":function() {
    var or__3541__auto__ = id;
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_18015 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__18016 = c;
      if (G__18016) {
        var bit__4191__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3541__auto__ = bit__4191__auto__;
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return G__18016.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__18016.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__18016);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__18016);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, props["__om_cursor"]), om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18015;
  }
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x18027 = obj;
  x18027.om$core$IGetState$ = true;
  x18027.om$core$IGetState$_get_state$arity$1 = function(x18027) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3541__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x18027);
  x18027.om$core$IGetState$_get_state$arity$2 = function(x18027) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x18027);
  x18027.om$core$IGetRenderState$ = true;
  x18027.om$core$IGetRenderState$_get_render_state$arity$1 = function(x18027) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x18027);
  x18027.om$core$IGetRenderState$_get_render_state$arity$2 = function(x18027) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x18027);
  x18027.om$core$ISetState$ = true;
  x18027.om$core$ISetState$_set_state_BANG_$arity$2 = function(x18027) {
    return function(this$, val) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_18028 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var app_state = props["__om_app_state"];
        this$__$1.state["__om_pending_state"] = val;
        if (app_state == null) {
          return null;
        } else {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18028;
      }
    };
  }(x18027);
  x18027.om$core$ISetState$_set_state_BANG_$arity$3 = function(x18027) {
    return function(this$, ks, val) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_18029 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var pstate = om.core._get_state.call(null, this$__$1);
        var app_state = props["__om_app_state"];
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (app_state == null) {
          return null;
        } else {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18029;
      }
    };
  }(x18027);
  return x18027;
};
om.core.Pure = React.createClass(om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods)));
om.core.pure = function pure(obj) {
  return new om.core.Pure(obj);
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2158397195;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__18033 = null;
  var G__18033__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__18033__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__18033 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18033__2.call(this, self__, k);
      case 3:
        return G__18033__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__18033;
}();
om.core.MapCursor.prototype.apply = function(self__, args18030) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18030)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__18031) {
          var vec__18032 = p__18031;
          var k = cljs.core.nth.call(null, vec__18032, 0, null);
          var v = cljs.core.nth.call(null, vec__18032, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2175181595;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__18035 = null;
  var G__18035__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__18035__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__18035 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18035__2.call(this, self__, k);
      case 3:
        return G__18035__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__18035;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args18034) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18034)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x18037 = cljs.core.clone.call(null, val);
  x18037.cljs$core$IEquiv$ = true;
  x18037.cljs$core$IEquiv$_equiv$arity$2 = function(x18037) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
      }
    };
  }(x18037);
  x18037.om$core$ITransact$ = true;
  x18037.om$core$ITransact$_transact_BANG_$arity$4 = function(x18037) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x18037);
  x18037.om$core$ICursor$ = true;
  x18037.om$core$ICursor$_path$arity$1 = function(x18037) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x18037);
  x18037.om$core$ICursor$_state$arity$1 = function(x18037) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x18037);
  x18037.cljs$core$IDeref$ = true;
  x18037.cljs$core$IDeref$_deref$arity$1 = function(x18037) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
      }
    };
  }(x18037);
  return x18037;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__18040 = val;
        if (G__18040) {
          var bit__4191__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3541__auto__ = bit__4191__auto__;
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return G__18040.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__18040.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__18040);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__18040);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__18041 = val;
              if (G__18041) {
                var bit__4191__auto__ = G__18041.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4191__auto__ || G__18041.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__18041.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__18041);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__18041);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return val;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__18046 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__18047 = null;
  var count__18048 = 0;
  var i__18049 = 0;
  while (true) {
    if (i__18049 < count__18048) {
      var f = cljs.core._nth.call(null, chunk__18047, i__18049);
      f.call(null);
      var G__18050 = seq__18046;
      var G__18051 = chunk__18047;
      var G__18052 = count__18048;
      var G__18053 = i__18049 + 1;
      seq__18046 = G__18050;
      chunk__18047 = G__18051;
      count__18048 = G__18052;
      i__18049 = G__18053;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__18046);
      if (temp__4092__auto__) {
        var seq__18046__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18046__$1)) {
          var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__18046__$1);
          var G__18054 = cljs.core.chunk_rest.call(null, seq__18046__$1);
          var G__18055 = c__4297__auto__;
          var G__18056 = cljs.core.count.call(null, c__4297__auto__);
          var G__18057 = 0;
          seq__18046 = G__18054;
          chunk__18047 = G__18055;
          count__18048 = G__18056;
          i__18049 = G__18057;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__18046__$1);
          f.call(null);
          var G__18058 = cljs.core.next.call(null, seq__18046__$1);
          var G__18059 = null;
          var G__18060 = 0;
          var G__18061 = 0;
          seq__18046 = G__18058;
          chunk__18047 = G__18059;
          count__18048 = G__18060;
          i__18049 = G__18061;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "init-state", "init-state", 4479067398), null, new cljs.core.Keyword(null, "ctor", "ctor", 1016968582), null, new cljs.core.Keyword(null, "state", "state", 1123661827), null, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), null, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), null, new cljs.core.Keyword(null, 
  "key", "key", 1014010321), null, new cljs.core.Keyword(null, "instrument", "instrument", 2409387865), null, new cljs.core.Keyword(null, "shared", "shared", 4405305303), null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), null, new cljs.core.Keyword(null, "fn", "fn", 1013907514), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1830611324, null), new cljs.core.Symbol(null, 
      "m", "m", -1640531418, null)))));
    }
    if (m == null) {
      var shared = function() {
        var or__3541__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = function() {
        var or__3541__auto__ = (new cljs.core.Keyword(null, "ctor", "ctor", 1016968582)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return om.core.pure;
        }
      }();
      var pure__5135__auto__ = ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_18066 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor, this$);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18066;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
      pure__5135__auto__.constructor = goog.getUid(f);
      return pure__5135__auto__;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var map__18067 = m;
        var map__18067__$1 = cljs.core.seq_QMARK_.call(null, map__18067) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18067) : map__18067;
        var opts = cljs.core.get.call(null, map__18067__$1, new cljs.core.Keyword(null, "opts", "opts", 1017322386));
        var init_state = cljs.core.get.call(null, map__18067__$1, new cljs.core.Keyword(null, "init-state", "init-state", 4479067398));
        var state = cljs.core.get.call(null, map__18067__$1, new cljs.core.Keyword(null, "state", "state", 1123661827));
        var key = cljs.core.get.call(null, map__18067__$1, new cljs.core.Keyword(null, "key", "key", 1014010321));
        var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", 1013907514));
        var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
          var temp__4090__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(temp__4090__auto__)) {
            var i = temp__4090__auto__;
            return dataf.call(null, cursor, i);
          } else {
            return dataf.call(null, cursor);
          }
        }() : cursor;
        var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563));
        var shared = function() {
          var or__3541__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
          }
        }();
        var ctor = function() {
          var or__3541__auto__ = (new cljs.core.Keyword(null, "ctor", "ctor", 1016968582)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return om.core.pure;
          }
        }();
        var pure__5135__auto__ = ctor.call(null, {"__om_cursor":cursor_SINGLEQUOTE_, "__om_state":state, "__om_shared":shared, "__om_app_state":om.core._STAR_state_STAR_, "__om_instrument":om.core._STAR_instrument_STAR_, "key":rkey, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514)).cljs$core$IFn$_invoke$arity$1(m), "__om_init_state":init_state, "children":opts == null ? function(map__18067, map__18067__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, 
        rkey, shared, ctor) {
          return function(this$) {
            var _STAR_read_enabled_STAR_18068 = om.core._STAR_read_enabled_STAR_;
            try {
              om.core._STAR_read_enabled_STAR_ = true;
              return f.call(null, cursor_SINGLEQUOTE_, this$);
            } finally {
              om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18068;
            }
          };
        }(map__18067, map__18067__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__18067, map__18067__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
          return function(this$) {
            var _STAR_read_enabled_STAR_18069 = om.core._STAR_read_enabled_STAR_;
            try {
              om.core._STAR_read_enabled_STAR_ = true;
              return f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            } finally {
              om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18069;
            }
          };
        }(map__18067, map__18067__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor)});
        pure__5135__auto__.constructor = goog.getUid(f);
        return pure__5135__auto__;
      } else {
        return null;
      }
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_18071 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18071;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", 2667619603))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__18080 = state;
    if (G__18080) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__18080.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__18080.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__18080);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__18080);
    }
  }()) {
  } else {
    var listeners_18088 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_18089 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x18081_18090 = state;
    x18081_18090.om$core$IRenderQueue$ = true;
    x18081_18090.om$core$IRenderQueue$_get_queue$arity$1 = function(x18081_18090, listeners_18088, render_queue_18089) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_18089);
      };
    }(x18081_18090, listeners_18088, render_queue_18089);
    x18081_18090.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x18081_18090, listeners_18088, render_queue_18089) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_18089), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_18089, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x18081_18090, listeners_18088, render_queue_18089);
    x18081_18090.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x18081_18090, listeners_18088, render_queue_18089) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_18089, cljs.core.empty);
      };
    }(x18081_18090, listeners_18088, render_queue_18089);
    x18081_18090.om$core$INotify$ = true;
    x18081_18090.om$core$INotify$_listen_BANG_$arity$3 = function(x18081_18090, listeners_18088, render_queue_18089) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_18088, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x18081_18090, listeners_18088, render_queue_18089);
    x18081_18090.om$core$INotify$_unlisten_BANG_$arity$2 = function(x18081_18090, listeners_18088, render_queue_18089) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_18088, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x18081_18090, listeners_18088, render_queue_18089);
    x18081_18090.om$core$INotify$_notify_BANG_$arity$3 = function(x18081_18090, listeners_18088, render_queue_18089) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        if (tx_listen == null) {
        } else {
          var seq__18082_18091 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_18088));
          var chunk__18083_18092 = null;
          var count__18084_18093 = 0;
          var i__18085_18094 = 0;
          while (true) {
            if (i__18085_18094 < count__18084_18093) {
              var vec__18086_18095 = cljs.core._nth.call(null, chunk__18083_18092, i__18085_18094);
              var __18096 = cljs.core.nth.call(null, vec__18086_18095, 0, null);
              var f_18097 = cljs.core.nth.call(null, vec__18086_18095, 1, null);
              f_18097.call(null, tx_data, root_cursor);
              var G__18098 = seq__18082_18091;
              var G__18099 = chunk__18083_18092;
              var G__18100 = count__18084_18093;
              var G__18101 = i__18085_18094 + 1;
              seq__18082_18091 = G__18098;
              chunk__18083_18092 = G__18099;
              count__18084_18093 = G__18100;
              i__18085_18094 = G__18101;
              continue;
            } else {
              var temp__4092__auto___18102 = cljs.core.seq.call(null, seq__18082_18091);
              if (temp__4092__auto___18102) {
                var seq__18082_18103__$1 = temp__4092__auto___18102;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__18082_18103__$1)) {
                  var c__4297__auto___18104 = cljs.core.chunk_first.call(null, seq__18082_18103__$1);
                  var G__18105 = cljs.core.chunk_rest.call(null, seq__18082_18103__$1);
                  var G__18106 = c__4297__auto___18104;
                  var G__18107 = cljs.core.count.call(null, c__4297__auto___18104);
                  var G__18108 = 0;
                  seq__18082_18091 = G__18105;
                  chunk__18083_18092 = G__18106;
                  count__18084_18093 = G__18107;
                  i__18085_18094 = G__18108;
                  continue;
                } else {
                  var vec__18087_18109 = cljs.core.first.call(null, seq__18082_18103__$1);
                  var __18110 = cljs.core.nth.call(null, vec__18087_18109, 0, null);
                  var f_18111 = cljs.core.nth.call(null, vec__18087_18109, 1, null);
                  f_18111.call(null, tx_data, root_cursor);
                  var G__18112 = cljs.core.next.call(null, seq__18082_18103__$1);
                  var G__18113 = null;
                  var G__18114 = 0;
                  var G__18115 = 0;
                  seq__18082_18091 = G__18112;
                  chunk__18083_18092 = G__18113;
                  count__18084_18093 = G__18114;
                  i__18085_18094 = G__18115;
                  continue;
                }
              } else {
              }
            }
            break;
          }
        }
        return this$__$1;
      };
    }(x18081_18090, listeners_18088, render_queue_18089);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__18116) {
  var map__18131 = p__18116;
  var map__18131__$1 = cljs.core.seq_QMARK_.call(null, map__18131) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18131) : map__18131;
  var options = map__18131__$1;
  var instrument = cljs.core.get.call(null, map__18131__$1, new cljs.core.Keyword(null, "instrument", "instrument", 2409387865));
  var path = cljs.core.get.call(null, map__18131__$1, new cljs.core.Keyword(null, "path", "path", 1017337751));
  var tx_listen = cljs.core.get.call(null, map__18131__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114));
  var target = cljs.core.get.call(null, map__18131__$1, new cljs.core.Keyword(null, "target", "target", 4427965699));
  if (!(target == null)) {
  } else {
    throw new Error("Assert failed: No target specified to om.core/root\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "target", "target", 1773529930, null))))));
  }
  var roots_SINGLEQUOTE__18145 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__18145, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__18145, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__18132 = value;
    if (G__18132) {
      var bit__4191__auto__ = G__18132.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4191__auto__ || G__18132.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__18132.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__18132);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__18132);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114), new cljs.core.Keyword(null, "path", "path", 1017337751));
  var rootf = function(watch_key, state, state__$1, m, map__18131, map__18131__$1, options, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_18139 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_18140 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_18140;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_18139;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__18141_18146 = cljs.core.seq.call(null, queue);
        var chunk__18142_18147 = null;
        var count__18143_18148 = 0;
        var i__18144_18149 = 0;
        while (true) {
          if (i__18144_18149 < count__18143_18148) {
            var c_18150 = cljs.core._nth.call(null, chunk__18142_18147, i__18144_18149);
            if (cljs.core.truth_(c_18150.isMounted())) {
              c_18150.forceUpdate();
            } else {
            }
            var G__18151 = seq__18141_18146;
            var G__18152 = chunk__18142_18147;
            var G__18153 = count__18143_18148;
            var G__18154 = i__18144_18149 + 1;
            seq__18141_18146 = G__18151;
            chunk__18142_18147 = G__18152;
            count__18143_18148 = G__18153;
            i__18144_18149 = G__18154;
            continue;
          } else {
            var temp__4092__auto___18155 = cljs.core.seq.call(null, seq__18141_18146);
            if (temp__4092__auto___18155) {
              var seq__18141_18156__$1 = temp__4092__auto___18155;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__18141_18156__$1)) {
                var c__4297__auto___18157 = cljs.core.chunk_first.call(null, seq__18141_18156__$1);
                var G__18158 = cljs.core.chunk_rest.call(null, seq__18141_18156__$1);
                var G__18159 = c__4297__auto___18157;
                var G__18160 = cljs.core.count.call(null, c__4297__auto___18157);
                var G__18161 = 0;
                seq__18141_18146 = G__18158;
                chunk__18142_18147 = G__18159;
                count__18143_18148 = G__18160;
                i__18144_18149 = G__18161;
                continue;
              } else {
                var c_18162 = cljs.core.first.call(null, seq__18141_18156__$1);
                if (cljs.core.truth_(c_18162.isMounted())) {
                  c_18162.forceUpdate();
                } else {
                }
                var G__18163 = cljs.core.next.call(null, seq__18141_18156__$1);
                var G__18164 = null;
                var G__18165 = 0;
                var G__18166 = 0;
                seq__18141_18146 = G__18163;
                chunk__18142_18147 = G__18164;
                count__18143_18148 = G__18165;
                i__18144_18149 = G__18166;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m, map__18131, map__18131__$1, options, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, m, rootf, map__18131, map__18131__$1, options, instrument, path, tx_listen, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(watch_key, state, state__$1, m, rootf, map__18131, map__18131__$1, options, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, m, rootf, map__18131, map__18131__$1, options, instrument, path, tx_listen, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, m, rootf, map__18131, map__18131__$1, options, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.Keyword(null, "else", "else", 1017020587) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null) : null;
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4092__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4092__auto__)) {
      var refs = temp__4092__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("score_four.board");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
score_four.board.color = cljs.core.cycle.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["red", "black"], null));
score_four.board.play = function play(cell) {
  return om.core.transact_BANG_.call(null, cell, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [0], null), function(state) {
    return "red";
  });
};
score_four.board.cell = function cell(cell__$1, owner) {
  if (typeof score_four.board.t16580 !== "undefined") {
  } else {
    score_four.board.t16580 = function(owner, cell, meta16581) {
      this.owner = owner;
      this.cell = cell;
      this.meta16581 = meta16581;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    score_four.board.t16580.cljs$lang$type = true;
    score_four.board.t16580.cljs$lang$ctorStr = "score_four.board/t16580";
    score_four.board.t16580.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "score_four.board/t16580");
    };
    score_four.board.t16580.prototype.om$core$IRender$ = true;
    score_four.board.t16580.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return React.DOM.td(null, React.DOM.div({"onClick":function(this$__$1) {
        return function(e) {
          return score_four.board.play.call(null, self__.cell);
        };
      }(this$__$1), "className":"hole " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, self__.cell))}, null));
    };
    score_four.board.t16580.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16582) {
      var self__ = this;
      var _16582__$1 = this;
      return self__.meta16581;
    };
    score_four.board.t16580.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16582, meta16581__$1) {
      var self__ = this;
      var _16582__$1 = this;
      return new score_four.board.t16580(self__.owner, self__.cell, meta16581__$1);
    };
    score_four.board.__GT_t16580 = function __GT_t16580(owner__$1, cell__$2, meta16581) {
      return new score_four.board.t16580(owner__$1, cell__$2, meta16581);
    };
  }
  return new score_four.board.t16580(owner, cell__$1, null);
};
score_four.board.row = function row(row__$1, owner) {
  if (typeof score_four.board.t16586 !== "undefined") {
  } else {
    score_four.board.t16586 = function(owner, row, meta16587) {
      this.owner = owner;
      this.row = row;
      this.meta16587 = meta16587;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    score_four.board.t16586.cljs$lang$type = true;
    score_four.board.t16586.cljs$lang$ctorStr = "score_four.board/t16586";
    score_four.board.t16586.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "score_four.board/t16586");
    };
    score_four.board.t16586.prototype.om$core$IRender$ = true;
    score_four.board.t16586.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return cljs.core.apply.call(null, om.dom.tr, null, om.core.build_all.call(null, score_four.board.cell, self__.row));
    };
    score_four.board.t16586.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16588) {
      var self__ = this;
      var _16588__$1 = this;
      return self__.meta16587;
    };
    score_four.board.t16586.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16588, meta16587__$1) {
      var self__ = this;
      var _16588__$1 = this;
      return new score_four.board.t16586(self__.owner, self__.row, meta16587__$1);
    };
    score_four.board.__GT_t16586 = function __GT_t16586(owner__$1, row__$2, meta16587) {
      return new score_four.board.t16586(owner__$1, row__$2, meta16587);
    };
  }
  return new score_four.board.t16586(owner, row__$1, null);
};
score_four.board.board = function board(app, owner) {
  if (typeof score_four.board.t16592 !== "undefined") {
  } else {
    score_four.board.t16592 = function(owner, app, board, meta16593) {
      this.owner = owner;
      this.app = app;
      this.board = board;
      this.meta16593 = meta16593;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    score_four.board.t16592.cljs$lang$type = true;
    score_four.board.t16592.cljs$lang$ctorStr = "score_four.board/t16592";
    score_four.board.t16592.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "score_four.board/t16592");
    };
    score_four.board.t16592.prototype.om$core$IRender$ = true;
    score_four.board.t16592.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return cljs.core.apply.call(null, om.dom.table, {"id":"board"}, om.core.build_all.call(null, score_four.board.row, self__.app));
    };
    score_four.board.t16592.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16594) {
      var self__ = this;
      var _16594__$1 = this;
      return self__.meta16593;
    };
    score_four.board.t16592.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16594, meta16593__$1) {
      var self__ = this;
      var _16594__$1 = this;
      return new score_four.board.t16592(self__.owner, self__.app, self__.board, meta16593__$1);
    };
    score_four.board.__GT_t16592 = function __GT_t16592(owner__$1, app__$1, board__$1, meta16593) {
      return new score_four.board.t16592(owner__$1, app__$1, board__$1, meta16593);
    };
  }
  return new score_four.board.t16592(owner, app, board, null);
};
goog.provide("score_four.core");
goog.require("cljs.core");
goog.require("score_four.board");
goog.require("score_four.board");
goog.require("om.core");
goog.require("om.core");
score_four.core.app_state = cljs.core.atom.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null)], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), 
new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null)], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null)], null), new cljs.core.PersistentVector(null, 
7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null)], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], 
null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null)], 
null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["white"], null)], null)], null));
om.core.root.call(null, score_four.board.board, score_four.core.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById("app")], null));
